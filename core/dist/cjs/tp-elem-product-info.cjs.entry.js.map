{"file":"tp-elem-product-info.entry.cjs.js","mappings":"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","names":["ApiCart","ApiProduct","h","Host","currency"],"sources":["src/components/elementor/ecommerce/feature/product-info/product-info.scss?tag=tp-elem-product-info&encapsulation=scoped","src/components/elementor/ecommerce/feature/product-info/product-info.tsx"],"sourcesContent":[".product-info {\r\n  &__message {\r\n    display: block;\r\n    margin-top: 24px;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Event,\r\n  EventEmitter,\r\n  Host,\r\n  Listen,\r\n  Prop,\r\n  State,\r\n  h,\r\n} from '@stencil/core';\r\nimport { ApiCart } from '../../../../../utils/api/ecommerce/cart.api';\r\nimport { ApiProduct } from '../../../../../utils/api/ecommerce/product.api';\r\nimport { ProductCategoryWithUrl } from '../../../../../utils/api/ecommerce/utils/interfaces/product.interface';\r\nimport { currency } from '../../../../../utils/filters/currency.filter';\r\nimport { AddToCartData, ProductInfo } from './utils/product-info.interface';\r\nimport { CartInfo } from '../../../../../utils/api/ecommerce/utils/interfaces/cart.interface';\r\n\r\n@Component({\r\n  tag: 'tp-elem-product-info',\r\n  styleUrl: 'product-info.scss',\r\n  scoped: true,\r\n})\r\nexport class TpElemProductInfo {\r\n  /**\r\n   * ID do produto.\r\n   */\r\n  @Prop({ reflect: true }) productId: number;\r\n\r\n  /**\r\n   * Dados do produto à mostra.\r\n   */\r\n  @State() productInfo: ProductInfo;\r\n\r\n  /**\r\n   * Emite o evento updatedCart.\r\n   */\r\n  @Event() updatedCart: EventEmitter<CartInfo>;\r\n\r\n  categoriesWithUrl: ProductCategoryWithUrl[];\r\n\r\n  @Listen('addToCartEvent')\r\n  async handleAddToCart(event: CustomEvent<AddToCartData>) {\r\n    const { productId, quantity } = event.detail;\r\n\r\n    try {\r\n      const { success, productName, cart, cartTotal, cartCount } =\r\n        await ApiCart.addToCart(productId, quantity);\r\n      this.productInfo = { ...this.productInfo, isFeedbackSuccess: success };\r\n\r\n      if (this.productInfo.isFeedbackSuccess) {\r\n        this.productInfo = {\r\n          ...this.productInfo,\r\n          feedbackMessage: `${productName} foi adicionado ao carrinho!`,\r\n        };\r\n\r\n        const cartInfo: CartInfo = { cart, cartTotal, cartCount };\r\n        this.updatedCart.emit(cartInfo);\r\n      } else {\r\n        this.productInfo = {\r\n          ...this.productInfo,\r\n          feedbackMessage: `${productName} não foi adicionado ao carrinho!`,\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  // TODO - deletar, era só pra testar se emite o evento\r\n  @Listen('updatedCart')\r\n  handleUpdatedCartCount(event: CustomEvent<CartInfo>) {\r\n    console.log(event.detail);\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    // TODO await trava a renderização do componente, usar skeleton das partes\r\n    // e tirar o await depois pro componente ficar mais fluido\r\n    await this.updateProductData();\r\n  }\r\n\r\n  async updateProductData() {\r\n    const [product, availableCategories] = await Promise.all([\r\n      await ApiProduct.getProductById(this.productId),\r\n      await ApiProduct.getCategories(),\r\n    ]);\r\n\r\n    this.productInfo = {\r\n      ...product,\r\n      isFeedbackSuccess: false,\r\n      feedbackMessage: '',\r\n    };\r\n\r\n    this.categoriesWithUrl = product.categories.map((productCategory) =>\r\n      availableCategories.find(\r\n        (availableCategory) => availableCategory.id == productCategory.id,\r\n      ),\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { productId, categoriesWithUrl } = this;\r\n\r\n    const {\r\n      name,\r\n      description,\r\n      images,\r\n      manageStock,\r\n      stockStatus,\r\n      stockQuantity,\r\n      type,\r\n      externalUrl,\r\n      regularPrice,\r\n      price,\r\n      onSale,\r\n      sku,\r\n      categories,\r\n      attributes,\r\n      isFeedbackSuccess,\r\n      feedbackMessage,\r\n    } = this.productInfo;\r\n\r\n    const productData = {\r\n      id: productId,\r\n      stockQuantity,\r\n      stockStatus,\r\n      type,\r\n      // isFeedbackSuccess,\r\n      // feedbackMessage,\r\n    };\r\n\r\n    const hasStock =\r\n      (manageStock && stockQuantity >= 1) ||\r\n      (!manageStock && stockStatus === 'instock');\r\n    const stock =\r\n      stockQuantity == 1\r\n        ? ` (${stockQuantity} unidade)`\r\n        : ` (${stockQuantity} unidades)`;\r\n\r\n    const attributesList = attributes.map((attribute) => {\r\n      const { name, options } = attribute;\r\n\r\n      return (\r\n        <ion-text color=\"neutral-8\" tp-type=\"p14x\">\r\n          <span>\r\n            {name}: {options.join(', ')}\r\n          </span>\r\n        </ion-text>\r\n      );\r\n    });\r\n\r\n    const categoriesLinks = categoriesWithUrl.map((category) => {\r\n      const { name, url } = category;\r\n\r\n      return (\r\n        <ion-button color=\"brand\" fill=\"clear\" href={url}>\r\n          {name}\r\n        </ion-button>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Host>\r\n        <div class=\"product-info\">\r\n          <tp-elem-product-detail productData={productData}>\r\n            <tp-images-carousel\r\n              slot=\"image\"\r\n              images={images}\r\n              thumbs={images.length > 1}\r\n              zoom\r\n            ></tp-images-carousel>\r\n            <ion-text tp-type=\"h32x\" slot=\"title\">\r\n              <h2>{name}</h2>\r\n            </ion-text>\r\n\r\n            {onSale && regularPrice && (\r\n              <ion-text color=\"neutral-7\" tp-type=\"p16x\" slot=\"regular-price\">\r\n                <span>{currency(regularPrice, 'pt-br')}</span>\r\n              </ion-text>\r\n            )}\r\n\r\n            <ion-text color=\"neutral-7\" tp-type=\"p16xb\" slot=\"price\">\r\n              <span>{currency(price, 'pt-br')}</span>\r\n            </ion-text>\r\n            <ion-text color=\"neutral-8\" tp-type=\"p16x\" slot=\"description\">\r\n              <p>{description.replace('<p>', '').replace('</p>', '')}</p>\r\n            </ion-text>\r\n\r\n            <div slot=\"stock\">\r\n              <ion-text color=\"neutral-8\" tp-type=\"p14x\">\r\n                <p>\r\n                  {hasStock ? 'Produto em estoque' : 'Produto esgotado'}\r\n                  {manageStock && stock}\r\n                </p>\r\n              </ion-text>\r\n            </div>\r\n\r\n            <ion-text color=\"neutral-8\" tp-type=\"p14x\" slot=\"sku\">\r\n              <span>SKU: {sku}</span>\r\n            </ion-text>\r\n\r\n            {attributes && <div slot=\"attributes\">{attributesList}</div>}\r\n\r\n            {categories && (\r\n              <div slot=\"categories\">\r\n                <ion-text color=\"neutral-8\" tp-type=\"p14x\">\r\n                  <span>Categorias:</span>\r\n                </ion-text>\r\n                {categoriesLinks}\r\n              </div>\r\n            )}\r\n\r\n            {/* só é renderizado na tela se externalAction é true, se type === 'external' */}\r\n            <ion-button\r\n              color=\"brand\"\r\n              href={externalUrl}\r\n              target=\"_blank\"\r\n              slot=\"action\"\r\n            >\r\n              Comprar (página externa)\r\n            </ion-button>\r\n          </tp-elem-product-detail>\r\n\r\n          {feedbackMessage && (\r\n            <ion-text\r\n              class=\"product-info__message\"\r\n              color={isFeedbackSuccess ? 'success' : 'warning'}\r\n              tp-type=\"p16x\"\r\n            >\r\n              <p>{feedbackMessage}</p>\r\n            </ion-text>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}