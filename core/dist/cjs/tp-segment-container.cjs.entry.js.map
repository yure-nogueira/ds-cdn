{"file":"tp-segment-container.entry.cjs.js","mappings":";;;;;;AAAO,MAAM,wBAAwB,GAAG,+BAA+B,CAAC;AACjE,MAAM,8BAA8B,GACzC,qCAAqC;;ACFvC,IAAY,0BAGX;AAHD,WAAY,0BAA0B;IACpC,6CAAe,CAAA;IACf,yCAAW,CAAA;AACb,CAAC,EAHW,0BAA0B,KAA1B,0BAA0B;;ACAtC,MAAM,mBAAmB,GAAG,ytDAAytD;;MCaxuD,kBAAkB;;;;IAM7B,gBAAgB;QACd,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CACjD,IAAI,wBAAwB,EAAE,CACb,CAAC;QAEpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;QAEzE,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC;SAClD;QAED,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KAC3E;IAED,WAAW,CAAC,QAA4C;QACtD,IACE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAC3B,GAAG,8BAA8B,IAAI,QAAQ,EAAE,CAChD,EACD;YACA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,8BAA8B,IAAI,QAAQ,EAAE,CAAC,CAAC;SAC1E;KACF;IAED,cAAc,CAAC,QAA4C;QACzD,IACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAC1B,GAAG,8BAA8B,IAAI,QAAQ,EAAE,CAChD,EACD;YACA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CACxB,GAAG,8BAA8B,IAAI,QAAQ,EAAE,CAChD,CAAC;SACH;KACF;IAED,cAAc;QACZ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,cAAc,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;YACtD,IAAI,CAAC,cAAc,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC;YACpD,OAAO;SACR;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,KAAK,CAAC,CAAC;QAClD,MAAM,OAAO,GACX,IAAI,CAAC,SAAS,CAAC,WAAW;YACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;YACpE,IAAI,CAAC,SAAS,CAAC,WAAW;gBACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAEtE,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,cAAc,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;SACvD;QAED,IAAI,CAAC,SAAS,EAAE;YACd,IAAI,CAAC,WAAW,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;SACpD;QAED,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,cAAc,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC;SACrD;QAED,IAAI,CAAC,OAAO,EAAE;YACZ,IAAI,CAAC,WAAW,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC;SAClD;KACF;IAGD,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;QACzE,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAED,oBAAoB;QAClB,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAChC,QAAQ,EACR,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAC/B,CAAC;KACH;IAED,MAAM;QACJ,QACEA,QAACC,UAAI,IAAC,KAAK,EAAC,sBAAsB,IAChCD,iBAAK,KAAK,EAAC,+BAA+B,IACxCA,qBAAQ,EACRA,iBAAK,KAAK,EAAC,gCAAgC,GAAO,CAC9C,CACD,EACP;KACH;;;;;;;","names":["h","Host"],"sources":["src/components/templarios/segment-container/utils/segment-container.constant.ts","src/components/templarios/segment-container/utils/segment-container.enum.ts","src/components/templarios/segment-container/segment-container.scss?tag=tp-segment-container&encapsulation=shadow","src/components/templarios/segment-container/segment-container.tsx"],"sourcesContent":["export const TP_SEGMENT_WRAPPER_CLASS = 'tp-segment-container__wrapper';\nexport const TP_SEGMENT_GRADIENT_SHOW_CLASS =\n  'tp-segment-container--show-gradient';\n","export enum TpSegmentContainerGradient {\n  START = 'start',\n  END = 'end',\n}\n","@import './../../../styles/definitions/scroll';\n\n:host {\n  position: relative;\n  overflow: hidden;\n}\n\n.tp-segment-container {\n  &__wrapper {\n    display: flex;\n    overflow-x: auto;\n    @include generate-scroll-style();\n  }\n\n  &__gradient {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n\n    &::before,\n    &::after {\n      position: absolute;\n      top: 0;\n      display: none;\n      width: 32px;\n      height: 100%;\n      content: '';\n    }\n\n    &::before {\n      left: 0;\n      background: linear-gradient(\n        to left,\n        transparent,\n        var(--tp-color-neutral-2)\n      );\n    }\n\n    &::after {\n      right: 0;\n      background: linear-gradient(\n        to right,\n        transparent,\n        var(--tp-color-neutral-2)\n      );\n    }\n  }\n}\n\n:host(.tp-segment-container--show-gradient-start) {\n  .tp-segment-container__gradient::before {\n    display: block;\n  }\n}\n\n:host(.tp-segment-container--show-gradient-end) {\n  .tp-segment-container__gradient::after {\n    display: block;\n  }\n}\n","import { Component, Element, Host, Listen, h } from '@stencil/core';\nimport {\n  TP_SEGMENT_WRAPPER_CLASS,\n  TP_SEGMENT_GRADIENT_SHOW_CLASS,\n} from './utils/segment-container.constant';\nimport { TpSegmentContainerGradient } from './utils/segment-container.enum';\nimport { TpSegmentContainerType } from './utils/segment-container.type';\n\n@Component({\n  tag: 'tp-segment-container',\n  styleUrl: 'segment-container.scss',\n  shadow: true,\n})\nexport class TpSegmentContainer {\n  private wrapperEl: HTMLDivElement;\n  private hasScroll: boolean;\n\n  @Element() host!: HTMLElement;\n\n  componentDidLoad() {\n    this.wrapperEl = this.host.shadowRoot.querySelector(\n      `.${TP_SEGMENT_WRAPPER_CLASS}`,\n    ) as HTMLDivElement;\n\n    this.hasScroll = this.wrapperEl.scrollWidth > this.wrapperEl.clientWidth;\n\n    if (this.hasScroll) {\n      this.addGradient(TpSegmentContainerGradient.END);\n    }\n\n    this.wrapperEl.addEventListener('scroll', this.updateGradient.bind(this));\n  }\n\n  addGradient(position: TpSegmentContainerType['position']) {\n    if (\n      !this.host.classList.contains(\n        `${TP_SEGMENT_GRADIENT_SHOW_CLASS}-${position}`,\n      )\n    ) {\n      this.host.classList.add(`${TP_SEGMENT_GRADIENT_SHOW_CLASS}-${position}`);\n    }\n  }\n\n  removeGradient(position: TpSegmentContainerType['position']) {\n    if (\n      this.host.classList.contains(\n        `${TP_SEGMENT_GRADIENT_SHOW_CLASS}-${position}`,\n      )\n    ) {\n      this.host.classList.remove(\n        `${TP_SEGMENT_GRADIENT_SHOW_CLASS}-${position}`,\n      );\n    }\n  }\n\n  updateGradient() {\n    if (!this.hasScroll) {\n      this.removeGradient(TpSegmentContainerGradient.START);\n      this.removeGradient(TpSegmentContainerGradient.END);\n      return;\n    }\n\n    const isAtStart = this.wrapperEl.scrollLeft === 0;\n    const isAtEnd =\n      this.wrapperEl.scrollWidth ===\n        Math.floor(this.wrapperEl.clientWidth + this.wrapperEl.scrollLeft) ||\n      this.wrapperEl.scrollWidth ===\n        Math.ceil(this.wrapperEl.clientWidth + this.wrapperEl.scrollLeft);\n\n    if (isAtStart) {\n      this.removeGradient(TpSegmentContainerGradient.START);\n    }\n\n    if (!isAtStart) {\n      this.addGradient(TpSegmentContainerGradient.START);\n    }\n\n    if (isAtEnd) {\n      this.removeGradient(TpSegmentContainerGradient.END);\n    }\n\n    if (!isAtEnd) {\n      this.addGradient(TpSegmentContainerGradient.END);\n    }\n  }\n\n  @Listen('resize', { target: 'window' })\n  onWindowReize() {\n    this.hasScroll = this.wrapperEl.scrollWidth > this.wrapperEl.clientWidth;\n    this.updateGradient();\n  }\n\n  disconnectedCallback() {\n    this.wrapperEl.removeEventListener(\n      'scroll',\n      this.updateGradient.bind(this),\n    );\n  }\n\n  render() {\n    return (\n      <Host class=\"tp-segment-container\">\n        <div class=\"tp-segment-container__wrapper\">\n          <slot />\n          <div class=\"tp-segment-container__gradient\"></div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}