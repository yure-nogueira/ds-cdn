{"file":"tp-chart-radial.entry.cjs.js","mappings":";;;;;;;AAAA,MAAM,cAAc,GAAG,uoGAAuoG;;MCYjpG,aAAa;;;;;qBAgB8B,EAAE;;IAGxD,iBAAiB;QACf,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CACtD,4BAA4B,CAC7B,CAAC;QAEF,UAAU,CAAC,OAAO,CAAC,CAAC,QAAQ;YAC1B,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACpD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACnC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,kBAAkB,IAAI,CAAC,KAAK,GAAG,CAAC;SACzD,CAAC,CAAC;KACJ;IAED,gBAAgB;QACd,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC1B;IAED,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QAEpC,MAAM,cAAc,GAAG;YACrB,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,EAAc;SACxB,CAAC;QAEF,KAAK,CAAC,OAAO,CAAC,CAAC,IAAuB;YACpC,cAAc,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC;YACtC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SACnD,CAAC,CAAC;QAEH,MAAM,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QAE/C,QACEA,QAACC,UAAI,IACH,KAAK,EAAEC,iCAAkB,CAAC,KAAK,EAAE;gBAC/B,iBAAiB,EAAE,IAAI;gBACvB,CAAC,oBAAoB,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;aAC5C,CAAC,IAEFF,iBAAK,KAAK,EAAC,4BAA4B,EAAC,OAAO,EAAC,WAAW,IACzDA,oBAAQ,KAAK,EAAC,wBAAwB,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAC,IAAI,GAAG,EAC/D,aAAa,CAAC,GAAG,CAAC,CAAC,IAAuB,EAAEG,OAAa;YACxD,MAAM,aAAa,GAAG,KAAK,CAAC,MAAM,GAAGA,OAAK,GAAG,CAAC,CAAC;YAC/C,MAAM,kBAAkB,GACtB,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,cAAc,CAAC,KAAK;gBAC7D,GAAG,CAAC;YAEN,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjC,QACEH,oBACE,EAAE,EAAC,IAAI,EACP,EAAE,EAAC,IAAI,EACP,CAAC,EAAC,IAAI,gBACM,aAAa,EACzB,KAAK,EAAC,2BAA2B,EACjC,KAAK,EAAE;wBACL,0BAA0B,EAAE,GAAG,kBAAkB,EAAE;qBACpD,GACD,EACF;aACH;SACF,CAAC,CACE,EAENA,iBAAK,KAAK,EAAC,iCAAiC,IAC1CA,kBAAM,IAAI,EAAC,OAAO,GAAQ,EAC1BA,kBAAM,IAAI,EAAC,UAAU,GAAQ,CACzB,CACD,EACP;KACH;;;;;;;;;;;","names":["h","Host","createColorClasses","index"],"sources":["src/components/templarios/chart-radial/chart-radial.scss?tag=tp-chart-radial&encapsulation=shadow","src/components/templarios/chart-radial/chart-radial.tsx"],"sourcesContent":["@use 'sass:map';\n\n/**\n  * @prop --tp-progress-percentage: Propriedade definida dinamicamente no tsx. Define o progresso de um barra circular.\n  * @prop --tp-size: Define o tamanho do componente.\n  * @prop --tp-title-font-size: Define o font-size do título do componente.\n  * @prop --tp-title-line-height: Define o line-height do título do componente.\n  * @prop --tp-subtitle-font-size: Define o font-size do subtítulo do componente.\n  * @prop --tp-subtitle-line-height: Define o line-height do subtítulo do componente.\n*/\n\n$tp-chart-radial-sizes: (\n  xs: (\n    properties: (\n      tp-size: 48px,\n      tp-title-font-size: 12px,\n      tp-title-line-height: 12px,\n    ),\n    rules: (\n      display: none,\n    ),\n  ),\n  sm: (\n    properties: (\n      tp-size: 56px,\n      tp-title-font-size: 14px,\n      tp-title-line-height: 16px,\n    ),\n    rules: (\n      display: none,\n    ),\n  ),\n  md: (\n    properties: (\n      tp-size: 80px,\n      tp-title-font-size: 16px,\n      tp-title-line-height: 16px,\n      tp-subtitle-font-size: 10px,\n      tp-subtitle-line-height: 12px,\n    ),\n    rules: (\n      display: initial,\n    ),\n  ),\n  lg: (\n    properties: (\n      tp-size: 108px,\n      tp-title-font-size: 20px,\n      tp-title-line-height: 20px,\n      tp-subtitle-font-size: 12px,\n      tp-subtitle-line-height: 12px,\n    ),\n    rules: (\n      display: initial,\n    ),\n  ),\n);\n\n:host {\n  position: relative;\n  display: flex;\n  width: var(--tp-size, 56px);\n  height: var(--tp-size, 56px);\n}\n\n.tp-chart-radial {\n  &__container {\n    width: var(--tp-size, 56px);\n    height: var(--tp-size, 56px);\n  }\n\n  &__track,\n  &__progress {\n    transform: rotate(-90deg);\n    transform-origin: 18px 18px;\n    transition: 1s ease-in-out;\n    fill: none;\n    stroke-dashoffset: 0;\n    stroke-width: 2;\n    stroke-linecap: round;\n    stroke-linejoin: round;\n  }\n\n  &__track {\n    stroke: var(--tp-color-neutral-2);\n  }\n\n  &__progress {\n    stroke-dasharray: var(--tp-progress-percentage) 100;\n  }\n\n  &__text-container {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    transform: translate(-50%, -50%);\n\n    ::slotted(ion-label[slot='title']) {\n      font-weight: 600 !important;\n      font-size: 14px !important;\n      line-height: 16px !important;\n    }\n\n    ::slotted(ion-label[slot='subtitle']) {\n      display: none;\n      font-weight: 400 !important;\n    }\n  }\n}\n\n//\n// color\n//\n:host(.tp-color) .tp-chart-radial__track {\n  stroke: var(--tp-color-base);\n}\n\n//\n// size\n//\n@each $size-name, $size-value in $tp-chart-radial-sizes {\n  $properties-map: map.get($size-value, properties);\n  $rules-map: map.get($size-value, rules);\n\n  :host(.tp-chart-radial--#{$size-name}) {\n    @if ($properties-map) {\n      @each $properties-name, $properties-value in $properties-map {\n        --#{$properties-name}: #{$properties-value};\n      }\n    }\n  }\n\n  :host(.tp-chart-radial--#{$size-name}) .tp-chart-radial__text-container {\n    ::slotted(ion-label[slot='title']) {\n      font-size: var(--tp-title-font-size) !important;\n      line-height: var(--tp-title-line-height) !important;\n    }\n\n    ::slotted(ion-label[slot='subtitle']) {\n      font-size: var(--tp-subtitle-font-size) !important;\n      line-height: var(--tp-subtitle-line-height) !important;\n\n      @if ($rules-map) {\n        @each $rules-name, $rules-value in $rules-map {\n          #{$rules-name}: #{$rules-value};\n        }\n      }\n    }\n  }\n}\n","import { Component, Element, Host, Prop, Watch, h } from '@stencil/core';\nimport { createColorClasses } from '../../../utils/functions/color.function';\nimport type { TpColor } from '../../../utils/types/color.type';\nimport { TpChartRadialSize } from './utils/chart-radial.enum';\nimport { TpChartRadialItem } from './utils/chart-radial.type';\n\n@Component({\n  tag: 'tp-chart-radial',\n  styleUrl: 'chart-radial.scss',\n  assetsDirs: ['assets'],\n  shadow: true,\n})\nexport class TpChartRadial {\n  @Element() host: HTMLElement;\n\n  /**\n   * Define a variação de cor do componente.\n   */\n  @Prop({ reflect: true }) color?: TpColor;\n\n  /**\n   * Define a variação de tamanho do componente.\n   */\n  @Prop({ reflect: true }) size?: TpChartRadialSize;\n\n  /**\n   * Define o valor representado pelo componente.\n   */\n  @Prop({ reflect: true }) items: TpChartRadialItem[] = [];\n\n  @Watch('items')\n  updateTrackColors() {\n    const progresses = this.host.shadowRoot.querySelectorAll<HTMLElement>(\n      '.tp-chart-radial__progress',\n    );\n\n    progresses.forEach((progress) => {\n      const itemIndex = Number(progress.dataset['index']);\n      const item = this.items[itemIndex];\n      progress.style.stroke = `var(--tp-color-${item.color})`;\n    });\n  }\n\n  componentDidLoad() {\n    this.updateTrackColors();\n  }\n\n  render() {\n    const { color, size, items } = this;\n\n    const progressesData = {\n      total: 0,\n      singles: [] as number[],\n    };\n\n    items.forEach((item: TpChartRadialItem) => {\n      progressesData.total += item.quantity;\n      progressesData.singles.push(progressesData.total);\n    });\n\n    const reversedItems = items.slice(0).reverse();\n\n    return (\n      <Host\n        class={createColorClasses(color, {\n          'tp-chart-radial': true,\n          [`tp-chart-radial--${size}`]: Boolean(size),\n        })}\n      >\n        <svg class=\"tp-chart-radial__container\" viewBox=\"0 0 36 36\">\n          <circle class=\"tp-chart-radial__track\" cx=\"18\" cy=\"18\" r=\"16\" />\n          {reversedItems.map((item: TpChartRadialItem, index: number) => {\n            const originalIndex = items.length - index - 1;\n            const progressPercentage =\n              (progressesData.singles[originalIndex] / progressesData.total) *\n              100;\n\n            if (!item.ignore && item.quantity) {\n              return (\n                <circle\n                  cx=\"18\"\n                  cy=\"18\"\n                  r=\"16\"\n                  data-index={originalIndex}\n                  class=\"tp-chart-radial__progress\"\n                  style={{\n                    '--tp-progress-percentage': `${progressPercentage}`,\n                  }}\n                />\n              );\n            }\n          })}\n        </svg>\n\n        <div class=\"tp-chart-radial__text-container\">\n          <slot name=\"title\"></slot>\n          <slot name=\"subtitle\"></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}