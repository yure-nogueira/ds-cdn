{"file":"tp-context-menu.entry.cjs.js","mappings":";;;;;;;AAEO,MAAM,eAAe,GAAG;IAC7B,KAAK,EAAE;QACL,YAAY,EAAEA,kBAAY,CAAC,+BAA+B,CAAC;KAC5D;CACF;;ACND,MAAM,cAAc,GAAG,m2FAAm2F,CAAC;AAC33F,4BAAe,cAAc;;MCoBhB,aAAa;;;;;qCASyB,IAAI;yBAKhC,IAAI;;;;;IAezB,MAAM;QACJ,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACtC;;;;IAKD,iBAAiB;QACf,IAAI,IAAI,CAAC,qBAAqB,KAAK,IAAI,CAAC,SAAS,EAAE;YACjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC;SAC7C;KACF;;;;IAMD,mBAAmB,CAAC,KAAiB;QACnC,MAAM,MAAM,GAAG,KAAK,CAAC,MAAc,CAAC;QAEpC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAClD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;KACF;IAGD,gBAAgB,CAAC,EAAiB;QAChC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC,GAAG,KAAK,QAAQ,EAAE;YAC1C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;KACF;IAED,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QAElC,QACEC,QAACC,UAAI,qDACH,KAAK,EAAEC,iCAAkB,CAAC,KAAK,EAAE;gBAC/B,iBAAiB,EAAE,IAAI;gBACvB,4BAA4B,EAAE,SAAS;aACxC,CAAC,IAEFF,4FAEE,OAAO,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,EAC5B,KAAK,EAAC,yBAAyB,EAC/B,IAAI,EAAC,OAAO;;YAEZ,IAAI,EAAC,IAAI,IAETA,uEACE,IAAI,EAAC,WAAW,EAChB,KAAK,EAAC,uBAAuB,EAC7B,GAAG,EAAE,eAAe,CAAC,KAAK,CAAC,YAAY,GAC7B,CACD,EAEbA,kEAAK,KAAK,EAAC,0BAA0B,IACnCA,kEAAK,KAAK,EAAC,sBAAsB,IAC/BA,4FAEE,OAAO,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,EAC5B,KAAK,EAAC,+BAA+B,EACrC,IAAI,EAAC,OAAO;;YAEZ,IAAI,EAAC,IAAI,IAETA,uEACE,IAAI,EAAC,WAAW,EAChB,KAAK,EAAC,6BAA6B,EACnC,GAAG,EAAE,eAAe,CAAC,KAAK,CAAC,YAAY,GAC7B,CACD,EACbA,oEACEA,mEAAM,IAAI,EAAC,MAAM,GAAQ,CACrB,CACF,EACNA,mEAAM,IAAI,EAAC,MAAM,GAAQ,CACrB,CACD,EACP;KACH;;;;;;;;","names":["getAssetPath","h","Host","createColorClasses"],"sources":["src/components/core/context-menu/utils/context-menu.constant.ts","src/components/core/context-menu/context-menu.scss?tag=tp-context-menu&encapsulation=scoped","src/components/core/context-menu/context-menu.tsx"],"sourcesContent":["import { getAssetPath } from '@stencil/core';\r\n\r\nexport const TP_CONTEXT_MENU = {\r\n  icons: {\r\n    moreVertical: getAssetPath('./assets/tp-more-vertical.svg'),\r\n  },\r\n};\r\n",":host {\r\n  --tp-background: var(--tp-color-neutral-3);\r\n  --tp-color: var(--tp-color-neutral-10);\r\n  --tp-z-index: 1;\r\n}\r\n\r\n:host(.tp-context-menu) {\r\n  display: block;\r\n  position: relative;\r\n\r\n  .tp-context-menu {\r\n    &__content {\r\n      z-index: var(--tp-z-index);\r\n      position: absolute;\r\n      background: var(--tp-background);\r\n      right: -8px;\r\n      top: -8px;\r\n      width: 264px;\r\n      max-width: 264px;\r\n      box-shadow:\r\n        0 0 2px rgba(0, 0, 0, 0.14),\r\n        0 4px 5px rgba(0, 0, 0, 0.12),\r\n        0 1px 10px rgba(0, 0, 0, 0.2);\r\n      border-radius: 8px;\r\n      padding: 16px;\r\n      visibility: visible;\r\n      opacity: 1;\r\n      transition: all 300ms ease-in-out;\r\n    }\r\n\r\n    &__top {\r\n      display: flex;\r\n    }\r\n\r\n    &__button {\r\n      --font-size: 24px;\r\n    }\r\n\r\n    &__icon {\r\n      margin-right: 0;\r\n    }\r\n\r\n    &__inner-button {\r\n      --font-size: 24px;\r\n      position: absolute;\r\n      right: 8px;\r\n      top: 9px;\r\n    }\r\n\r\n    &__inner-icon {\r\n      stroke: var(--tp-color-neutral-10);\r\n      font-size: 24px;\r\n    }\r\n  }\r\n\r\n  ::slotted(ion-item) {\r\n    --background: var(--tp-color-neutral-3);\r\n  }\r\n\r\n  ::slotted(*[slot='item']):not(:last-child) {\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  ::slotted(*[slot='info']) {\r\n    display: block;\r\n    text-align: center;\r\n    margin-top: 16px;\r\n  }\r\n}\r\n\r\n//\r\n// state\r\n//\r\n\r\n:host(.tp-context-menu--collapsed) {\r\n  .tp-context-menu__content {\r\n    --tp-z-index: 0;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n//\r\n// color\r\n//\r\n\r\n:host(.tp-color) {\r\n  --tp-background: var(--tp-color-base);\r\n\r\n  .tp-context-menu__button {\r\n    color: var(--tp-color-base);\r\n  }\r\n\r\n  .tp-context-menu__inner-button {\r\n    color: var(--tp-color-contrast);\r\n  }\r\n\r\n  ::slotted(ion-item) {\r\n    --background: var(--tp-color-base);\r\n\r\n    ion-icon {\r\n      color: var(--tp-color-contrast);\r\n    }\r\n\r\n    ion-text {\r\n      color: var(--tp-color-contrast);\r\n    }\r\n  }\r\n\r\n  ::slotted(ion-text) {\r\n    color: var(--tp-color-contrast);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n  h,\r\n  Host,\r\n  Listen,\r\n  Prop,\r\n  State,\r\n} from '@stencil/core';\r\nimport { createColorClasses } from '../../../utils/functions/color.function';\r\nimport { TpColor } from '../../../utils/types/color.type';\r\nimport { TP_CONTEXT_MENU } from './utils/context-menu.constant';\r\n\r\n@Component({\r\n  tag: 'tp-context-menu',\r\n  styleUrl: 'context-menu.scss',\r\n  assetsDirs: ['assets'],\r\n  scoped: true,\r\n})\r\nexport class TpContextMenu {\r\n  /**\r\n   * Define a variação de cor do componente.\r\n   */\r\n  @Prop({ reflect: true }) color: TpColor;\r\n\r\n  /**\r\n   * Define o estato inicial do componente.\r\n   */\r\n  @Prop({ reflect: true }) initialCollapsedState = true;\r\n\r\n  /**\r\n   * Define a variação de estado do componente.\r\n   */\r\n  @State() collapsed = true;\r\n\r\n  /**\r\n   * Emitido quando a propriedade collapsed é alterada.\r\n   */\r\n  @Event() tpCollapse: EventEmitter<boolean>;\r\n\r\n  /**\r\n   * Referência ao host.\r\n   */\r\n  @Element() host: HTMLElement;\r\n\r\n  /**\r\n   * Métodos internos.\r\n   */\r\n  toggle() {\r\n    this.collapsed = !this.collapsed;\r\n    this.tpCollapse.emit(this.collapsed);\r\n  }\r\n\r\n  /**\r\n   * Lifecycle hooks.\r\n   */\r\n  componentWillLoad() {\r\n    if (this.initialCollapsedState !== this.collapsed) {\r\n      this.collapsed = this.initialCollapsedState;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Event listeners.\r\n   */\r\n  @Listen('click', { target: 'body' })\r\n  closeOnOutsideClick(event: MouseEvent) {\r\n    const target = event.target as Node;\r\n\r\n    if (!this.collapsed && !this.host.contains(target)) {\r\n      this.collapsed = true;\r\n    }\r\n  }\r\n\r\n  @Listen('keydown')\r\n  closeOnEscapeKey(ev: KeyboardEvent) {\r\n    if (!this.collapsed && ev.key === 'Escape') {\r\n      this.collapsed = true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { color, collapsed } = this;\r\n\r\n    return (\r\n      <Host\r\n        class={createColorClasses(color, {\r\n          'tp-context-menu': true,\r\n          'tp-context-menu--collapsed': collapsed,\r\n        })}\r\n      >\r\n        <ion-button\r\n          icon-only\r\n          onClick={() => this.toggle()}\r\n          class=\"tp-context-menu__button\"\r\n          fill=\"clear\"\r\n          // @ts-ignore\r\n          size=\"sm\"\r\n        >\r\n          <ion-icon\r\n            slot=\"icon-only\"\r\n            class=\"tp-context-menu__icon\"\r\n            src={TP_CONTEXT_MENU.icons.moreVertical}\r\n          ></ion-icon>\r\n        </ion-button>\r\n\r\n        <div class=\"tp-context-menu__content\">\r\n          <div class=\"tp-context-menu__top\">\r\n            <ion-button\r\n              icon-only\r\n              onClick={() => this.toggle()}\r\n              class=\"tp-context-menu__inner-button\"\r\n              fill=\"clear\"\r\n              // @ts-ignore\r\n              size=\"sm\"\r\n            >\r\n              <ion-icon\r\n                slot=\"icon-only\"\r\n                class=\"tp-context-menu__inner-icon\"\r\n                src={TP_CONTEXT_MENU.icons.moreVertical}\r\n              ></ion-icon>\r\n            </ion-button>\r\n            <div>\r\n              <slot name=\"item\"></slot>\r\n            </div>\r\n          </div>\r\n          <slot name=\"info\"></slot>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}