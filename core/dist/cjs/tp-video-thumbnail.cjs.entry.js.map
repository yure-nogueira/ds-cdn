{"file":"tp-video-thumbnail.entry.cjs.js","mappings":";;;;;;;AAAA,MAAM,iBAAiB,GAAG,0nDAA0nD,CAAC;AACrpD,+BAAe,iBAAiB;;MCUnB,gBAAgB;;;QACnB,aAAQ,GAAGA,kBAAY,CAAC,6BAA6B,CAAC,CAAC;;;;qBAoB9B,CAAC;;IAElC,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAEnD,QACEC,QAACC,UAAI,qDACH,KAAK,EAAEC,iCAAkB,CAAC,KAAK,EAAE;gBAC/B,oBAAoB,EAAE,IAAI;gBAC1B,CAAC,uBAAuB,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;aAC/C,CAAC,IAEFF,kEAAK,KAAK,EAAC,yBAAyB,EAAC,GAAG,EAAE,GAAG,GAAI,EACjDA,kEAAK,KAAK,EAAC,oCAAoC,IAC7CA,uEAAU,KAAK,EAAC,0BAA0B,EAAC,GAAG,EAAE,QAAQ,GAAa,CACjE,EACNA,+EACE,KAAK,EAAE,KAAK,EACZ,KAAK,EAAC,8BAA8B,EACpC,KAAK,EAAE,KAAK,GACM,CACf,EACP;KACH;;;;;;;","names":["getAssetPath","h","Host","createColorClasses"],"sources":["src/components/core/video-thumbnail/video-thumbnail.scss?tag=tp-video-thumbnail&encapsulation=scoped","src/components/core/video-thumbnail/video-thumbnail.tsx"],"sourcesContent":["@use 'sass:map';\r\n\r\n$tp-video-thumbnail-sizes: (\r\n  lg: (\r\n    properties: (\r\n      max-width: 856px,\r\n      max-height: 524px,\r\n      padding: 16px,\r\n      width-icon: 48px,\r\n      height-icon: 48px,\r\n    ),\r\n  ),\r\n\r\n  md: (\r\n    properties: (\r\n      max-width: 182px,\r\n      max-height: 108px,\r\n      padding: 8px,\r\n      width-icon: 24px,\r\n      height-icon: 24px,\r\n    ),\r\n  ),\r\n\r\n  sm: (\r\n    properties: (\r\n      max-width: 112px,\r\n      max-height: 68px,\r\n      padding: 4px,\r\n      width-icon: 24px,\r\n      height-icon: 24px,\r\n    ),\r\n  ),\r\n\r\n  xs: (\r\n    properties: (\r\n      max-width: 88px,\r\n      max-height: 60px,\r\n      padding: 4px,\r\n      width-icon: 16px,\r\n      height-icon: 16px,\r\n    ),\r\n  ),\r\n);\r\n\r\n:host {\r\n  --tp-max-width: 856px;\r\n  --tp-max-height: 524px;\r\n  --tp-padding: 16px;\r\n  --tp-width-icon: 48px;\r\n  --tp-height-icon: 48px;\r\n}\r\n\r\n:host {\r\n  display: block;\r\n  max-width: var(--tp-max-width);\r\n  max-height: var(--tp-max-height);\r\n  width: 100%;\r\n  height: auto;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 4px;\r\n}\r\n\r\n.tp-video-thumbnail {\r\n  &__img {\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  &__container-icon {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: var(--tp-padding);\r\n    background: rgba(var(--tp-color-neutral-1-rgb), 50%);\r\n  }\r\n\r\n  &__icon {\r\n    color: var(--tp-color-neutral-10);\r\n    width: var(--tp-width-icon);\r\n    height: var(--tp-height-icon);\r\n  }\r\n\r\n  &__progress {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n  }\r\n}\r\n\r\n//\r\n// sizes\r\n//\r\n\r\n:host {\r\n  @each $size-name, $size-value in $tp-video-thumbnail-sizes {\r\n    &.tp-video-thumbnail--#{$size-name} {\r\n      $properties-map: map.get($size-value, properties);\r\n\r\n      @each $properties-name, $properties-value in $properties-map {\r\n        --tp-#{$properties-name}: #{$properties-value};\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//\r\n// color\r\n//\r\n\r\n:host(.tp-color) {\r\n  .tp-video-thumbnail__progress {\r\n    --background: rgba(var(--ion-color-base-rgb), 0.4);\r\n    --progress-background: var(--ion-color-base);\r\n  }\r\n}\r\n","import { Component, getAssetPath, h, Host, Prop } from '@stencil/core';\r\nimport { createColorClasses } from '../../../utils/functions/color.function';\r\nimport { TpColor } from '../../../utils/types/color.type';\r\nimport { TpVideoThumbnailSize } from './utils/video-thumbnail.enum';\r\n\r\n@Component({\r\n  tag: 'tp-video-thumbnail',\r\n  styleUrl: 'video-thumbnail.scss',\r\n  assetsDirs: ['assets'],\r\n  scoped: true,\r\n})\r\nexport class TpVideoThumbnail {\r\n  private iconPlay = getAssetPath('./assets/tp-play-circle.svg');\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop({ reflect: true }) color?: TpColor;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop({ reflect: true }) url?: string;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop({ reflect: true }) size?: TpVideoThumbnailSize;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop({ reflect: true }) value = 0;\r\n\r\n  render() {\r\n    const { color, url, value, iconPlay, size } = this;\r\n\r\n    return (\r\n      <Host\r\n        class={createColorClasses(color, {\r\n          'tp-video-thumbnail': true,\r\n          [`tp-video-thumbnail--${size}`]: Boolean(size),\r\n        })}\r\n      >\r\n        <img class=\"tp-video-thumbnail__img\" src={url} />\r\n        <div class=\"tp-video-thumbnail__container-icon\">\r\n          <ion-icon class=\"tp-video-thumbnail__icon\" src={iconPlay}></ion-icon>\r\n        </div>\r\n        <ion-progress-bar\r\n          color={color}\r\n          class=\"tp-video-thumbnail__progress\"\r\n          value={value}\r\n        ></ion-progress-bar>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}