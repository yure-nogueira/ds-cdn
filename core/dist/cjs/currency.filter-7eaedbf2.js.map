{"file":"currency.filter-7eaedbf2.js","mappings":"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","names":["camelcaseKeys"],"sources":["src/utils/api/ecommerce/utils/constants/requests.constant.ts","src/utils/api/ecommerce/product.api.ts","src/utils/filters/currency.filter.ts"],"sourcesContent":["export const ORDERBY = {\r\n  DATE: 'date',\r\n  PRICE: 'price',\r\n  PRICE_ASC: 'price-asc',\r\n  POPULARITY: 'popularity',\r\n  RATING: 'rating',\r\n  TITLE: 'title',\r\n};\r\n\r\nexport const API_CART_ACTIONS = {\r\n  addToCart: 'tp_add_to_cart',\r\n  getCart: 'tp_get_cart',\r\n  updateCart: 'tp_update_cart',\r\n  removeFromCart: 'tp_remove_from_cart',\r\n};\r\n\r\nexport const API_PRODUCT_ACTIONS = {\r\n  getCategories: 'tp_get_categories',\r\n};\r\n","import camelcaseKeys from 'camelcase-keys';\r\nimport { OrderedParams } from './utils/interfaces/requests.interface';\r\nimport { ApiResponse } from './utils/interfaces/responses.interface';\r\nimport {\r\n  Product,\r\n  ProductCategoryWithUrl,\r\n} from './utils/interfaces/product.interface';\r\nimport { API_PRODUCT_ACTIONS } from './utils/constants/requests.constant';\r\n\r\nexport class ApiProduct {\r\n  static async getFeaturedProducts() {\r\n    const rawResponse = await fetch(\r\n      `${process.env.WOOPROXY_BASE_URL}/products/featured`,\r\n    );\r\n\r\n    const parsedResponse: ApiResponse = await rawResponse.json();\r\n    const { data, totalPages } = parsedResponse;\r\n    const products: Product[] = camelcaseKeys(data, { deep: true });\r\n    return {\r\n      products,\r\n      totalPages,\r\n    };\r\n  }\r\n\r\n  static async getOrderedProducts(params: OrderedParams = {}) {\r\n    const { orderby, order, page, category } = params;\r\n\r\n    const query = new URLSearchParams({\r\n      order: order ?? 'desc',\r\n      page: page ? `${page}` : '1',\r\n      category: category ? `${category}` : '',\r\n    });\r\n\r\n    const rawResponse = await fetch(\r\n      `${process.env.WOOPROXY_BASE_URL}/products/ordered/${orderby ?? 'date'}?${query}`,\r\n    );\r\n\r\n    const parsedResponse: ApiResponse = await rawResponse.json();\r\n    const { data, totalPages } = parsedResponse;\r\n    const products: Product[] = camelcaseKeys(data, { deep: true });\r\n    return {\r\n      products,\r\n      totalPages,\r\n    };\r\n  }\r\n\r\n  static async getSearchedProducts(\r\n    searchTerm: string,\r\n    optionalParams: any = {},\r\n  ) {\r\n    const rawResponse = await fetch(\r\n      `${process.env.WOOPROXY_BASE_URL}/products/search/${searchTerm}`,\r\n      { ...optionalParams },\r\n    );\r\n\r\n    if (!rawResponse.ok) {\r\n      throw new Error();\r\n    }\r\n\r\n    const parsedResponse: ApiResponse = await rawResponse.json();\r\n    const { data, totalPages } = parsedResponse;\r\n    const products: Product[] = camelcaseKeys(data, { deep: true });\r\n    return {\r\n      products,\r\n      totalPages,\r\n    };\r\n  }\r\n\r\n  static async getProductById(id: number) {\r\n    const rawResponse = await fetch(\r\n      `${process.env.WOOPROXY_BASE_URL}/products/${id}`,\r\n    );\r\n\r\n    const parsedResponse: ApiResponse = await rawResponse.json();\r\n    const { data } = parsedResponse;\r\n    const product: Product = camelcaseKeys(data, { deep: true });\r\n    return product;\r\n  }\r\n\r\n  static async getCategories() {\r\n    const rawResponse = await fetch(`${process.env.AJAX_URL}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: new URLSearchParams(\r\n        Object.assign({ action: API_PRODUCT_ACTIONS.getCategories }),\r\n      ),\r\n    });\r\n\r\n    const parsedResponse: ApiResponse = await rawResponse.json();\r\n    const { data } = parsedResponse;\r\n    const categories: ProductCategoryWithUrl[] = camelcaseKeys(data, {\r\n      deep: true,\r\n    });\r\n    return categories;\r\n  }\r\n}\r\n","type Locale = 'pt-br';\r\n\r\nexport function currency(value: string | number, locale: Locale) {\r\n  switch (locale) {\r\n    case 'pt-br':\r\n      return currencyPtBr(value);\r\n    default:\r\n      return value;\r\n  }\r\n}\r\n\r\nfunction currencyPtBr(value: string | number) {\r\n  if (typeof value === 'string') {\r\n    return `R$ ${Number(value).toFixed(2).replace('.', ',')}`;\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    return `R$ ${value.toFixed(2).replace('.', ',')}`;\r\n  }\r\n}\r\n"],"version":3}