{"file":"tp-segment-container.entry.js","mappings":"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","names":[],"sources":["src/components/core/segment-container/utils/segment-container.constant.ts","src/components/core/segment-container/utils/segment-container.enum.ts","src/components/core/segment-container/segment-container.scss?tag=tp-segment-container&encapsulation=shadow","src/components/core/segment-container/segment-container.tsx"],"sourcesContent":["export const TP_SEGMENT_WRAPPER_CLASS = 'tp-segment-container__wrapper';\r\nexport const TP_SEGMENT_GRADIENT_SHOW_CLASS =\r\n  'tp-segment-container--show-gradient';\r\n","export enum TpSegmentContainerGradient {\r\n  START = 'start',\r\n  END = 'end',\r\n}\r\n","@import './../../../styles/definitions/scroll';\r\n\r\n:host {\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.tp-segment-container {\r\n  &__wrapper {\r\n    display: flex;\r\n    overflow-x: auto;\r\n    @include generate-scroll-style();\r\n  }\r\n\r\n  &__gradient {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    pointer-events: none;\r\n\r\n    &::before,\r\n    &::after {\r\n      position: absolute;\r\n      top: 0;\r\n      display: none;\r\n      width: 32px;\r\n      height: 100%;\r\n      content: '';\r\n    }\r\n\r\n    &::before {\r\n      left: 0;\r\n      background: linear-gradient(\r\n        to left,\r\n        transparent,\r\n        var(--tp-color-neutral-2)\r\n      );\r\n    }\r\n\r\n    &::after {\r\n      right: 0;\r\n      background: linear-gradient(\r\n        to right,\r\n        transparent,\r\n        var(--tp-color-neutral-2)\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n:host(.tp-segment-container--show-gradient-start) {\r\n  .tp-segment-container__gradient::before {\r\n    display: block;\r\n  }\r\n}\r\n\r\n:host(.tp-segment-container--show-gradient-end) {\r\n  .tp-segment-container__gradient::after {\r\n    display: block;\r\n  }\r\n}\r\n","import { Component, Element, Host, Listen, h } from '@stencil/core';\r\nimport {\r\n  TP_SEGMENT_GRADIENT_SHOW_CLASS,\r\n  TP_SEGMENT_WRAPPER_CLASS,\r\n} from './utils/segment-container.constant';\r\nimport { TpSegmentContainerGradient } from './utils/segment-container.enum';\r\nimport { TpSegmentContainerType } from './utils/segment-container.type';\r\n\r\n@Component({\r\n  tag: 'tp-segment-container',\r\n  styleUrl: 'segment-container.scss',\r\n  shadow: true,\r\n})\r\nexport class TpSegmentContainer {\r\n  private wrapperEl: HTMLDivElement;\r\n  private hasScroll: boolean;\r\n\r\n  @Element() host!: HTMLElement;\r\n\r\n  componentDidLoad() {\r\n    this.wrapperEl = this.host.shadowRoot.querySelector(\r\n      `.${TP_SEGMENT_WRAPPER_CLASS}`,\r\n    ) as HTMLDivElement;\r\n\r\n    this.hasScroll = this.wrapperEl.scrollWidth > this.wrapperEl.clientWidth;\r\n\r\n    if (this.hasScroll) {\r\n      this.addGradient(TpSegmentContainerGradient.END);\r\n    }\r\n\r\n    this.wrapperEl.addEventListener('scroll', this.updateGradient.bind(this));\r\n  }\r\n\r\n  addGradient(position: TpSegmentContainerType['position']) {\r\n    if (\r\n      !this.host.classList.contains(\r\n        `${TP_SEGMENT_GRADIENT_SHOW_CLASS}-${position}`,\r\n      )\r\n    ) {\r\n      this.host.classList.add(`${TP_SEGMENT_GRADIENT_SHOW_CLASS}-${position}`);\r\n    }\r\n  }\r\n\r\n  removeGradient(position: TpSegmentContainerType['position']) {\r\n    if (\r\n      this.host.classList.contains(\r\n        `${TP_SEGMENT_GRADIENT_SHOW_CLASS}-${position}`,\r\n      )\r\n    ) {\r\n      this.host.classList.remove(\r\n        `${TP_SEGMENT_GRADIENT_SHOW_CLASS}-${position}`,\r\n      );\r\n    }\r\n  }\r\n\r\n  updateGradient() {\r\n    if (!this.hasScroll) {\r\n      this.removeGradient(TpSegmentContainerGradient.START);\r\n      this.removeGradient(TpSegmentContainerGradient.END);\r\n      return;\r\n    }\r\n\r\n    const isAtStart = this.wrapperEl.scrollLeft === 0;\r\n    const isAtEnd =\r\n      this.wrapperEl.scrollWidth ===\r\n        Math.floor(this.wrapperEl.clientWidth + this.wrapperEl.scrollLeft) ||\r\n      this.wrapperEl.scrollWidth ===\r\n        Math.ceil(this.wrapperEl.clientWidth + this.wrapperEl.scrollLeft);\r\n\r\n    if (isAtStart) {\r\n      this.removeGradient(TpSegmentContainerGradient.START);\r\n    }\r\n\r\n    if (!isAtStart) {\r\n      this.addGradient(TpSegmentContainerGradient.START);\r\n    }\r\n\r\n    if (isAtEnd) {\r\n      this.removeGradient(TpSegmentContainerGradient.END);\r\n    }\r\n\r\n    if (!isAtEnd) {\r\n      this.addGradient(TpSegmentContainerGradient.END);\r\n    }\r\n  }\r\n\r\n  @Listen('resize', { target: 'window' })\r\n  onWindowReize() {\r\n    this.hasScroll = this.wrapperEl.scrollWidth > this.wrapperEl.clientWidth;\r\n    this.updateGradient();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.wrapperEl.removeEventListener(\r\n      'scroll',\r\n      this.updateGradient.bind(this),\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class=\"tp-segment-container\">\r\n        <div class=\"tp-segment-container__wrapper\">\r\n          <slot />\r\n          <div class=\"tp-segment-container__gradient\"></div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}