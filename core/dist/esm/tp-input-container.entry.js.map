{"file":"tp-input-container.entry.js","mappings":"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","names":[],"sources":["src/components/core/input-container/utils/input-container.enum.ts","src/components/core/input-container/utils/input-container.constants.ts","src/components/core/input-container/input-container.scss?tag=tp-input-container&encapsulation=shadow","src/components/core/input-container/input-container.tsx"],"sourcesContent":["export enum TpInputContainerState {\r\n  Error = 'error',\r\n  Success = 'success',\r\n}\r\n","import { CONFIG } from '../../../../config/config';\r\nimport { TpInputContainerState } from './input-container.enum';\r\n\r\nexport const TP_INPUT_CONTAINER = {\r\n  state: Object.values(TpInputContainerState),\r\n  icons: {\r\n    alertTriangle: `${CONFIG.ASSETS_BASE_PATH}/tp-alert-triangle.svg`,\r\n    check: `${CONFIG.ASSETS_BASE_PATH}/tp-check.svg`,\r\n    chevronDown: `${CONFIG.ASSETS_BASE_PATH}/tp-chevron-down.svg`,\r\n  },\r\n};\r\n","@import '../../../styles/templarios.abstracts';\r\n\r\n:host {\r\n  --tp-border-radius: 8px;\r\n  --tp-background: var(--tp-color-neutral-2);\r\n}\r\n\r\n:host {\r\n  position: relative;\r\n  display: block;\r\n  color: var(--tp-color-neutral-6);\r\n\r\n  // icon\r\n  ::slotted(ion-icon) {\r\n    color: var(--tp-color-neutral-6) !important;\r\n  }\r\n}\r\n\r\n.tp-input-container {\r\n  &__wrapper {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 8px 0;\r\n    background: var(--tp-background);\r\n    border: 1px solid var(--tp-color-neutral-2);\r\n    border-radius: var(--tp-border-radius);\r\n\r\n    &:hover {\r\n      --tp-background: var(--tp-color-neutral-3);\r\n      border-color: var(--tp-color-neutral-3);\r\n    }\r\n\r\n    &:focus-within {\r\n      border-color: var(--tp-color-neutral-3);\r\n    }\r\n  }\r\n\r\n  &__icon-container {\r\n    display: flex;\r\n  }\r\n\r\n  &__state-container {\r\n    height: 24px;\r\n    margin-right: 16px;\r\n  }\r\n\r\n  &__select-container {\r\n    display: flex;\r\n  }\r\n\r\n  &__select-icon {\r\n    margin-right: 8px;\r\n    color: var(--tp-color-neutral-10);\r\n    transition: transform ease-in-out 300ms;\r\n\r\n    &--open {\r\n      transform: rotate(-180deg);\r\n    }\r\n  }\r\n\r\n  &__skeleton {\r\n    --background-rgb: var(--tp-color-neutral-10-rgb);\r\n    --border-radius: 8px;\r\n    width: 100%;\r\n    height: 42px;\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n::slotted(*[slot='feedback-error']) {\r\n  display: none;\r\n  color: var(--tp-color-warning) !important;\r\n}\r\n\r\n::slotted(*[slot='feedback-success']) {\r\n  display: none;\r\n  color: var(--tp-color-success) !important;\r\n}\r\n\r\n::slotted(ion-icon) {\r\n  min-width: 24px !important;\r\n}\r\n\r\n::slotted(ion-icon[slot='start']) {\r\n  margin-left: 16px;\r\n}\r\n\r\n::slotted(ion-icon[slot='end']) {\r\n  margin-right: 16px;\r\n}\r\n\r\n//\r\n// states\r\n//\r\n\r\n// invalid\r\n:host(.tp-input-container--error) {\r\n  .tp-input-container__wrapper {\r\n    border-color: var(--tp-color-warning);\r\n  }\r\n\r\n  ion-select {\r\n    max-width: calc(100% - 80px);\r\n  }\r\n\r\n  ::slotted(*[slot='feedback-error']) {\r\n    display: block;\r\n  }\r\n\r\n  .tp-input-container__icon {\r\n    color: var(--tp-color-warning);\r\n  }\r\n}\r\n\r\n// valid\r\n:host(.tp-input-container--success) {\r\n  .tp-input-container__wrapper {\r\n    border-color: var(--tp-color-success);\r\n  }\r\n\r\n  ::slotted(*[slot='feedback-success']) {\r\n    display: block;\r\n  }\r\n\r\n  .tp-input-container__icon {\r\n    color: var(--tp-color-success);\r\n  }\r\n}\r\n\r\n//\r\n// disabled\r\n//\r\n:host(.tp-input-container--disabled) {\r\n  .tp-input-container__wrapper {\r\n    opacity: 0.5;\r\n    pointer-events: none;\r\n\r\n    &:hover {\r\n      --tp-background: var(--tp-color-neutral-2);\r\n      border: 1px solid var(--tp-color-neutral-2);\r\n    }\r\n  }\r\n}\r\n\r\n//\r\n// select\r\n//\r\n\r\n// clicked\r\n:host(.tp-input-container.tp-input-container--select-open)\r\n  .tp-input-container__wrapper {\r\n  border-radius: 8px 8px 0 0 !important;\r\n  transition: border-radius 400ms ease-in-out;\r\n  pointer-events: none;\r\n}\r\n\r\n// inverted\r\n:host(.tp-input-container.tp-input-container--inverted)::slotted(ion-icon) {\r\n  transform: rotate(-180deg);\r\n}\r\n\r\n:host(\r\n    .tp-input-container.tp-input-container--inverted.tp-input-container--select-open\r\n  ) {\r\n  &:not(.tp-input-container--disabled) {\r\n    border-radius: 0 0 8px 8px !important;\r\n  }\r\n}\r\n\r\n// select\r\n:host(.tp-input-container.tp-input-container--with-select) {\r\n  &:not(.tp-input-container--disabled) {\r\n    cursor: pointer;\r\n\r\n    &::slotted(ion-icon) {\r\n      transition: transform 400ms linear;\r\n    }\r\n  }\r\n}\r\n\r\n:host(\r\n    .tp-input-container.tp-input-container--with-select.tp-input-container--select-open\r\n  ) {\r\n  &:not(.tp-input-container--disabled)::slotted(ion-icon) {\r\n    transform: rotate(-180deg);\r\n  }\r\n}\r\n\r\n:host(\r\n    .tp-input-container.tp-input-container--with-select.tp-input-container--select-open.tp-input-container--inverted\r\n  ) {\r\n  &:not(.tp-input-container--disabled)::slotted(ion-icon) {\r\n    transform: rotate(0deg);\r\n  }\r\n}\r\n\r\n//\r\n// color\r\n//\r\n:host(.tp-color) {\r\n  .tp-input-container__wrapper {\r\n    --tp-background: var(--tp-color-base);\r\n    border-color: var(--tp-color-base);\r\n\r\n    &:hover {\r\n      --tp-background: var(--tp-color-shade);\r\n      border-color: var(--tp-color-shade);\r\n    }\r\n\r\n    &:focus-within {\r\n      border-color: var(--tp-color-tint);\r\n    }\r\n  }\r\n\r\n  // input\r\n  ::slotted(ion-input.sc-ion-input-md-h) {\r\n    --color: var(--tp-color-contrast) !important;\r\n    --placeholder-color: var(--tp-color-contrast) !important;\r\n  }\r\n\r\n  // input clear-icon\r\n  ::slotted(ion-input[clear-input]) {\r\n    --tp-fill-clear-icon: var(--tp-color-contrast) !important;\r\n  }\r\n\r\n  // searchbar\r\n  ::slotted(ion-searchbar.sc-ion-searchbar-md-h) {\r\n    --color: var(--tp-color-contrast) !important;\r\n    --placeholder-color: var(--tp-color-contrast) !important;\r\n    --tp-stroke-icon: var(--tp-color-contrast) !important;\r\n    --icon-color: var(--tp-color-contrast) !important;\r\n  }\r\n\r\n  // textarea\r\n  ::slotted(ion-textarea.sc-ion-textarea-md-h) {\r\n    --color: var(--tp-color-contrast) !important;\r\n    --placeholder-color: var(--tp-color-contrast) !important;\r\n  }\r\n\r\n  // datetime\r\n  ::slotted(ion-datetime-button) {\r\n    --tp-color: var(--tp-color-contrast) !important;\r\n  }\r\n\r\n  // icon\r\n  ::slotted(ion-icon) {\r\n    --ion-color-base: var(--tp-color-contrast) !important;\r\n    --stroke: var(--ion-color-base) !important;\r\n    color: var(--tp-color-contrast) !important;\r\n  }\r\n}\r\n\r\n// states com .tp-color\r\n:host(.tp-color.tp-input-container--success) {\r\n  .tp-input-container__wrapper {\r\n    border-color: var(--tp-color-success);\r\n  }\r\n}\r\n\r\n:host(.tp-color.tp-input-container--error) {\r\n  .tp-input-container__wrapper {\r\n    border-color: var(--tp-color-warning);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Element,\r\n  Host,\r\n  Listen,\r\n  Prop,\r\n  State,\r\n  h,\r\n} from '@stencil/core';\r\nimport { createColorClasses } from '../../../utils/functions/color.function';\r\nimport type { TpColor } from '../../../utils/types/color.type';\r\nimport { TP_INPUT_CONTAINER } from './utils/input-container.constants';\r\n\r\n@Component({\r\n  tag: 'tp-input-container',\r\n  styleUrl: 'input-container.scss',\r\n  assetsDirs: ['assets'],\r\n  shadow: true,\r\n})\r\nexport class TpInputContainer {\r\n  /**\r\n   * Quando usado em conjunto com 'select', representa a largura do 'select' definida dinamicamente.\r\n   */\r\n  private hostWidth: number | undefined;\r\n\r\n  /**\r\n   * Referência ao componente no DOM.\r\n   */\r\n  @Element() host!: HTMLElement;\r\n\r\n  /**\r\n   * Alvo do evento de click. Evita bugs nos casos em que há mais de um 'select na mesma página.\r\n   */\r\n  @State() clickTarget!: Node;\r\n\r\n  /**\r\n   * Monitoria se o 'select' foi clicado e está ativo. A propriedade é usada para aplicar estilização e evitar processamentos desnecessários em alguns métodos.\r\n   */\r\n  @State() selectOpen: boolean = false;\r\n\r\n  /**\r\n   * ???\r\n   */\r\n  @State() hasSelect: boolean = false;\r\n\r\n  /**\r\n   * Define a variação de cor do componente.\r\n   */\r\n  @Prop({ reflect: true }) color?: TpColor;\r\n\r\n  /**\r\n   * Define a variação de estado do componente.\r\n   */\r\n  @Prop({ reflect: true }) state?: 'error' | 'success';\r\n\r\n  /**\r\n   * Define a estilização do estado disabled do componente.\r\n   */\r\n  @Prop({ reflect: true }) disabled = false;\r\n\r\n  /**\r\n   * ???\r\n   */\r\n  @Prop({ reflect: true }) inverted = false;\r\n\r\n  /**\r\n   * Define o estado de carregamento do componente.\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) loading?: boolean;\r\n\r\n  @Listen('click', { target: 'body' })\r\n  setClickTarget(e: MouseEvent) {\r\n    if (this.disabled) return;\r\n\r\n    this.clickTarget = e.target as Node;\r\n  }\r\n\r\n  @Listen('click')\r\n  catchSelectIconClick(e: MouseEvent) {\r\n    const target = e.target as Node;\r\n    const ionSelect = this.host.querySelector(\r\n      'ion-select',\r\n    ) as HTMLIonSelectElement;\r\n\r\n    if (!ionSelect) return;\r\n\r\n    const shouldOpenOverlay =\r\n      this.host.contains(target) &&\r\n      ionSelect.hasAttribute('interface') &&\r\n      (target.nodeName === 'ION-ICON' ||\r\n        target.nodeName === 'TP-INPUT-CONTAINER');\r\n\r\n    if (shouldOpenOverlay) {\r\n      ionSelect.open(e);\r\n    }\r\n  }\r\n\r\n  @Listen('resize', { target: 'window' })\r\n  setPopoverWidthOnResize() {\r\n    if (!this.selectOpen) return;\r\n\r\n    const popoverElement = document.querySelector(\r\n      '.select-popover',\r\n    ) as HTMLElement;\r\n\r\n    popoverElement?.style.setProperty('--width', `${this.host.clientWidth}px`);\r\n\r\n    this.setPopoverPosition();\r\n  }\r\n\r\n  @Listen('ionPopoverWillPresent', { target: 'body' })\r\n  setPopoverCharacteristics() {\r\n    if (!this.host.contains(this.clickTarget)) return;\r\n\r\n    this.selectOpen = true;\r\n    this.hostWidth = this.host.clientWidth;\r\n\r\n    const popoverElement = document.querySelector(\r\n      '.select-popover',\r\n    ) as HTMLElement;\r\n    popoverElement?.style.setProperty('--width', `${this.hostWidth}px`);\r\n\r\n    if (popoverElement.classList.contains('popover-bottom')) {\r\n      this.inverted = true;\r\n    }\r\n\r\n    this.setPopoverPosition();\r\n  }\r\n\r\n  @Listen('ionPopoverWillDismiss', { target: 'body' })\r\n  unsetClikedState() {\r\n    this.selectOpen = false;\r\n  }\r\n\r\n  componentDidLoad() {\r\n    const ionSelect = this.host.querySelector(\r\n      'ION-SELECT',\r\n    ) as HTMLIonSelectElement;\r\n\r\n    if (ionSelect) this.hasSelect = true;\r\n  }\r\n\r\n  setPopoverPosition() {\r\n    const popoverElement = document.querySelector(\r\n      '.select-popover',\r\n    ) as HTMLElement;\r\n    const selectElement = this.host.querySelector('ion-select');\r\n    const { top, bottom, left } = selectElement.getBoundingClientRect();\r\n    const fixPositionX = 1;\r\n\r\n    if (this.inverted) {\r\n      popoverElement.classList.add('tp-popover--inverted');\r\n      popoverElement?.style.setProperty(\r\n        '--offset-x',\r\n        `${Math.round(left) - fixPositionX}px`,\r\n      );\r\n      popoverElement?.style.setProperty(\r\n        '--offset-y',\r\n        `${Math.round(window.innerHeight - top)}px`,\r\n      );\r\n    } else {\r\n      popoverElement?.style.setProperty(\r\n        '--offset-x',\r\n        `${Math.round(left) - fixPositionX}px`,\r\n      );\r\n      popoverElement?.style.setProperty(\r\n        '--offset-y',\r\n        `${Math.round(bottom)}px`,\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { color, state, disabled, hasSelect, selectOpen, loading } = this;\r\n    let content;\r\n    let stateContent;\r\n    let selectIconContainer;\r\n\r\n    const icon =\r\n      state === 'error'\r\n        ? TP_INPUT_CONTAINER.icons.alertTriangle\r\n        : TP_INPUT_CONTAINER.icons.check;\r\n\r\n    if (loading) {\r\n      content = (\r\n        <ion-skeleton-text\r\n          class=\"tp-input-container__skeleton\"\r\n          animated\r\n        ></ion-skeleton-text>\r\n      );\r\n    } else {\r\n      if (this.hasSelect) {\r\n        selectIconContainer = (\r\n          <div class=\"tp-input-container__select-container\">\r\n            <ion-icon\r\n              class={{\r\n                'tp-input-container__select-icon': true,\r\n                'tp-input-container__select-icon--open': selectOpen,\r\n              }}\r\n              src={TP_INPUT_CONTAINER.icons.chevronDown}\r\n              aria-hidden=\"true\"\r\n            ></ion-icon>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      if (state) {\r\n        stateContent = (\r\n          <div class=\"tp-input-container__state-container\">\r\n            <ion-icon\r\n              class=\"tp-input-container__icon\"\r\n              src={icon}\r\n              aria-hidden=\"true\"\r\n            ></ion-icon>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      content = (\r\n        <div>\r\n          <slot name=\"label\"></slot>\r\n          <div class=\"tp-input-container__wrapper\">\r\n            <slot name=\"start\"></slot>\r\n            <slot></slot>\r\n            <slot name=\"end\"></slot>\r\n            {selectIconContainer}\r\n            {stateContent}\r\n          </div>\r\n          <slot name=\"feedback-success\"></slot>\r\n          <slot name=\"feedback-error\"></slot>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Host\r\n        class={createColorClasses(color, {\r\n          'tp-input-container': true,\r\n          'tp-input-container--error': state === 'error',\r\n          'tp-input-container--success': state === 'success',\r\n          'tp-input-container--disabled': disabled,\r\n          'tp-input-container--with-select': hasSelect,\r\n          'tp-input-container--select-open': selectOpen,\r\n        })}\r\n      >\r\n        {content}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}