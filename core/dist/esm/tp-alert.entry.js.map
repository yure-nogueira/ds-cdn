{"file":"tp-alert.entry.js","mappings":";;;AAAA,MAAM,QAAQ,GAAG,mkIAAmkI;;MCSvkI,OAAO;;;;;;IAWlB,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;QAEhC,IAAI,OAAO,CAAC;QAEZ,IAAI,OAAO,EAAE;YACX,OAAO,IACL,yBACE,KAAK,EAAC,oBAAoB,EAC1B,QAAQ,SACW,CACtB,CAAC;SACH;aAAM;YACL,OAAO,IACL,WAAK,KAAK,EAAC,qBAAqB,IAC9B,YAAM,IAAI,EAAC,MAAM,GAAG,EACpB,YAAM,IAAI,EAAC,MAAM,GAAG,CAChB,CACP,CAAC;SACH;QAED,QACE,EAAC,IAAI,IACH,KAAK,EAAE,kBAAkB,CAAC,KAAK,EAAE;gBAC/B,UAAU,EAAE,IAAI;gBAChB,mBAAmB,EAAE,OAAO;aAC7B,CAAC,IAED,OAAO,CACH,EACP;KACH;;;;;;","names":[],"sources":["src/components/templarios/alert/alert.scss?tag=tp-alert&encapsulation=shadow","src/components/templarios/alert/alert.tsx"],"sourcesContent":["@import './../../../styles/definitions/type';\n\n:host {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  background: var(--tp-color-neutral-2);\n}\n\n.tp-alert {\n  &__container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 12px;\n    color: var(--tp-color-neutral-10);\n  }\n\n  &__skeleton {\n    --background-rgb: var(--tp-color-neutral-10-rgb);\n    --border-radius: 0;\n    width: 100%;\n    height: 40px;\n    margin: 0;\n  }\n}\n\n::slotted([slot='icon']) {\n  min-width: 16px;\n  margin-right: 16px;\n}\n\n::slotted([slot='text']) {\n  color: var(--tp-color-neutral-10);\n  text-align: center;\n}\n\n//\n// color\n//\n:host(.tp-color) {\n  background: var(--tp-color-base);\n\n  ::slotted([slot='icon']) {\n    color: var(--tp-color-contrast);\n  }\n\n  ::slotted([slot='text']) {\n    color: var(--tp-color-contrast) !important;\n  }\n}\n\n:host(.tp-color-warning),\n:host(.tp-color-provas-4) {\n  ::slotted([slot='icon']) {\n    color: var(--tp-color-neutral-10);\n  }\n\n  ::slotted([slot='text']) {\n    color: var(--tp-color-neutral-10) !important;\n  }\n}\n\n//\n// loading\n//\n:host(.tp-alert--loading) {\n  background: transparent;\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\nimport { createColorClasses } from '../../../utils/functions/color.function';\nimport type { TpColor } from '../../../utils/types/color.type';\n\n@Component({\n  tag: 'tp-alert',\n  styleUrl: 'alert.scss',\n  shadow: true,\n})\nexport class TpAlert {\n  /**\n   * Define a variação de cor do componente.\n   */\n  @Prop({ reflect: true }) color?: TpColor;\n\n  /**\n   * Define o estado de carregamento do componente.\n   */\n  @Prop({ reflect: true, mutable: true }) loading?: boolean;\n\n  render() {\n    const { color, loading } = this;\n\n    let content;\n\n    if (loading) {\n      content = (\n        <ion-skeleton-text\n          class=\"tp-alert__skeleton\"\n          animated\n        ></ion-skeleton-text>\n      );\n    } else {\n      content = (\n        <div class=\"tp-alert__container\">\n          <slot name=\"icon\" />\n          <slot name=\"text\" />\n        </div>\n      );\n    }\n\n    return (\n      <Host\n        class={createColorClasses(color, {\n          'tp-alert': true,\n          'tp-alert--loading': loading,\n        })}\n      >\n        {content}\n      </Host>\n    );\n  }\n}\n"],"version":3}