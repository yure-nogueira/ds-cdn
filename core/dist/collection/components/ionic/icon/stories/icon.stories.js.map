{"version":3,"file":"icon.stories.js","sourceRoot":"","sources":["../../../../../src/components/ionic/icon/stories/icon.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AAEjG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,kBAAkB,EAAE,MAAM,2CAA2C,CAAC;AAC/E,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAGrD,uBAAuB,EAAE,CAAC;AAE1B,MAAM,IAAI,GAAyC;IACjD,KAAK,EAAE,uBAAuB;IAC9B,QAAQ,EAAE;QACR,GAAG,EAAE;YACH,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,GAAG,kBAAkB,CAAC;YAChC,WAAW,EAAE,gCAAgC;SAC9C;QACD,SAAS,EAAE;YACT,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;YACpC,WAAW,EAAE,iCAAiC;YAC9C,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;iBAC1C;aACF;SACF;KACF;IACD,IAAI,EAAE;QACJ,GAAG,EAAE,GAAG,kBAAkB,CAAC,CAAC,CAAC,EAAE;KAChC;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,KAAK,GAAU;IAC1B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,MAAM,OAAO,GAAG,YAAY,IAAI,CAAC,GAAG,EAAE,CAAC;QAEvC,OAAO,IAAI,CAAA;eACA,IAAI,CAAC,KAAK;iBACR,IAAI,CAAC,SAAS,CAAC;aACnB,OAAO;iBACH,CAAC;IAChB,CAAC;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\nimport { defineCustomElement as defineCustomElementIcon } from '@ionic/core/components/ion-icon';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { TP_ICONS_STORYBOOK } from '../../../../utils/constants/icon.constant';\nimport { TP_ION_ICON } from '../utils/icon.constant';\nimport { TpIonIcon } from '../utils/icon.type';\n\ndefineCustomElementIcon();\n\nconst meta: Meta<Components.IonIcon & TpIonIcon> = {\n  title: 'components/Ionic/Icon',\n  argTypes: {\n    src: {\n      control: { type: 'select' },\n      options: [...TP_ICONS_STORYBOOK],\n      description: 'Define o path e nome do icone.',\n    },\n    'tp-size': {\n      control: { type: 'select' },\n      options: [...TP_ION_ICON['tp-size']],\n      description: 'Define o tamanho do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: TP_ION_ICON['tp-size'].join('|'),\n        },\n      },\n    },\n  },\n  args: {\n    src: `${TP_ICONS_STORYBOOK[0]}`,\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<Components.IonIcon & TpIonIcon>;\n\nexport const Icons: Story = {\n  render: ({ ...args }) => {\n    const iconUrl = `./assets/${args.src}`;\n\n    return html`<ion-icon\n      color=\"${args.color}\"\n      tp-size=\"${args['tp-size']}\"\n      src=\"${iconUrl}\"\n    ></ion-icon>`;\n  },\n  /* play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/ion-icon/gi)).toBeTruthy();\n  }, */\n};\n"]}