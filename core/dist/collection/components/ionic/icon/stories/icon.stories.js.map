{"version":3,"file":"icon.stories.js","sourceRoot":"","sources":["../../../../../src/components/ionic/icon/stories/icon.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AAEjG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,kBAAkB,EAAE,MAAM,2CAA2C,CAAC;AAC/E,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAGrD,uBAAuB,EAAE,CAAC;AAE1B,MAAM,IAAI,GAAyC;IACjD,KAAK,EAAE,uBAAuB;IAC9B,QAAQ,EAAE;QACR,GAAG,EAAE;YACH,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,GAAG,kBAAkB,CAAC;YAChC,WAAW,EAAE,gCAAgC;SAC9C;QACD,SAAS,EAAE;YACT,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;YACpC,WAAW,EAAE,iCAAiC;YAC9C,KAAK,EAAE;gBACL,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;gBACtC,IAAI,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;aACpD;SACF;KACF;IACD,IAAI,EAAE;QACJ,GAAG,EAAE,GAAG,kBAAkB,CAAC,CAAC,CAAC,EAAE;QAC/B,KAAK,EAAE,YAAY;KACpB;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,KAAK,GAAU;IAC1B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,MAAM,OAAO,GAAG,YAAY,IAAI,CAAC,GAAG,EAAE,CAAC;QAEvC,OAAO,IAAI,CAAA;;iBAEE,IAAI,CAAC,KAAK;mBACR,IAAI,CAAC,SAAS,CAAC;eACnB,OAAO;;KAEjB,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["import { Components } from '@ionic/core';\r\nimport { defineCustomElement as defineCustomElementIcon } from '@ionic/core/components/ion-icon';\r\nimport type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport { TP_ICONS_STORYBOOK } from '../../../../utils/constants/icon.constant';\r\nimport { TP_ION_ICON } from '../utils/icon.constant';\r\nimport { TpIonIcon } from '../utils/icon.type';\r\n\r\ndefineCustomElementIcon();\r\n\r\nconst meta: Meta<Components.IonIcon & TpIonIcon> = {\r\n  title: 'components/Ionic/Icon',\r\n  argTypes: {\r\n    src: {\r\n      control: { type: 'select' },\r\n      options: [...TP_ICONS_STORYBOOK],\r\n      description: 'Define o path e nome do icone.',\r\n    },\r\n    'tp-size': {\r\n      control: { type: 'select' },\r\n      options: [...TP_ION_ICON['tp-size']],\r\n      description: 'Define o tamanho do componente.',\r\n      table: {\r\n        defaultValue: { summary: 'undefined' },\r\n        type: { summary: TP_ION_ICON['tp-size'].join('|') },\r\n      },\r\n    },\r\n  },\r\n  args: {\r\n    src: `${TP_ICONS_STORYBOOK[0]}`,\r\n    color: 'neutral-10',\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<Components.IonIcon & TpIonIcon>;\r\n\r\nexport const Icons: Story = {\r\n  render: ({ ...args }) => {\r\n    const iconUrl = `./assets/${args.src}`;\r\n\r\n    return html`\r\n      <ion-icon\r\n        color=\"${args.color}\"\r\n        tp-size=\"${args['tp-size']}\"\r\n        src=\"${iconUrl}\"\r\n      ></ion-icon>\r\n    `;\r\n  },\r\n};\r\n"]}