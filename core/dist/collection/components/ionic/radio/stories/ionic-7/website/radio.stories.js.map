{"version":3,"file":"radio.stories.js","sourceRoot":"","sources":["../../../../../../../src/components/ionic/radio/stories/ionic-7/website/radio.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AACnG,OAAO,EAAE,mBAAmB,IAAI,6BAA6B,EAAE,MAAM,wCAAwC,CAAC;AAE9G,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EACL,SAAS,EACT,iBAAiB,EACjB,kBAAkB,GACnB,MAAM,kDAAkD,CAAC;AAC1D,OAAO,EACL,WAAW,EACX,eAAe,EACf,aAAa,EACb,aAAa,EACb,eAAe,EACf,eAAe,GAChB,MAAM,0CAA0C,CAAC;AAGlD,wBAAwB,EAAE,CAAC;AAC3B,6BAA6B,EAAE,CAAC;AAEhC,MAAM,IAAI,GACR;IACE,KAAK,EAAE,gCAAgC;IACvC,QAAQ,EAAE;QACR,KAAK,EAAE;YACL,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,GAAG,SAAS,EAAE,GAAG,iBAAiB,EAAE,GAAG,kBAAkB,CAAC;YACpE,WAAW,EAAE;;uBAEE,WAAW,CAAC,IAAI,WAAW,eAAe,CAAC,QAAQ,WAAW,eAAe,CAAC,QAAQ,WAAW,eAAe,CAAC,QAAQ,YAAY,aAAa,CAAC,MAAM;;oBAE5J,aAAa,CAAC,MAAM,mDAAmD;YACnF,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE;wBACP,GAAG,SAAS;wBACZ,GAAG,iBAAiB;wBACpB,GAAG,kBAAkB;qBACtB,CAAC,IAAI,CAAC,GAAG,CAAC;iBACZ;aACF;SACF;KACF;CACF,CAAC;AAEJ,eAAe,IAAI,CAAC;AAMpB,MAAM,CAAC,MAAM,aAAa,GAAU;IAClC,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAA;;;;;;;;;;GAUjB;CACF,CAAC;AACF,aAAa,CAAC,QAAQ,GAAG;IACvB,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;CACpC,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAU;IAC/B,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAA;;;;;;;;;;;;;;;;;;GAkBjB;CACF,CAAC;AACF,UAAU,CAAC,QAAQ,GAAG;IACpB,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;CACpC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAU;IACjC,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAAO,OAAA,IAAI,CAAA;;0BAEL,IAAI,CAAC,KAAK;0BACV,IAAI,CAAC,KAAK;;GAEjC,CAAA;KAAA;CACF,CAAC","sourcesContent":["import { Components } from '@ionic/core';\r\nimport { defineCustomElement as defineCustomElementRadio } from '@ionic/core/components/ion-radio';\r\nimport { defineCustomElement as defineCustomElementRadioGroup } from '@ionic/core/components/ion-radio-group';\r\nimport type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport {\r\n  TP_COLORS,\r\n  TP_COLORS_MEDSOFT,\r\n  TP_COLORS_RECURSOS,\r\n} from '../../../../../../utils/constants/color.constant';\r\nimport {\r\n  TpColorAula,\r\n  TpColorMaterial,\r\n  TpColorOrange,\r\n  TpColorProvas,\r\n  TpColorQuestoes,\r\n  TpColorRevalida,\r\n} from '../../../../../../utils/enums/color.enum';\r\nimport { TpIonRadio } from '../../../utils/radio.type';\r\n\r\ndefineCustomElementRadio();\r\ndefineCustomElementRadioGroup();\r\n\r\nconst meta: Meta<Components.IonRadioGroup & Components.IonRadio & TpIonRadio> =\r\n  {\r\n    title: 'components/Ionic/Radio/Website',\r\n    argTypes: {\r\n      color: {\r\n        control: { type: 'select' },\r\n        options: [...TP_COLORS, ...TP_COLORS_MEDSOFT, ...TP_COLORS_RECURSOS],\r\n        description: `Define a cor do componente.\r\n\r\n**OBS**: As cores **'${TpColorAula.Aula}'**, **'${TpColorMaterial.Material}'**, **'${TpColorQuestoes.Questoes}'**, **'${TpColorRevalida.Revalida}'** e **'${TpColorProvas.Provas}'** estão disponiveis apenas no theme **MedSoft**.\r\n\r\n**OBS**: A cor **'${TpColorOrange.Orange}'** está disponivel apenas no theme **Recursos**.`,\r\n        table: {\r\n          defaultValue: {\r\n            summary: 'undefined',\r\n          },\r\n          type: {\r\n            summary: [\r\n              ...TP_COLORS,\r\n              ...TP_COLORS_MEDSOFT,\r\n              ...TP_COLORS_RECURSOS,\r\n            ].join('|'),\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<\r\n  Components.IonRadioGroup & Components.IonRadio & TpIonRadio\r\n>;\r\n\r\nexport const DefaultMarkup: Story = {\r\n  render: () => html`\r\n    <ion-radio-group>\r\n      <ion-radio value=\"1\"></ion-radio>\r\n      <ion-radio value=\"2\"></ion-radio>\r\n    </ion-radio-group>\r\n\r\n    <ion-radio-group>\r\n      <ion-radio value=\"1\" disabled></ion-radio>\r\n      <ion-radio value=\"2\" disabled></ion-radio>\r\n    </ion-radio-group>\r\n  `,\r\n};\r\nDefaultMarkup.argTypes = {\r\n  color: { table: { disable: true } },\r\n};\r\n\r\nexport const TextMarkup: Story = {\r\n  render: () => html`\r\n    <ion-radio-group class=\"markup-radio\">\r\n      <ion-radio value=\"1\">\r\n        <ion-text tp-type=\"p14\">\r\n          <p>Lorem ipsum, dolor sit amet consectetur.</p>\r\n        </ion-text>\r\n      </ion-radio>\r\n      <ion-radio value=\"2\">\r\n        <ion-text tp-type=\"p14\">\r\n          <p>Lorem ipsum, dolor sit amet consectetur.</p>\r\n        </ion-text>\r\n      </ion-radio>\r\n      <ion-radio value=\"3\">\r\n        <ion-text tp-type=\"p14\">\r\n          <p>Lorem ipsum, dolor sit amet consectetur.</p>\r\n        </ion-text>\r\n      </ion-radio>\r\n    </ion-radio-group>\r\n  `,\r\n};\r\nTextMarkup.argTypes = {\r\n  color: { table: { disable: true } },\r\n};\r\n\r\nexport const ColorsMarkup: Story = {\r\n  render: ({ ...args }) => html`\r\n    <ion-radio-group>\r\n      <ion-radio color=\"${args.color}\" value=\"1\"></ion-radio>\r\n      <ion-radio color=\"${args.color}\" value=\"2\"></ion-radio>\r\n    </ion-radio-group>\r\n  `,\r\n};\r\n"]}