{"version":3,"file":"icons.stories.js","sourceRoot":"","sources":["../../../../../../src/components/ionic/range/stories/compositions/icons.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AACjG,OAAO,EAAE,mBAAmB,IAAI,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AAEnG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAG3B,wBAAwB,EAAE,CAAC;AAC3B,uBAAuB,EAAE,CAAC;AAE1B,MAAM,IAAI,GAA2C;IACnD,KAAK,EAAE,qCAAqC;IAC5C,QAAQ,EAAE;QACR,CAAC,cAAc,CAAC,EAAE;YAChB,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;YAC5B,WAAW,EAAE,kCAAkC;YAC/C,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,WAAW;iBACrB;aACF;SACF;QACD,KAAK,EAAE;YACL,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,oDAAoD;YACjE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;QACD,KAAK,EAAE;YACL,OAAO,EAAE,SAAS;YAClB,WAAW,EACT,iEAAiE;YACnE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;QACD,GAAG,EAAE;YACH,OAAO,EAAE,QAAQ;YACjB,WAAW,EAAE,sDAAsD;YACnE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,QAAQ;iBAClB;aACF;SACF;QACD,GAAG,EAAE;YACH,OAAO,EAAE,QAAQ;YACjB,WAAW,EAAE,sDAAsD;YACnE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,QAAQ;iBAClB;aACF;SACF;KACF;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,IAAI;QACX,GAAG,EAAE,CAAC;QACN,GAAG,EAAE,EAAE;KACR;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,KAAK,GAAU;IAC1B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAAO,OAAA,IAAI,CAAA;;eAEhB,IAAI,CAAC,KAAK;uBACF,IAAI,CAAC,cAAc,CAAC;gBAC3B,IAAI,CAAC,KAAK;gBACV,IAAI,CAAC,KAAK;aACb,IAAI,CAAC,GAAG;aACR,IAAI,CAAC,GAAG;;;;;GAKlB,CAAA;KAAA;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\nimport { defineCustomElement as defineCustomElementIcon } from '@ionic/core/components/ion-icon';\nimport { defineCustomElement as defineCustomElementRange } from '@ionic/core/components/ion-range';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { TpIonRange } from '../../utils/range.type';\n\ndefineCustomElementRange();\ndefineCustomElementIcon();\n\nconst meta: Meta<Components.IonRange & TpIonRange> = {\n  title: 'components/Ionic/Range/Compositions',\n  argTypes: {\n    ['tp-secondary']: {\n      control: { type: 'boolean' },\n      description: 'Define a variação do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'Secondary',\n        },\n      },\n    },\n    ticks: {\n      control: 'boolean',\n      description: 'Define se o componente terá ticks em sua extensão.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n    snaps: {\n      control: 'boolean',\n      description:\n        'Se ticks for ativado este atributo deve ser juntamente ativado.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n    min: {\n      control: 'number',\n      description: 'Define o valor inteiro mínimo do intervalo de ticks.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'number',\n        },\n      },\n    },\n    max: {\n      control: 'number',\n      description: 'Define o valor inteiro máximo do intervalo de ticks.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'number',\n        },\n      },\n    },\n  },\n  args: {\n    ticks: true,\n    snaps: true,\n    min: 0,\n    max: 10,\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<Components.IonRange & TpIonRange>;\n\nexport const Icons: Story = {\n  render: ({ ...args }) => html`\n    <ion-range\n      color=\"${args.color}\"\n      ?tp-secondary=\"${args['tp-secondary']}\"\n      ?ticks=\"${args.ticks}\"\n      ?snaps=\"${args.snaps}\"\n      min=\"${args.min}\"\n      max=\"${args.max}\"\n    >\n      <ion-icon slot=\"start\" src=\"./assets/tp-type-minus.svg\"></ion-icon>\n      <ion-icon slot=\"end\" src=\"./assets/tp-type-plus.svg\"></ion-icon>\n    </ion-range>\n  `,\n  /* play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/ion-range/gi)).toBeTruthy();\n  }, */\n};\n"]}