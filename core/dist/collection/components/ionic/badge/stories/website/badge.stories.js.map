{"version":3,"file":"badge.stories.js","sourceRoot":"","sources":["../../../../../../src/components/ionic/badge/stories/website/badge.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AAEnG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EACL,SAAS,EACT,iBAAiB,EACjB,kBAAkB,GACnB,MAAM,+CAA+C,CAAC;AACvD,OAAO,EACL,WAAW,EACX,eAAe,EACf,aAAa,EACb,aAAa,EACb,eAAe,EACf,eAAe,GAChB,MAAM,uCAAuC,CAAC;AAG/C,wBAAwB,EAAE,CAAC;AAE3B,MAAM,IAAI,GAA2C;IACnD,KAAK,EAAE,gCAAgC;IACvC,QAAQ,EAAE;QACR,KAAK,EAAE;YACL,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,GAAG,SAAS,EAAE,GAAG,iBAAiB,EAAE,GAAG,kBAAkB,CAAC;YACpE,WAAW,EAAE;;uBAEI,WAAW,CAAC,IAAI,WAAW,eAAe,CAAC,QAAQ,WAAW,eAAe,CAAC,QAAQ,WAAW,eAAe,CAAC,QAAQ,YAAY,aAAa,CAAC,MAAM;;oBAE5J,aAAa,CAAC,MAAM,mDAAmD;YACrF,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE;wBACP,GAAG,SAAS;wBACZ,GAAG,iBAAiB;wBACpB,GAAG,kBAAkB;qBACtB,CAAC,IAAI,CAAC,GAAG,CAAC;iBACZ;aACF;SACF;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,aAAa,GAAU;IAClC,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAA,kCAAkC;CACrD,CAAC;AACF,aAAa,CAAC,QAAQ,GAAG;IACvB,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;CACpC,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAU;IAC/B,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAA,+CAA+C;CAClE,CAAC;AACF,UAAU,CAAC,QAAQ,GAAG;IACpB,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;CACpC,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAU;IAC/B,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAA,oDAAoD;CACvE,CAAC;AACF,UAAU,CAAC,QAAQ,GAAG;IACpB,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;CACpC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAU;IACjC,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAAO,OAAA,IAAI,CAAA;wBACP,IAAI,CAAC,KAAK;GAC/B,CAAA;KAAA;CACF,CAAC","sourcesContent":["import { Components } from '@ionic/core';\r\nimport { defineCustomElement as defineCustomElementBadge } from '@ionic/core/components/ion-badge';\r\nimport type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport {\r\n  TP_COLORS,\r\n  TP_COLORS_MEDSOFT,\r\n  TP_COLORS_RECURSOS,\r\n} from '../../../../../utils/constants/color.constant';\r\nimport {\r\n  TpColorAula,\r\n  TpColorMaterial,\r\n  TpColorOrange,\r\n  TpColorProvas,\r\n  TpColorQuestoes,\r\n  TpColorRevalida,\r\n} from '../../../../../utils/enums/color.enum';\r\nimport { TpIonBadge } from '../../utils/badge.type';\r\n\r\ndefineCustomElementBadge();\r\n\r\nconst meta: Meta<Components.IonBadge & TpIonBadge> = {\r\n  title: 'components/Ionic/Badge/Website',\r\n  argTypes: {\r\n    color: {\r\n      control: { type: 'select' },\r\n      options: [...TP_COLORS, ...TP_COLORS_MEDSOFT, ...TP_COLORS_RECURSOS],\r\n      description: `Define a cor do componente.\r\n\r\n**OBS**: As cores **'${TpColorAula.Aula}'**, **'${TpColorMaterial.Material}'**, **'${TpColorQuestoes.Questoes}'**, **'${TpColorRevalida.Revalida}'** e **'${TpColorProvas.Provas}'** estão disponiveis apenas no theme **MedSoft**.\r\n\r\n**OBS**: A cor **'${TpColorOrange.Orange}'** está disponivel apenas no theme **Recursos**.`,\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: [\r\n            ...TP_COLORS,\r\n            ...TP_COLORS_MEDSOFT,\r\n            ...TP_COLORS_RECURSOS,\r\n          ].join('|'),\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<Components.IonBadge & TpIonBadge>;\r\n\r\nexport const DefaultMarkup: Story = {\r\n  render: () => html` <ion-badge>Default</ion-badge> `,\r\n};\r\nDefaultMarkup.argTypes = {\r\n  color: { table: { disable: true } },\r\n};\r\n\r\nexport const SizeMarkup: Story = {\r\n  render: () => html` <ion-badge tp-size=\"md\">Size MD</ion-badge> `,\r\n};\r\nSizeMarkup.argTypes = {\r\n  color: { table: { disable: true } },\r\n};\r\n\r\nexport const FillMarkup: Story = {\r\n  render: () => html` <ion-badge tp-fill=\"outline\">Outline</ion-badge> `,\r\n};\r\nFillMarkup.argTypes = {\r\n  color: { table: { disable: true } },\r\n};\r\n\r\nexport const ColorsMarkup: Story = {\r\n  render: ({ ...args }) => html`\r\n    <ion-badge color=\"${args.color}\">Cores</ion-badge>\r\n  `,\r\n};\r\n"]}