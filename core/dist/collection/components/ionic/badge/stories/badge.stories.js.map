{"version":3,"file":"badge.stories.js","sourceRoot":"","sources":["../../../../../src/components/ionic/badge/stories/badge.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,EAAE,MAAM,kCAAkC,CAAC;AAEvE,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AAGvD,mBAAmB,EAAE,CAAC;AAEtB,MAAM,IAAI,GAA2C;IACnD,KAAK,EAAE,wBAAwB;IAC/B,QAAQ,EAAE;QACR,SAAS,EAAE;YACT,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;YAC1B,OAAO,EAAE,CAAC,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;YACrC,WAAW,EAAE,iCAAiC;YAC9C,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;iBAC3C;aACF;SACF;QACD,SAAS,EAAE;YACT,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;YAC1B,OAAO,EAAE,CAAC,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;YACrC,WAAW,EAAE,uCAAuC;YACpD,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;iBAC3C;aACF;SACF;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,OAAA,IAAI,CAAA;eACO,IAAI,CAAC,KAAK;iBACR,IAAI,CAAC,SAAS,CAAC;iBACf,IAAI,CAAC,SAAS,CAAC;;MAE1B,CAAA;KAAA;IACJ;;;SAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\nimport { defineCustomElement } from '@ionic/core/components/ion-badge';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { TP_ION_BADGE } from '../utils/badge.constant';\nimport { TpIonBadge } from '../utils/badge.type';\n\ndefineCustomElement();\n\nconst meta: Meta<Components.IonBadge & TpIonBadge> = {\n  title: 'components/Ionic/Badge',\n  argTypes: {\n    'tp-size': {\n      control: { type: 'check' },\n      options: [...TP_ION_BADGE['tp-size']],\n      description: 'Define o tamanho do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: TP_ION_BADGE['tp-size'].join('|'),\n        },\n      },\n    },\n    'tp-fill': {\n      control: { type: 'check' },\n      options: [...TP_ION_BADGE['tp-fill']],\n      description: 'Define o preenchimento do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: TP_ION_BADGE['tp-fill'].join('|'),\n        },\n      },\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<Components.IonBadge & TpIonBadge>;\n\nexport const Default: Story = {\n  render: ({ ...args }) =>\n    html` <ion-badge\n      color=\"${args.color}\"\n      tp-size=\"${args['tp-size']}\"\n      tp-fill=\"${args['tp-fill']}\"\n      >ion-badge</ion-badge\n    >`,\n  /* play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/ion-badge/gi)).toBeTruthy();\n  }, */\n};\n"]}