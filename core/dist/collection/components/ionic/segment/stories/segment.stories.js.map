{"version":3,"file":"segment.stories.js","sourceRoot":"","sources":["../../../../../src/components/ionic/segment/stories/segment.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AACnG,OAAO,EAAE,mBAAmB,IAAI,0BAA0B,EAAE,MAAM,oCAAoC,CAAC;AACvG,OAAO,EAAE,mBAAmB,IAAI,gCAAgC,EAAE,MAAM,2CAA2C,CAAC;AAEpH,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAG3B,0BAA0B,EAAE,CAAC;AAC7B,gCAAgC,EAAE,CAAC;AACnC,wBAAwB,EAAE,CAAC;AAE3B,MAAM,IAAI,GAA+C;IACvD,KAAK,EAAE,0BAA0B;IACjC,QAAQ,EAAE;QACR,QAAQ,EAAE;YACR,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,wDAAwD;YACrE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,KAAK;iBACf;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,UAAU,CAAC,GAAG,EAAE;YACd,MAAM,UAAU,GAAG,GAAG,EAAE;gBACtB,MAAM,QAAQ,GAAG,QAAQ,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;gBAE1D,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;oBAC3B,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE;wBACjB,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC9C;oBAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;wBAClB,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;qBAClC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;YAEF,MAAM,wBAAwB,GAAG,GAAG,EAAE;gBACpC,MAAM,eAAe,GAAG,QAAQ,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,CAAC;gBAExE,eAAe,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,EAAE;oBACxC,IAAI,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;wBACrD,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;qBACjD;oBAED,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;wBACtD,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;qBACpD;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;YAEF,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACnC,UAAU,EAAE,CAAC;gBACb,wBAAwB,EAAE,CAAC;aAC5B;QACH,CAAC,EAAE,GAAG,CAAC,CAAC;QAER,OAAO,IAAI,CAAA;;kCAEmB,IAAI,CAAC,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAsC1C,CAAC;IACJ,CAAC;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\nimport { defineCustomElement as defineCustomElementLabel } from '@ionic/core/components/ion-label';\nimport { defineCustomElement as defineCustomElementSegment } from '@ionic/core/components/ion-segment';\nimport { defineCustomElement as defineCustomElementSegmentButton } from '@ionic/core/components/ion-segment-button';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { TpIonSegment } from '../utils/segment.type';\n\ndefineCustomElementSegment();\ndefineCustomElementSegmentButton();\ndefineCustomElementLabel();\n\nconst meta: Meta<Components.IonSegment & TpIonSegment> = {\n  title: 'components/Ionic/Segment',\n  argTypes: {\n    disabled: {\n      control: 'boolean',\n      description: 'Define a estilização do estado disabled do componente.',\n      table: {\n        defaultValue: {\n          summary: false,\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<Components.IonSegment & TpIonSegment>;\n\nexport const Default: Story = {\n  render: ({ ...args }) => {\n    setTimeout(() => {\n      const setTpColor = () => {\n        const segments = document.querySelectorAll('ion-segment');\n\n        segments.forEach((segment) => {\n          if (args['color']) {\n            segment.setAttribute('color', args['color']);\n          }\n\n          if (!args['color']) {\n            segment.removeAttribute('color');\n          }\n        });\n      };\n\n      const removeClassSegmentButton = () => {\n        const segmentsButtons = document.querySelectorAll('ion-segment-button');\n\n        segmentsButtons.forEach((segmentButton) => {\n          if (segmentButton.parentElement.hasAttribute('color')) {\n            segmentButton.classList.add('in-segment-color');\n          }\n\n          if (!segmentButton.parentElement.hasAttribute('color')) {\n            segmentButton.classList.remove('in-segment-color');\n          }\n        });\n      };\n\n      if (args['color'] || !args['color']) {\n        setTpColor();\n        removeClassSegmentButton();\n      }\n    }, 100);\n\n    return html`\n      <tp-segment-container>\n        <ion-segment ?disabled=\"${args.disabled}\" value=\"segment-1\">\n          <ion-segment-button value=\"segment-1\">\n            <ion-label>Tabs 1</ion-label>\n          </ion-segment-button>\n\n          <ion-segment-button value=\"segment-2\">\n            <ion-label>Tabs 2</ion-label>\n          </ion-segment-button>\n\n          <ion-segment-button value=\"segment-3\">\n            <ion-label>Tabs 3</ion-label>\n          </ion-segment-button>\n\n          <ion-segment-button value=\"segment-4\">\n            <ion-label>Tabs 4</ion-label>\n          </ion-segment-button>\n\n          <ion-segment-button value=\"segment-5\">\n            <ion-label>Tabs 5</ion-label>\n          </ion-segment-button>\n\n          <ion-segment-button value=\"segment-6\">\n            <ion-label>Tabs 6</ion-label>\n          </ion-segment-button>\n\n          <ion-segment-button value=\"segment-7\">\n            <ion-label>Tabs 7</ion-label>\n          </ion-segment-button>\n\n          <ion-segment-button value=\"segment-8\">\n            <ion-label>Tabs 8</ion-label>\n          </ion-segment-button>\n\n          <ion-segment-button value=\"segment-9\">\n            <ion-label>Tabs 9</ion-label>\n          </ion-segment-button>\n        </ion-segment>\n      </tp-segment-container>\n    `;\n  },\n  /* play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/ion-segment/gi)).toBeTruthy();\n  }, */\n};\n"]}