{"version":3,"file":"navbar.js","sourceRoot":"","sources":["../../../../src/components/core/navbar/navbar.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAClE,wDAAwD;AACxD,OAAO,EAAE,kBAAkB,EAAE,MAAM,yCAAyC,CAAC;AAQ7E,MAAM,OAAO,QAAQ;;;;;IAmBnB,gBAAgB;QACd,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,oBAAoB;QAClB,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,CAAC;QACxC,CAAC;IACH,CAAC;IAEO,OAAO;QACb,IAAI,CAAC,mBAAmB,GAAG,IAAI,cAAc,CAAC,CAAC,OAAY,EAAE,EAAE;YAC7D,KAAK,IAAI,KAAK,IAAI,OAAO,EAAE,CAAC;gBAC1B,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC,CAAC;gBACtE,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC,CAAC;gBACpE,MAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,KAAK,GAAG,UAAU,CAAC;gBACtD,MAAM,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,KAAK,GAAG,SAAS,CAAC;gBAEtD,IAAI,UAAU,GAAG,CAAC,CAAC;gBACnB,IAAI,WAAW,GAAG,CAAC,CAAC;gBAEpB,IAAI,UAAU,KAAK,SAAS,EAAE,CAAC;oBAC7B,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,EAAE,CAAC;wBAC/B,IAAI,QAAQ,GAAG,CAAC,EAAE,CAAC;4BACjB,WAAW,GAAG,QAAQ,CAAC;wBACzB,CAAC;6BAAM,CAAC;4BACN,UAAU,GAAG,SAAS,GAAG,QAAQ,CAAC;4BAClC,IAAI,UAAU,GAAG,CAAC,EAAE,CAAC;gCACnB,UAAU,IAAI,CAAC,CAAC,CAAC;4BACnB,CAAC;wBACH,CAAC;oBACH,CAAC;yBAAM,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,OAAO,EAAE,CAAC;wBACvC,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;4BAClB,UAAU,GAAG,SAAS,CAAC;wBACzB,CAAC;6BAAM,CAAC;4BACN,WAAW,GAAG,SAAS,GAAG,QAAQ,CAAC;4BACnC,IAAI,WAAW,GAAG,CAAC,EAAE,CAAC;gCACpB,WAAW,IAAI,CAAC,CAAC,CAAC;4BACpB,CAAC;wBACH,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,EAAE,GAAG,UAAU,IAAI,CAAC,CAAC;gBACrE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,iBAAiB,EAAE,GAAG,WAAW,IAAI,CAAC,CAAC;YACzE,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9C,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAE7B,OAAO,CACL,EAAC,IAAI,2EAEH,KAAK,EAAE,kBAAkB,CAAC,KAAK,EAAE;gBAC/B,WAAW,EAAE,IAAI;gBACjB,CAAC,cAAc,IAAI,EAAE,CAAC,EAAE,IAAI,KAAK,SAAS;aAC3C,CAAC;YAEF,+DAAQ,KAAK,EAAC,mBAAmB;gBAC/B,6DAAM,IAAI,EAAC,KAAK,GAAQ;gBAExB,4DAAK,KAAK,EAAC,sBAAsB;oBAC/B,4DACE,EAAE,EAAC,MAAM,EACT,KAAK,EAAC,iBAAiB,EACvB,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,EAAoB,CAAC;wBAEjD,6DAAM,IAAI,EAAC,MAAM,GAAQ,CACrB;oBAEN,4DACE,KAAK,EAAC,mBAAmB,EACzB,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAoB,CAAC;wBAEnD,6DAAM,IAAI,EAAC,OAAO,GAAQ;wBAC1B,6DAAM,IAAI,EAAC,UAAU,GAAQ,CACzB;oBAEN,4DACE,EAAE,EAAC,OAAO,EACV,KAAK,EAAC,kBAAkB,EACxB,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,EAAoB,CAAC;wBAElD,6DAAM,IAAI,EAAC,OAAO,GAAQ,CACtB,CACF,CACC,CACJ,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, h, Host, Prop } from '@stencil/core';\r\n//import ResizeObserver from 'resize-observer-polyfill';\r\nimport { createColorClasses } from '../../../utils/functions/color.function';\r\nimport { TpColor } from '../../../utils/types/color.type';\r\n\r\n@Component({\r\n  tag: 'tp-navbar',\r\n  styleUrl: 'navbar.scss',\r\n  shadow: true,\r\n})\r\nexport class TpNavbar {\r\n  @Element() el!: HTMLElement;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop({ reflect: true }) color?: TpColor;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop() name?: 'secondary' | 'transparent';\r\n\r\n  private leftEl!: HTMLDivElement;\r\n  private rightEl!: HTMLDivElement;\r\n  private centerEl!: HTMLDivElement;\r\n\r\n  private sidesResizeObserver!: ResizeObserver;\r\n\r\n  componentDidLoad() {\r\n    this.setSize();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if (this.sidesResizeObserver) {\r\n      this.sidesResizeObserver.disconnect();\r\n    }\r\n  }\r\n\r\n  private setSize() {\r\n    this.sidesResizeObserver = new ResizeObserver((entries: any) => {\r\n      for (let entry of entries) {\r\n        const rightWidth = Number(this.rightEl.getBoundingClientRect().width);\r\n        const leftWidth = Number(this.leftEl.getBoundingClientRect().width);\r\n        const leftDiff = entry.contentRect.width - rightWidth;\r\n        const rightDiff = entry.contentRect.width - leftWidth;\r\n\r\n        let marginLeft = 0;\r\n        let marginRight = 0;\r\n\r\n        if (rightWidth !== leftWidth) {\r\n          if (entry.target.id === 'left') {\r\n            if (leftDiff > 0) {\r\n              marginRight = leftDiff;\r\n            } else {\r\n              marginLeft = rightDiff - leftDiff;\r\n              if (marginLeft < 0) {\r\n                marginLeft *= -1;\r\n              }\r\n            }\r\n          } else if (entry.target.id === 'right') {\r\n            if (rightDiff > 0) {\r\n              marginLeft = rightDiff;\r\n            } else {\r\n              marginRight = rightDiff - leftDiff;\r\n              if (marginRight < 0) {\r\n                marginRight *= -1;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        this.centerEl.style.setProperty('--padding-left', `${marginLeft}px`);\r\n        this.centerEl.style.setProperty('--padding-right', `${marginRight}px`);\r\n      }\r\n    });\r\n\r\n    this.sidesResizeObserver.observe(this.leftEl);\r\n    this.sidesResizeObserver.observe(this.rightEl);\r\n  }\r\n\r\n  render() {\r\n    const { color, name } = this;\r\n\r\n    return (\r\n      <Host\r\n        from-stencil\r\n        class={createColorClasses(color, {\r\n          'tp-navbar': true,\r\n          [`tp-navbar--${name}`]: name !== undefined,\r\n        })}\r\n      >\r\n        <header class=\"tp-navbar__header\">\r\n          <slot name=\"top\"></slot>\r\n\r\n          <div class=\"tp-navbar__container\">\r\n            <div\r\n              id=\"left\"\r\n              class=\"tp-navbar__left\"\r\n              ref={(el) => (this.leftEl = el as HTMLDivElement)}\r\n            >\r\n              <slot name=\"left\"></slot>\r\n            </div>\r\n\r\n            <div\r\n              class=\"tp-navbar__center\"\r\n              ref={(el) => (this.centerEl = el as HTMLDivElement)}\r\n            >\r\n              <slot name=\"title\"></slot>\r\n              <slot name=\"subtitle\"></slot>\r\n            </div>\r\n\r\n            <div\r\n              id=\"right\"\r\n              class=\"tp-navbar__right\"\r\n              ref={(el) => (this.rightEl = el as HTMLDivElement)}\r\n            >\r\n              <slot name=\"right\"></slot>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}