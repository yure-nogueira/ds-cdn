{"version":3,"file":"toggle.js","sourceRoot":"","sources":["../../../../src/components/core/toggle/toggle.tsx"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,CAAC,EACD,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,KAAK,EACL,YAAY,GACb,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,kBAAkB,EAAE,MAAM,yCAAyC,CAAC;AAS7E,MAAM,OAAO,QAAQ;;QACX,WAAM,GAAG,YAAY,CAAC,4BAA4B,CAAC,CAAC;;yBAaR,IAAI;yBAKJ,KAAK;;IAEzD,gBAAgB;QACb,IAAI,CAAC,OAAuB,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CACrD,qBAAqB,CACrB,CAAC;IACL,CAAC;IAED,SAAS;;QACP,MAAM,aAAa,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,YAAY,CAAC;QAChD,IAAI,CAAC,OAAuB,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,aAAa,IAAI,CAAC;IACvE,CAAC;IAED,IAAI;QACF,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,UAAU,CAAC,GAAG,EAAE;YACb,IAAI,CAAC,OAAuB,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;QACzD,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,KAAK;QACH,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,UAAU,CAAC,GAAG,EAAE;YACb,IAAI,CAAC,OAAuB,CAAC,KAAK,CAAC,SAAS;gBAC3C,8BAA8B,CAAC;QACnC,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAGD,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACnC,CAAC;IACH,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACnC,CAAC;IACH,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QAErD,OAAO,CACL,EAAC,IAAI,qDACH,KAAK,EAAE,kBAAkB,CAAC,KAAK,EAAE;gBAC/B,WAAW,EAAE,IAAI;gBACjB,sBAAsB,EAAE,SAAS;gBACjC,uBAAuB,EAAE,SAAS;aACnC,CAAC,EACF,OAAO,EAAE,GAAG,EAAE;gBACZ,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,CAAC;YAED,4DAAK,KAAK,EAAC,oBAAoB;gBAC7B,8DAAa,CACT;YACN,4DACE,KAAK,EAAC,mBAAmB,EACzB,OAAO,EAAE,GAAG,EAAE;oBACZ,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;gBAED,iEAAU,KAAK,EAAC,iBAAiB,EAAC,GAAG,EAAE,MAAM,GAAa,CACtD,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {\r\n  Component,\r\n  h,\r\n  Host,\r\n  Prop,\r\n  Element,\r\n  Watch,\r\n  getAssetPath,\r\n} from '@stencil/core';\r\nimport { createColorClasses } from '../../../utils/functions/color.function';\r\nimport { TpColor } from '../../../utils/types/color.type';\r\n\r\n@Component({\r\n  tag: 'tp-toggle',\r\n  styleUrl: 'toggle.scss',\r\n  assetsDirs: ['assets'],\r\n  scoped: true,\r\n})\r\nexport class TpToggle {\r\n  private iconUp = getAssetPath('./assets/tp-chevron-up.svg');\r\n\r\n  @Element() host!: HTMLElement;\r\n  element?: HTMLElement;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop({ reflect: true }) color?: TpColor;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) collapsed = true;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) iconClick = false;\r\n\r\n  componentDidLoad() {\r\n    (this.element as HTMLElement) = this.host.querySelector(\r\n      '.tp-toggle__content',\r\n    )!;\r\n  }\r\n\r\n  setHeight() {\r\n    const elementHeight = this.element?.scrollHeight;\r\n    (this.element as HTMLElement).style.maxHeight = `${elementHeight}px`;\r\n  }\r\n\r\n  open() {\r\n    this.setHeight();\r\n    setTimeout(() => {\r\n      (this.element as HTMLElement).style.maxHeight = '100%';\r\n    }, 300);\r\n  }\r\n\r\n  close() {\r\n    this.setHeight();\r\n    setTimeout(() => {\r\n      (this.element as HTMLElement).style.maxHeight =\r\n        'var(--tp-initial-max-height)';\r\n    }, 350);\r\n  }\r\n\r\n  @Watch('collapsed')\r\n  toggle() {\r\n    if (!this.collapsed) {\r\n      this.open();\r\n    } else {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  onClickComponent() {\r\n    if (!this.iconClick) {\r\n      this.collapsed = !this.collapsed;\r\n    }\r\n  }\r\n\r\n  onClickIcon() {\r\n    if (this.iconClick) {\r\n      this.collapsed = !this.collapsed;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { collapsed, color, iconClick, iconUp } = this;\r\n\r\n    return (\r\n      <Host\r\n        class={createColorClasses(color, {\r\n          'tp-toggle': true,\r\n          'tp-toggle--collapsed': collapsed,\r\n          'tp-toggle--icon-click': iconClick,\r\n        })}\r\n        onClick={() => {\r\n          this.onClickComponent();\r\n        }}\r\n      >\r\n        <div class=\"tp-toggle__content\">\r\n          <slot></slot>\r\n        </div>\r\n        <div\r\n          class=\"tp-toggle__bottom\"\r\n          onClick={() => {\r\n            this.onClickIcon();\r\n          }}\r\n        >\r\n          <ion-icon class=\"tp-toggle__icon\" src={iconUp}></ion-icon>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}