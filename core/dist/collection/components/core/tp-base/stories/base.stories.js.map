{"version":3,"file":"base.stories.js","sourceRoot":"","sources":["../../../../../src/components/core/tp-base/stories/base.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AACnG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAI3B,wBAAwB,EAAE,CAAC;AAE3B,MAAM,IAAI,GAA8B;IACtC,KAAK,EAAE,sBAAsB;IAC7B,QAAQ,EAAE;QACR,MAAM,EAAE;YACN,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;YACrC,WAAW,EAAE,yCAAyC;YACtD,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE,OAAO,EAAE,uBAAuB,EAAE;gBAC1C,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;aACvC;SACF;QACD,GAAG,EAAE;YACH,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;YACrC,WAAW,EAAE,sCAAsC;YACnD,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE,OAAO,EAAE,uBAAuB,EAAE;gBAC1C,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;aACvC;SACF;QACD,QAAQ,EAAE;YACR,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;YAC1D,WAAW,EAAE,qDAAqD;YAClE,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE,OAAO,EAAE,yCAAyC,EAAE;gBAC5D,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;aACvC;SACF;QACD,QAAQ,EAAE;YACR,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;YAC1D,WAAW,EAAE,mDAAmD;YAChE,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE,OAAO,EAAE,yCAAyC,EAAE;gBAC5D,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;aACvC;SACF;KACF;IACD,IAAI,EAAE,EAAE;CACT,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,OAAO,IAAI,CAAA;;gBAEC,IAAI,CAAC,KAAK;iBACT,IAAI,CAAC,MAAM;cACd,IAAI,CAAC,GAAG;oBACF,IAAI,CAAC,QAAQ;oBACb,IAAI,CAAC,QAAQ;;;;;;KAM5B,CAAC;IACJ,CAAC;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { defineCustomElement as defineCustomElementBadge } from '@ionic/core/components/ion-badge';\r\nimport { html } from 'lit';\r\nimport { TpBaseType } from '../utils/base.type';\r\nimport { TpBase } from '../base';\r\n\r\ndefineCustomElementBadge();\r\n\r\nconst meta: Meta<TpBase & TpBaseType> = {\r\n  title: 'components/Core/Base',\r\n  argTypes: {\r\n    radius: {\r\n      control: { type: 'select' },\r\n      options: ['s00', 's02', 's04', 's08'],\r\n      description: 'Define o valor de radius do componente.',\r\n      table: {\r\n        type: { summary: 's00 | s02 | s04 | s08' },\r\n        defaultValue: { summary: 'undefined' },\r\n      },\r\n    },\r\n    gap: {\r\n      control: { type: 'select' },\r\n      options: ['s00', 's02', 's04', 's08'],\r\n      description: 'Define o valor de gap do componente.',\r\n      table: {\r\n        type: { summary: 's00 | s02 | s04 | s08' },\r\n        defaultValue: { summary: 'undefined' },\r\n      },\r\n    },\r\n    spacingH: {\r\n      control: { type: 'select' },\r\n      options: ['s00', 's02', 's04', 's08', 's12', 's16', 's24'],\r\n      description: 'Define o valor de padding horizontal do componente.',\r\n      table: {\r\n        type: { summary: 's00 | s02 | s04 | s08 | s12 | s16 | s24' },\r\n        defaultValue: { summary: 'undefined' },\r\n      },\r\n    },\r\n    spacingV: {\r\n      control: { type: 'select' },\r\n      options: ['s00', 's02', 's04', 's08', 's12', 's16', 's24'],\r\n      description: 'Define o valor de padding vertical do componente.',\r\n      table: {\r\n        type: { summary: 's00 | s02 | s04 | s08 | s12 | s16 | s24' },\r\n        defaultValue: { summary: 'undefined' },\r\n      },\r\n    },\r\n  },\r\n  args: {},\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<TpBase & TpBaseType>;\r\n\r\nexport const Default: Story = {\r\n  render: ({ ...args }) => {\r\n    return html`\r\n      <tp-base\r\n        color=${args.color}\r\n        radius=${args.radius}\r\n        gap=${args.gap}\r\n        spacing-v=${args.spacingV}\r\n        spacing-h=${args.spacingH}\r\n      >\r\n        <ion-text slot=\"start\"><span>Left</span></ion-text>\r\n        <ion-text class=\"middle\" slot=\"middle\"><span>Middle</span></ion-text>\r\n        <ion-text slot=\"end\"><span>Right</span></ion-text>\r\n      </tp-base>\r\n    `;\r\n  },\r\n  /* play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/tp-base/gi)).toBeTruthy();\r\n  }, */\r\n};\r\n"]}