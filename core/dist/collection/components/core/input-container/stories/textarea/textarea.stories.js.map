{"version":3,"file":"textarea.stories.js","sourceRoot":"","sources":["../../../../../../src/components/core/input-container/stories/textarea/textarea.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AACnG,OAAO,EAAE,mBAAmB,IAAI,2BAA2B,EAAE,MAAM,qCAAqC,CAAC;AAEzG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAE3B,OAAO,EAAE,kBAAkB,EAAE,MAAM,uCAAuC,CAAC;AAE3E,2BAA2B,EAAE,CAAC;AAC9B,wBAAwB,EAAE,CAAC;AAE3B,MAAM,IAAI,GAAoD;IAC5D,KAAK,EAAE,0CAA0C;IACjD,QAAQ,EAAE;QACR,KAAK,EAAE;YACL,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,GAAG,kBAAkB,CAAC,KAAK,CAAC;YACtC,WAAW,EAAE,gCAAgC;YAC7C,KAAK,EAAE;gBACL,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;gBACtC,IAAI,EAAE,EAAE,OAAO,EAAE,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;aACtD;SACF;QACD,QAAQ,EAAE;YACR,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,wDAAwD;YACrE,KAAK,EAAE;gBACL,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;gBACtC,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;aAC7B;SACF;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAAO,OAAA,IAAI,CAAA;;eAEhB,IAAI,CAAC,KAAK;eACV,IAAI,CAAC,KAAK;mBACN,IAAI,CAAC,QAAQ;;;;;;;;;;;;;;GAc7B,CAAA;KAAA;CACF,CAAC","sourcesContent":["import { Components } from '@ionic/core';\r\nimport { defineCustomElement as defineCustomElementLabel } from '@ionic/core/components/ion-label';\r\nimport { defineCustomElement as defineCustomElementTextarea } from '@ionic/core/components/ion-textarea';\r\nimport type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport { TpInputContainer } from '../../input-container';\r\nimport { TP_INPUT_CONTAINER } from '../../utils/input-container.constants';\r\n\r\ndefineCustomElementTextarea();\r\ndefineCustomElementLabel();\r\n\r\nconst meta: Meta<Components.IonTextarea & TpInputContainer> = {\r\n  title: 'components/Core/Input Container/Textarea',\r\n  argTypes: {\r\n    state: {\r\n      control: { type: 'select' },\r\n      options: [...TP_INPUT_CONTAINER.state],\r\n      description: 'Define o estado do componente.',\r\n      table: {\r\n        defaultValue: { summary: 'undefined' },\r\n        type: { summary: TP_INPUT_CONTAINER.state.join('|') },\r\n      },\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n      description: 'Define a estilização do estado disabled do componente.',\r\n      table: {\r\n        defaultValue: { summary: 'undefined' },\r\n        type: { summary: 'boolean' },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<Components.IonTextarea & TpInputContainer>;\r\n\r\nexport const Default: Story = {\r\n  render: ({ ...args }) => html`\r\n    <tp-input-container\r\n      color=\"${args.color}\"\r\n      state=\"${args.state}\"\r\n      ?disabled=\"${args.disabled}\"\r\n    >\r\n      <ion-label slot=\"label\" tp-type=\"p14\">Descrição Textarea</ion-label>\r\n      <ion-textarea\r\n        placeholder=\"Lorem ipsum, dolor sit amet consectetur.\"\r\n        mode=\"md\"\r\n      ></ion-textarea>\r\n      <ion-label slot=\"feedback-error\" tp-type=\"p14\">\r\n        *Caracteres invalidos.\r\n      </ion-label>\r\n      <ion-label slot=\"feedback-success\" tp-type=\"p14\">\r\n        *Caracteres validos\r\n      </ion-label>\r\n    </tp-input-container>\r\n  `,\r\n};\r\n"]}