{"version":3,"file":"context-menu.js","sourceRoot":"","sources":["../../../../src/components/core/context-menu/context-menu.tsx"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,OAAO,EACP,KAAK,EAEL,CAAC,EACD,IAAI,EACJ,MAAM,EACN,IAAI,EACJ,KAAK,GACN,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,kBAAkB,EAAE,MAAM,yCAAyC,CAAC;AAE7E,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAQhE,MAAM,OAAO,aAAa;;;qCASyB,IAAI;yBAKhC,IAAI;;IAYzB;;OAEG;IACH,MAAM;QACJ,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAED;;OAEG;IACH,iBAAiB;QACf,IAAI,IAAI,CAAC,qBAAqB,KAAK,IAAI,CAAC,SAAS,EAAE,CAAC;YAClD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAC9C,CAAC;IACH,CAAC;IAED;;OAEG;IAEH,mBAAmB,CAAC,KAAiB;QACnC,MAAM,MAAM,GAAG,KAAK,CAAC,MAAc,CAAC;QAEpC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;YACnD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC;IACH,CAAC;IAGD,gBAAgB,CAAC,EAAiB;QAChC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC,GAAG,KAAK,QAAQ,EAAE,CAAC;YAC3C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC;IACH,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QAElC,OAAO,CACL,EAAC,IAAI,qDACH,KAAK,EAAE,kBAAkB,CAAC,KAAK,EAAE;gBAC/B,iBAAiB,EAAE,IAAI;gBACvB,4BAA4B,EAAE,SAAS;aACxC,CAAC;YAEF,sFAEE,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,EAC5B,KAAK,EAAC,yBAAyB,EAC/B,IAAI,EAAC,OAAO;gBACZ,aAAa;gBACb,IAAI,EAAC,IAAI;gBAET,iEACE,IAAI,EAAC,WAAW,EAChB,KAAK,EAAC,uBAAuB,EAC7B,GAAG,EAAE,eAAe,CAAC,KAAK,CAAC,YAAY,GAC7B,CACD;YAEb,4DAAK,KAAK,EAAC,0BAA0B;gBACnC,4DAAK,KAAK,EAAC,sBAAsB;oBAC/B,sFAEE,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,EAC5B,KAAK,EAAC,+BAA+B,EACrC,IAAI,EAAC,OAAO;wBACZ,aAAa;wBACb,IAAI,EAAC,IAAI;wBAET,iEACE,IAAI,EAAC,WAAW,EAChB,KAAK,EAAC,6BAA6B,EACnC,GAAG,EAAE,eAAe,CAAC,KAAK,CAAC,YAAY,GAC7B,CACD;oBACb;wBACE,6DAAM,IAAI,EAAC,MAAM,GAAQ,CACrB,CACF;gBACN,6DAAM,IAAI,EAAC,MAAM,GAAQ,CACrB,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {\r\n  Component,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n  h,\r\n  Host,\r\n  Listen,\r\n  Prop,\r\n  State,\r\n} from '@stencil/core';\r\nimport { createColorClasses } from '../../../utils/functions/color.function';\r\nimport { TpColor } from '../../../utils/types/color.type';\r\nimport { TP_CONTEXT_MENU } from './utils/context-menu.constant';\r\n\r\n@Component({\r\n  tag: 'tp-context-menu',\r\n  styleUrl: 'context-menu.scss',\r\n  assetsDirs: ['assets'],\r\n  scoped: true,\r\n})\r\nexport class TpContextMenu {\r\n  /**\r\n   * Define a variação de cor do componente.\r\n   */\r\n  @Prop({ reflect: true }) color: TpColor;\r\n\r\n  /**\r\n   * Define o estato inicial do componente.\r\n   */\r\n  @Prop({ reflect: true }) initialCollapsedState = true;\r\n\r\n  /**\r\n   * Define a variação de estado do componente.\r\n   */\r\n  @State() collapsed = true;\r\n\r\n  /**\r\n   * Emitido quando a propriedade collapsed é alterada.\r\n   */\r\n  @Event() tpCollapse: EventEmitter<boolean>;\r\n\r\n  /**\r\n   * Referência ao host.\r\n   */\r\n  @Element() host: HTMLElement;\r\n\r\n  /**\r\n   * Métodos internos.\r\n   */\r\n  toggle() {\r\n    this.collapsed = !this.collapsed;\r\n    this.tpCollapse.emit(this.collapsed);\r\n  }\r\n\r\n  /**\r\n   * Lifecycle hooks.\r\n   */\r\n  componentWillLoad() {\r\n    if (this.initialCollapsedState !== this.collapsed) {\r\n      this.collapsed = this.initialCollapsedState;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Event listeners.\r\n   */\r\n  @Listen('click', { target: 'body' })\r\n  closeOnOutsideClick(event: MouseEvent) {\r\n    const target = event.target as Node;\r\n\r\n    if (!this.collapsed && !this.host.contains(target)) {\r\n      this.collapsed = true;\r\n    }\r\n  }\r\n\r\n  @Listen('keydown')\r\n  closeOnEscapeKey(ev: KeyboardEvent) {\r\n    if (!this.collapsed && ev.key === 'Escape') {\r\n      this.collapsed = true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { color, collapsed } = this;\r\n\r\n    return (\r\n      <Host\r\n        class={createColorClasses(color, {\r\n          'tp-context-menu': true,\r\n          'tp-context-menu--collapsed': collapsed,\r\n        })}\r\n      >\r\n        <ion-button\r\n          icon-only\r\n          onClick={() => this.toggle()}\r\n          class=\"tp-context-menu__button\"\r\n          fill=\"clear\"\r\n          // @ts-ignore\r\n          size=\"sm\"\r\n        >\r\n          <ion-icon\r\n            slot=\"icon-only\"\r\n            class=\"tp-context-menu__icon\"\r\n            src={TP_CONTEXT_MENU.icons.moreVertical}\r\n          ></ion-icon>\r\n        </ion-button>\r\n\r\n        <div class=\"tp-context-menu__content\">\r\n          <div class=\"tp-context-menu__top\">\r\n            <ion-button\r\n              icon-only\r\n              onClick={() => this.toggle()}\r\n              class=\"tp-context-menu__inner-button\"\r\n              fill=\"clear\"\r\n              // @ts-ignore\r\n              size=\"sm\"\r\n            >\r\n              <ion-icon\r\n                slot=\"icon-only\"\r\n                class=\"tp-context-menu__inner-icon\"\r\n                src={TP_CONTEXT_MENU.icons.moreVertical}\r\n              ></ion-icon>\r\n            </ion-button>\r\n            <div>\r\n              <slot name=\"item\"></slot>\r\n            </div>\r\n          </div>\r\n          <slot name=\"info\"></slot>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}