{"version":3,"file":"tiles.stories.js","sourceRoot":"","sources":["../../../../../src/components/core/tiles/stories/tiles.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AACnG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAI3B,wBAAwB,EAAE,CAAC;AAE3B,MAAM,IAAI,GAAgC;IACxC,KAAK,EAAE,uBAAuB;IAC9B,QAAQ,EAAE;QACR,MAAM,EAAE;YACN,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YACzB,WAAW,EAAE,gCAAgC;YAC7C,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,EAAE;iBACZ;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,MAAM;iBAChB;aACF;SACF;QACD,KAAK,EAAE;YACL,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YACzB,WAAW,EAAE,+BAA+B;YAC5C,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,EAAE;iBACZ;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,MAAM;iBAChB;aACF;SACF;QACD,QAAQ,EAAE;YACR,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;YAC5B,WAAW,EAAE,0CAA0C;YACvD,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,KAAK;iBACf;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;QACD,KAAK,EAAE;YACL,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;YAC5B,WAAW,EAAE,iBAAiB;YAC9B,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,KAAK;iBACf;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;KACF;IACD,IAAI,EAAE;QACJ,MAAM,EAAE,QAAQ;QAChB,KAAK,EAAE,mBAAmB;KAC3B;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,OAAO,IAAI,CAAA;;gBAEC,IAAI,CAAC,KAAK;iBACT,IAAI,CAAC,MAAM;gBACZ,IAAI,CAAC,KAAK;oBACN,IAAI,CAAC,QAAQ;iBAChB,IAAI,CAAC,KAAK;;;;KAItB,CAAC;IACJ,CAAC;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { defineCustomElement as defineCustomElementBadge } from '@ionic/core/components/ion-badge';\r\nimport { html } from 'lit';\r\nimport { TpTiles } from '../tiles';\r\nimport { TpTilesType } from '../utils/tiles.type';\r\n\r\ndefineCustomElementBadge();\r\n\r\nconst meta: Meta<TpTiles & TpTilesType> = {\r\n  title: 'components/Core/Tiles',\r\n  argTypes: {\r\n    titulo: {\r\n      control: { type: 'text' },\r\n      description: 'Define o titulo do componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: '',\r\n        },\r\n        type: {\r\n          summary: 'text',\r\n        },\r\n      },\r\n    },\r\n    label: {\r\n      control: { type: 'text' },\r\n      description: 'Define o texto do componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: '',\r\n        },\r\n        type: {\r\n          summary: 'text',\r\n        },\r\n      },\r\n    },\r\n    selected: {\r\n      control: { type: 'boolean' },\r\n      description: 'Define se o componente esta selecionado.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: false,\r\n        },\r\n        type: {\r\n          summary: 'boolean',\r\n        },\r\n      },\r\n    },\r\n    solid: {\r\n      control: { type: 'boolean' },\r\n      description: 'Define se ... .',\r\n      table: {\r\n        defaultValue: {\r\n          summary: false,\r\n        },\r\n        type: {\r\n          summary: 'boolean',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  args: {\r\n    titulo: 'Titulo',\r\n    label: 'Lorem ipsum dolor',\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<TpTiles & TpTilesType>;\r\n\r\nexport const Default: Story = {\r\n  render: ({ ...args }) => {\r\n    return html`\r\n      <tp-tiles\r\n        color=${args.color}\r\n        titulo=${args.titulo}\r\n        label=${args.label}\r\n        ?selected=${args.selected}\r\n        ?solid=${args.solid}\r\n      >\r\n        <ion-badge color=\"attention\" tp-size=\"md\">ion-badge</ion-badge>\r\n      </tp-tiles>\r\n    `;\r\n  },\r\n  /* play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    expect(canvas.getByText(/tp-tiles/gi)).toBeTruthy();\r\n  }, */\r\n};\r\n"]}