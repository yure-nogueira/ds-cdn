{"version":3,"file":"download-button.js","sourceRoot":"","sources":["../../../../src/components/core/download-button/download-button.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,kBAAkB,EAAE,MAAM,yCAAyC,CAAC;AAE7E,OAAO,EAAE,kBAAkB,EAAE,MAAM,kCAAkC,CAAC;AAStE,MAAM,OAAO,gBAAgB;;;qBASM,CAAC;2BAKK,KAAK;0BAKN,KAAK;;;IAO3C,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAE7D,OAAO,CACL,EAAC,IAAI,qDACH,KAAK,EAAE,kBAAkB,CAAC,KAAK,EAAE;gBAC/B,oBAAoB,EAAE,IAAI;gBAC1B,iCAAiC,EAAE,WAAW,IAAI,CAAC,UAAU;gBAC7D,gCAAgC,EAAE,UAAU;gBAC5C,CAAC,uBAAuB,IAAI,EAAE,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC;aAC/C,CAAC;YAEF,4DAAK,KAAK,EAAC,uCAAuC;gBAChD,4DAAK,OAAO,EAAC,WAAW;oBACtB,+DAAQ,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAC,IAAI,EAAC,KAAK,EAAC,4BAA4B,GAAG;oBACpE,+DACE,EAAE,EAAC,IAAI,EACP,EAAE,EAAC,IAAI,EACP,CAAC,EAAC,IAAI,EACN,KAAK,EAAC,8DAA8D,EACpE,KAAK,EAAE,EAAE,SAAS,EAAE,GAAG,KAAK,EAAE,EAAE,GAChC,CACE,CACF;YACN,iEACE,KAAK,EAAC,gCAAgC,EACtC,GAAG,EAAE,kBAAkB,CAAC,KAAK,CAAC,SAAS,GAC7B;YACZ,4DAAK,KAAK,EAAC,iCAAiC,GAAO,CAC9C,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, Prop, h } from '@stencil/core';\r\nimport { createColorClasses } from '../../../utils/functions/color.function';\r\nimport { TpColor } from '../../../utils/types/color.type';\r\nimport { TP_DOWNLOAD_BUTTON } from './utils/download-button.constant';\r\nimport { TpDownloadButtonSizes } from './utils/download-button.type';\r\n\r\n@Component({\r\n  tag: 'tp-download-button',\r\n  styleUrl: 'download-button.scss',\r\n  shadow: true,\r\n  assetsDirs: ['assets'],\r\n})\r\nexport class TpDownloadButton {\r\n  /**\r\n   * Define a variação de cor do componente.\r\n   */\r\n  @Prop({ reflect: true }) color: TpColor;\r\n\r\n  /**\r\n   * Define o progresso do download.\r\n   */\r\n  @Prop({ reflect: true }) value = 0;\r\n\r\n  /**\r\n   * Define se o download está ou não em progresso.\r\n   */\r\n  @Prop({ reflect: true }) downloading = false;\r\n\r\n  /**\r\n   * Define se o download está finalizado.\r\n   */\r\n  @Prop({ reflect: true }) downloaded = false;\r\n\r\n  /**\r\n   * Define a variação de tamanho do componente.\r\n   */\r\n  @Prop({ reflect: true }) size: TpDownloadButtonSizes;\r\n\r\n  render() {\r\n    const { color, value, downloading, downloaded, size } = this;\r\n\r\n    return (\r\n      <Host\r\n        class={createColorClasses(color, {\r\n          'tp-download-button': true,\r\n          'tp-download-button--downloading': downloading && !downloaded,\r\n          'tp-download-button--downloaded': downloaded,\r\n          [`tp-download-button--${size}`]: Boolean(size),\r\n        })}\r\n      >\r\n        <div class=\"tp-download-button__circles-container\">\r\n          <svg viewBox=\"0 0 36 36\">\r\n            <circle cx=\"18\" cy=\"18\" r=\"16\" class=\"tp-download-button__circle\" />\r\n            <circle\r\n              cx=\"18\"\r\n              cy=\"18\"\r\n              r=\"16\"\r\n              class=\"tp-download-button__circle tp-download-button__circle--value\"\r\n              style={{ '--value': `${value}` }}\r\n            />\r\n          </svg>\r\n        </div>\r\n        <ion-icon\r\n          class=\"tp-download-button__arrow-icon\"\r\n          src={TP_DOWNLOAD_BUTTON.icons.arrowDown}\r\n        ></ion-icon>\r\n        <div class=\"tp-download-button__square-icon\"></div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}