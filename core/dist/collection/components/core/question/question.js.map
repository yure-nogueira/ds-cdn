{"version":3,"file":"question.js","sourceRoot":"","sources":["../../../../src/components/core/question/question.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,EAAE,kBAAkB,EAAE,MAAM,yCAAyC,CAAC;AAS7E,MAAM,OAAO,UAAU;;QACb,aAAQ,GAAG,YAAY,CAAC,8BAA8B,CAAC,CAAC;;yBAUZ,KAAK;;;IAOzD;;OAEG;IACH,MAAM;QACJ,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QAEnD,OAAO,CACL,EAAC,IAAI,qDACH,KAAK,EAAE,kBAAkB,CAAC,KAAK,EAAE;gBAC/B,aAAa,EAAE,IAAI;gBACnB,wBAAwB,EAAE,SAAS;aACpC,CAAC,EACF,OAAO,EAAE,GAAG,EAAE;gBACZ,IAAI,CAAC,MAAM,EAAE,CAAC;YAChB,CAAC;YAEA,KAAK,IAAI,4DAAK,KAAK,EAAC,mBAAmB,EAAC,SAAS,EAAE,KAAK,GAAQ;YACjE,4DAAK,KAAK,EAAC,mBAAmB;gBAC5B,8DAAa,CACT;YACN,iEAAU,KAAK,EAAC,mBAAmB,EAAC,GAAG,EAAE,QAAQ,GAAa,CACzD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, getAssetPath, h, Host, Prop } from '@stencil/core';\r\nimport { createColorClasses } from '../../../utils/functions/color.function';\r\nimport { TpColor } from '../../../utils/types/color.type';\r\n\r\n@Component({\r\n  tag: 'tp-question',\r\n  styleUrl: 'question.scss',\r\n  assetsDirs: ['assets'],\r\n  shadow: true,\r\n})\r\nexport class TpQuestion {\r\n  private iconDown = getAssetPath('./assets/tp-chevron-down.svg');\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop({ reflect: true }) color?: TpColor;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) collapsed = false;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop() texto?: string;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  toggle() {\r\n    this.collapsed = !this.collapsed;\r\n  }\r\n\r\n  render() {\r\n    const { collapsed, texto, color, iconDown } = this;\r\n\r\n    return (\r\n      <Host\r\n        class={createColorClasses(color, {\r\n          'tp-question': true,\r\n          'tp-question--collapsed': collapsed,\r\n        })}\r\n        onClick={() => {\r\n          this.toggle();\r\n        }}\r\n      >\r\n        {texto && <div class=\"tp-question__text\" innerHTML={texto}></div>}\r\n        <div class=\"tp-question__text\">\r\n          <slot></slot>\r\n        </div>\r\n        <ion-icon class=\"tp-question__icon\" src={iconDown}></ion-icon>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}