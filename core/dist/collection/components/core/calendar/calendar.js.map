{"version":3,"file":"calendar.js","sourceRoot":"","sources":["../../../../src/components/core/calendar/calendar.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  Event,\r\n  EventEmitter,\r\n  h,\r\n  Host,\r\n  Prop,\r\n  State,\r\n} from '@stencil/core';\r\nimport { createColorClasses } from '../../../utils/functions/color.function';\r\nimport { TpColor } from '../../../utils/types/color.type';\r\nimport { TP_CALENDAR } from './utils/calendar.constant';\r\nimport {\r\n  TpCalendarChangeDirection,\r\n  TpCalendarTimeframe,\r\n} from './utils/calendar.type';\r\nimport { createGesture } from './utils/gesture';\r\nimport { Gesture, GestureConfig } from './utils/gesture/index';\r\n\r\n@Component({\r\n  tag: 'tp-calendar',\r\n  styleUrl: 'calendar.scss',\r\n  assetsDirs: ['assets'],\r\n  scoped: true,\r\n})\r\nexport class TpCalendar {\r\n  /**\r\n   * Define a variação de cor do componente.\r\n   */\r\n  @Prop({ reflect: true }) color: TpColor;\r\n\r\n  /**\r\n   * Define a etiqueta do conteúdo sendo exibido.\r\n   */\r\n  @Prop({ reflect: true }) label: string;\r\n\r\n  /**\r\n   * Define o valor inicial do intervalo de tempo que representa\r\n   * o conteúdo sendo exibido.\r\n   */\r\n  @Prop({ reflect: true }) initialTimeframe: TpCalendarTimeframe =\r\n    TP_CALENDAR.timeframes.week;\r\n\r\n  /**\r\n   * Define o valor atual do intervalo de tempo que representa\r\n   * o conteúdo sendo exibido.\r\n   */\r\n  @State() timeframe: TpCalendarTimeframe;\r\n\r\n  /**\r\n   * Evento emitido quando o conteúdo deve avançar ou retroceder\r\n   * por requisição do usuário\r\n   */\r\n  @Event() tpCalendarChange: EventEmitter;\r\n\r\n  /**\r\n   * Evento emitido quando o intervalo de tempo exibido deve mudar\r\n   * por requisição do usuário\r\n   */\r\n  @Event() tpTimeframeToggle: EventEmitter;\r\n\r\n  /**\r\n   * Objeto que representa as configurações de gestos (eventos customizados).\r\n   */\r\n  gesture: Gesture;\r\n\r\n  /**\r\n   * O container do conteúdo sendo exibido.\r\n   */\r\n  container: HTMLDivElement;\r\n\r\n  /**\r\n   * Métodos internos\r\n   */\r\n  onTimeframeToggle() {\r\n    const currentTimeframe = this.timeframe ?? this.initialTimeframe;\r\n    this.timeframe =\r\n      currentTimeframe === TP_CALENDAR.timeframes.week\r\n        ? TP_CALENDAR.timeframes.month\r\n        : TP_CALENDAR.timeframes.week;\r\n    this.tpTimeframeToggle.emit(this.timeframe);\r\n  }\r\n\r\n  onCalendarChange(direction: TpCalendarChangeDirection) {\r\n    this.tpCalendarChange.emit(direction);\r\n  }\r\n\r\n  setupGesture() {\r\n    let direction: TpCalendarChangeDirection;\r\n\r\n    const options: GestureConfig = {\r\n      el: this.container,\r\n      gestureName: 'swipe',\r\n      onStart: () => {},\r\n      onMove: (event) => {\r\n        if (event.deltaX > 0) {\r\n          direction = TP_CALENDAR.directions.left;\r\n        } else {\r\n          direction = TP_CALENDAR.directions.right;\r\n        }\r\n      },\r\n      onEnd: () => {\r\n        this.tpCalendarChange.emit(direction);\r\n      },\r\n    };\r\n\r\n    this.gesture = createGesture(options);\r\n    this.gesture.enable();\r\n  }\r\n\r\n  disconnectGesture() {\r\n    if (this.gesture) {\r\n      this.gesture.destroy();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Lifecycle hooks.\r\n   */\r\n  componentDidLoad() {\r\n    this.setupGesture();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.disconnectGesture();\r\n  }\r\n\r\n  render() {\r\n    const { color, label, initialTimeframe, timeframe } = this;\r\n\r\n    return (\r\n      <Host\r\n        class={createColorClasses(color, {\r\n          'tp-calendar': true,\r\n        })}\r\n      >\r\n        <div class=\"tp-calendar__header\">\r\n          <div class=\"tp-calendar__header-left\">\r\n            <ion-button\r\n              // @ts-ignore\r\n              size=\"xxs\"\r\n              fill=\"clear\"\r\n              onClick={() => this.onCalendarChange(TP_CALENDAR.directions.left)}\r\n            >\r\n              <ion-icon\r\n                slot=\"icon-only\"\r\n                src={TP_CALENDAR.icons.chevronLeft}\r\n              ></ion-icon>\r\n            </ion-button>\r\n\r\n            <ion-text class=\"tp-calendar__label\" tp-type=\"p16b\">\r\n              {label}\r\n            </ion-text>\r\n\r\n            <ion-button\r\n              // @ts-ignore\r\n              size=\"xxs\"\r\n              fill=\"clear\"\r\n              onClick={() =>\r\n                this.onCalendarChange(TP_CALENDAR.directions.right)\r\n              }\r\n            >\r\n              <ion-icon\r\n                slot=\"icon-only\"\r\n                src={TP_CALENDAR.icons.chevronRight}\r\n              ></ion-icon>\r\n            </ion-button>\r\n          </div>\r\n\r\n          <div class=\"tp-calendar__header-right\">\r\n            <ion-button\r\n              // @ts-ignore\r\n              size=\"xxs\"\r\n              fill=\"clear\"\r\n              onClick={() => this.onTimeframeToggle()}\r\n            >\r\n              {timeframe ?? initialTimeframe}\r\n\r\n              <ion-icon\r\n                class=\"tp-calendar__icon\"\r\n                slot=\"end\"\r\n                src={TP_CALENDAR.icons.chevronDown}\r\n              ></ion-icon>\r\n            </ion-button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"tp-calendar__content\">\r\n          <div class=\"tp-calendar__content-header\">\r\n            {TP_CALENDAR.weekdays.map((day) => (\r\n              <div class=\"tp-calendar__week-day\">\r\n                <ion-text tp-type=\"p12\" color=\"neutral-8\">\r\n                  {day}\r\n                </ion-text>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div\r\n            class=\"tp-calendar__container\"\r\n            ref={(el) => (this.container = el)}\r\n          >\r\n            <slot></slot>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}