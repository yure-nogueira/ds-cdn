{"version":3,"file":"pointer-events.js","sourceRoot":"","sources":["../../../../../../src/components/core/calendar/utils/gesture/pointer-events.ts"],"names":[],"mappings":"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","sourcesContent":["import { addEventListener } from './listener';\r\n\r\nconst MOUSE_WAIT = 2000;\r\n\r\nexport const createPointerEvents = (\r\n  el: Node,\r\n  pointerDown: any,\r\n  pointerMove: any,\r\n  pointerUp: any,\r\n  options: {\r\n    passive?: boolean;\r\n    capture?: boolean\r\n  }\r\n) => {\r\n\r\n  let rmTouchStart: (() => void) | undefined;\r\n  let rmTouchMove: (() => void) | undefined;\r\n  let rmTouchEnd: (() => void) | undefined;\r\n  let rmTouchCancel: (() => void) | undefined;\r\n  let rmMouseStart: (() => void) | undefined;\r\n  let rmMouseMove: (() => void) | undefined;\r\n  let rmMouseUp: (() => void) | undefined;\r\n  let lastTouchEvent = 0;\r\n\r\n  const handleTouchStart = (ev: any) => {\r\n    lastTouchEvent = Date.now() + MOUSE_WAIT;\r\n    if (!pointerDown(ev)) {\r\n      return;\r\n    }\r\n    if (!rmTouchMove && pointerMove) {\r\n      rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\r\n    }\r\n    if (!rmTouchEnd) {\r\n      rmTouchEnd = addEventListener(el, 'touchend', handleTouchEnd, options);\r\n    }\r\n    if (!rmTouchCancel) {\r\n      rmTouchCancel = addEventListener(el, 'touchcancel', handleTouchEnd, options);\r\n    }\r\n  };\r\n\r\n  const handleMouseDown = (ev: any) => {\r\n    if (lastTouchEvent > Date.now()) {\r\n      return;\r\n    }\r\n    if (!pointerDown(ev)) {\r\n      return;\r\n    }\r\n    if (!rmMouseMove && pointerMove) {\r\n      rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\r\n    }\r\n    if (!rmMouseUp) {\r\n      rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\r\n    }\r\n  };\r\n\r\n  const handleTouchEnd = (ev: any) => {\r\n    stopTouch();\r\n    if (pointerUp) {\r\n      pointerUp(ev);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = (ev: any) => {\r\n    stopMouse();\r\n    if (pointerUp) {\r\n      pointerUp(ev);\r\n    }\r\n  };\r\n\r\n  const stopTouch = () => {\r\n    if (rmTouchMove) {\r\n      rmTouchMove();\r\n    }\r\n    if (rmTouchEnd) {\r\n      rmTouchEnd();\r\n    }\r\n    if (rmTouchCancel) {\r\n      rmTouchCancel();\r\n    }\r\n    rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\r\n  };\r\n\r\n  const stopMouse = () => {\r\n    if (rmMouseMove) {\r\n      rmMouseMove();\r\n    }\r\n    if (rmMouseUp) {\r\n      rmMouseUp();\r\n    }\r\n    rmMouseMove = rmMouseUp = undefined;\r\n  };\r\n\r\n  const stop = () => {\r\n    stopTouch();\r\n    stopMouse();\r\n  };\r\n\r\n  const enable = (isEnabled = true) => {\r\n    if (!isEnabled) {\r\n      if (rmTouchStart) {\r\n        rmTouchStart();\r\n      }\r\n      if (rmMouseStart) {\r\n        rmMouseStart();\r\n      }\r\n      rmTouchStart = rmMouseStart = undefined;\r\n      stop();\r\n\r\n    } else {\r\n      if (!rmTouchStart) {\r\n        rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\r\n      }\r\n      if (!rmMouseStart) {\r\n        rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\r\n      }\r\n    }\r\n  };\r\n\r\n  const destroy = () => {\r\n    enable(false);\r\n    pointerUp = pointerMove = pointerDown = undefined;\r\n  };\r\n\r\n  return {\r\n    enable,\r\n    stop,\r\n    destroy\r\n  };\r\n};\r\n\r\nconst getDocument = (node: Node) => {\r\n  return node instanceof Document ? node : node.ownerDocument;\r\n};\r\n\r\nexport interface PointerEventsConfig {\r\n  element?: HTMLElement;\r\n  pointerDown: (ev: any) => boolean;\r\n  pointerMove?: (ev: any) => void;\r\n  pointerUp?: (ev: any) => void;\r\n  zone?: boolean;\r\n  capture?: boolean;\r\n  passive?: boolean;\r\n}\r\n"]}