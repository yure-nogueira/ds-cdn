{"version":3,"file":"gesture-controller.js","sourceRoot":"","sources":["../../../../../../src/components/core/calendar/utils/gesture/gesture-controller.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nclass GestureController {\r\n\r\n  private gestureId = 0;\r\n  private requestedStart = new Map<number, number>();\r\n  private disabledGestures = new Map<string, Set<number>>();\r\n  private disabledScroll = new Set<number>();\r\n  private capturedId?: number;\r\n\r\n  /**\r\n   * Creates a gesture delegate based on the GestureConfig passed\r\n   */\r\n  createGesture(config: GestureConfig): GestureDelegate {\r\n    return new GestureDelegate(\r\n      this,\r\n      this.newID(),\r\n      config.name,\r\n      config.priority || 0,\r\n      !!config.disableScroll\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\r\n   */\r\n  createBlocker(opts: BlockerConfig = {}): BlockerDelegate {\r\n    return new BlockerDelegate(\r\n      this,\r\n      this.newID(),\r\n      opts.disable,\r\n      !!opts.disableScroll\r\n    );\r\n  }\r\n\r\n  start(gestureName: string, id: number, priority: number): boolean {\r\n    if (!this.canStart(gestureName)) {\r\n      this.requestedStart.delete(id);\r\n      return false;\r\n    }\r\n    this.requestedStart.set(id, priority);\r\n    return true;\r\n  }\r\n\r\n  capture(gestureName: string, id: number, priority: number): boolean {\r\n    if (!this.start(gestureName, id, priority)) {\r\n      return false;\r\n    }\r\n    const requestedStart = this.requestedStart;\r\n    let maxPriority = -10000;\r\n\r\n    requestedStart.forEach(value => {\r\n      maxPriority = Math.max(maxPriority, value);\r\n    });\r\n\r\n    if (maxPriority === priority) {\r\n      this.capturedId = id;\r\n      requestedStart.clear();\r\n\r\n      const event = new CustomEvent('ionGestureCaptured', { detail: { gestureName } });\r\n      document.dispatchEvent(event);\r\n      return true;\r\n    }\r\n    requestedStart.delete(id);\r\n\r\n    return false;\r\n  }\r\n\r\n  release(id: number) {\r\n    this.requestedStart.delete(id);\r\n\r\n    if (this.capturedId === id) {\r\n      this.capturedId = undefined;\r\n    }\r\n  }\r\n\r\n  disableGesture(gestureName: string, id: number) {\r\n    let set = this.disabledGestures.get(gestureName);\r\n    if (set === undefined) {\r\n      set = new Set<number>();\r\n      this.disabledGestures.set(gestureName, set);\r\n    }\r\n    set.add(id);\r\n  }\r\n\r\n  enableGesture(gestureName: string, id: number) {\r\n    const set = this.disabledGestures.get(gestureName);\r\n    if (set !== undefined) {\r\n      set.delete(id);\r\n    }\r\n  }\r\n\r\n  disableScroll(id: number) {\r\n    this.disabledScroll.add(id);\r\n    if (this.disabledScroll.size === 1) {\r\n      document.body.classList.add(BACKDROP_NO_SCROLL);\r\n    }\r\n  }\r\n\r\n  enableScroll(id: number) {\r\n    this.disabledScroll.delete(id);\r\n    if (this.disabledScroll.size === 0) {\r\n      document.body.classList.remove(BACKDROP_NO_SCROLL);\r\n    }\r\n  }\r\n\r\n  canStart(gestureName: string): boolean {\r\n    if (this.capturedId !== undefined) {\r\n      // a gesture already captured\r\n      return false;\r\n    }\r\n\r\n    if (this.isDisabled(gestureName)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  isCaptured(): boolean {\r\n    return this.capturedId !== undefined;\r\n  }\r\n\r\n  isScrollDisabled(): boolean {\r\n    return this.disabledScroll.size > 0;\r\n  }\r\n\r\n  isDisabled(gestureName: string): boolean {\r\n    const disabled = this.disabledGestures.get(gestureName);\r\n    if (disabled && disabled.size > 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private newID(): number {\r\n    this.gestureId++;\r\n    return this.gestureId;\r\n  }\r\n}\r\n\r\nclass GestureDelegate {\r\n  private ctrl?: GestureController;\r\n  private priority: number;\r\n\r\n  constructor(\r\n    ctrl: GestureController,\r\n    private id: number,\r\n    private name: string,\r\n    priority: number,\r\n    private disableScroll: boolean\r\n  ) {\r\n    this.priority = priority * 1000000 + id;\r\n    this.ctrl = ctrl;\r\n  }\r\n\r\n  canStart(): boolean {\r\n    if (!this.ctrl) {\r\n      return false;\r\n    }\r\n\r\n    return this.ctrl.canStart(this.name);\r\n  }\r\n\r\n  start(): boolean {\r\n    if (!this.ctrl) {\r\n      return false;\r\n    }\r\n\r\n    return this.ctrl.start(this.name, this.id, this.priority);\r\n  }\r\n\r\n  capture(): boolean {\r\n    if (!this.ctrl) {\r\n      return false;\r\n    }\r\n\r\n    const captured = this.ctrl.capture(this.name, this.id, this.priority);\r\n    if (captured && this.disableScroll) {\r\n      this.ctrl.disableScroll(this.id);\r\n    }\r\n\r\n    return captured;\r\n  }\r\n\r\n  release() {\r\n    if (this.ctrl) {\r\n      this.ctrl.release(this.id);\r\n\r\n      if (this.disableScroll) {\r\n        this.ctrl.enableScroll(this.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.release();\r\n    this.ctrl = undefined;\r\n  }\r\n}\r\n\r\nclass BlockerDelegate {\r\n\r\n  private ctrl?: GestureController;\r\n\r\n  constructor(\r\n    ctrl: GestureController,\r\n    private id: number,\r\n    private disable: string[] | undefined,\r\n    private disableScroll: boolean\r\n  ) {\r\n    this.ctrl = ctrl;\r\n  }\r\n\r\n  block() {\r\n    if (!this.ctrl) {\r\n      return;\r\n    }\r\n    if (this.disable) {\r\n      for (const gesture of this.disable) {\r\n        this.ctrl.disableGesture(gesture, this.id);\r\n      }\r\n    }\r\n\r\n    if (this.disableScroll) {\r\n      this.ctrl.disableScroll(this.id);\r\n    }\r\n  }\r\n\r\n  unblock() {\r\n    if (!this.ctrl) {\r\n      return;\r\n    }\r\n    if (this.disable) {\r\n      for (const gesture of this.disable) {\r\n        this.ctrl.enableGesture(gesture, this.id);\r\n      }\r\n    }\r\n    if (this.disableScroll) {\r\n      this.ctrl.enableScroll(this.id);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.unblock();\r\n    this.ctrl = undefined;\r\n  }\r\n}\r\n\r\nexport interface GestureConfig {\r\n  name: string;\r\n  priority?: number;\r\n  disableScroll?: boolean;\r\n}\r\n\r\nexport interface BlockerConfig {\r\n  disable?: string[];\r\n  disableScroll?: boolean;\r\n}\r\n\r\nconst BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\r\nexport const GESTURE_CONTROLLER = new GestureController();\r\n"]}