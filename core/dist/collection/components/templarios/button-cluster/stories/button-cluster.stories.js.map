{"version":3,"file":"button-cluster.stories.js","sourceRoot":"","sources":["../../../../../src/components/templarios/button-cluster/stories/button-cluster.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AACjG,OAAO,EAAE,mBAAmB,IAAI,+BAA+B,EAAE,MAAM,0CAA0C,CAAC;AAClH,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AACjG,OAAO,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAC;AAEjE,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAG3B,+BAA+B,EAAE,CAAC;AAClC,uBAAuB,EAAE,CAAC;AAC1B,uBAAuB,EAAE,CAAC;AAE1B,MAAM,IAAI,GAA0B;IAClC,SAAS,EAAE,iBAAiB;IAC5B,KAAK,EAAE,sCAAsC;IAC7C,UAAU,EAAE,CAAC,WAAkB,CAAC;IAChC,UAAU,EAAE;QACV,OAAO,EAAE;YACP,OAAO,EAAE,CAAC,0BAA0B,CAAC;SACtC;KACF;IACD,QAAQ,EAAE;QACR,SAAS,EAAE;YACT,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,4CAA4C;YACzD,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,MAAM;iBAChB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;QACD,OAAO,EAAE;YACP,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,uDAAuD;YACpE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;KACF;IACD,IAAI,EAAE;QACJ,SAAS,EAAE,IAAI;KAChB;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,OAAO,IAAI,CAAA;eACA,IAAI,CAAC,KAAK;oBACL,IAAI,CAAC,SAAS;kBAChB,IAAI,CAAC,OAAO;;;;yBAIL,CAAC;IACxB,CAAC;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { defineCustomElement as defineCustomElementIcon } from '@ionic/core/components/ion-icon';\nimport { defineCustomElement as defineCustomElementSkeletonText } from '@ionic/core/components/ion-skeleton-text';\nimport { defineCustomElement as defineCustomElementText } from '@ionic/core/components/ion-text';\nimport { withActions } from '@storybook/addon-actions/decorator';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { TpButtonCluster } from '../button-cluster';\n\ndefineCustomElementSkeletonText();\ndefineCustomElementText();\ndefineCustomElementIcon();\n\nconst meta: Meta<TpButtonCluster> = {\n  component: 'TpButtonCluster',\n  title: 'components/Templarios/Button cluster',\n  decorators: [withActions as any],\n  parameters: {\n    actions: {\n      handles: ['tpButtonClusterCollapsed'],\n    },\n  },\n  argTypes: {\n    collapsed: {\n      control: 'boolean',\n      description: 'Define a variação de estado do componente.',\n      table: {\n        defaultValue: {\n          summary: 'true',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Define a estilização do estado loading do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n  },\n  args: {\n    collapsed: true,\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj;\n\nexport const Default: Story = {\n  render: ({ ...args }) => {\n    return html`<tp-button-cluster\n      color=\"${args.color}\"\n      ?collapsed=\"${args.collapsed}\"\n      ?loading=\"${args.loading}\"\n    >\n      <tp-text slot=\"expand-text\" tp-type=\"p12\">Expandir a lista</tp-text>\n      <tp-text slot=\"collapse-text\" tp-type=\"p12\">Ocultar a lista</tp-text>\n    </tp-button-cluster>`;\n  },\n  /* play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tp-button-cluster/gi)).toBeTruthy();\n  }, */\n};\n"]}