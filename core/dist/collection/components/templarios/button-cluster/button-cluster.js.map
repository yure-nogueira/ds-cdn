{"version":3,"file":"button-cluster.js","sourceRoot":"","sources":["../../../../src/components/templarios/button-cluster/button-cluster.tsx"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EAEL,IAAI,EACJ,MAAM,EACN,IAAI,EACJ,YAAY,EACZ,CAAC,GACF,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,kBAAkB,EAAE,MAAM,yCAAyC,CAAC;AAS7E,MAAM,OAAO,eAAe;;QAClB,cAAS,GAAG,YAAY,CAAC,8BAA8B,CAAC,CAAC;;yBAUb,IAAI;;;IAYxD,cAAc,CAAC,KAAa;QAC1B,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,eAAe,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrD,CAAC;IAGD,KAAK,CAAC,cAAc;QAClB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrD,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;QAEtD,IAAI,OAAO,CAAC;QAEZ,IAAI,OAAO,EAAE;YACX,OAAO,GAAG,CACR,WAAK,KAAK,EAAC,8BAA8B;gBACvC,yBACE,KAAK,EAAC,kCAAkC,EACxC,QAAQ,SACW;gBACrB,yBACE,KAAK,EAAC,kCAAkC,EACxC,QAAQ,SACW,CACjB,CACP,CAAC;SACH;aAAM;YACL,OAAO,GAAG,CACR,WACE,KAAK,EAAC,8BAA8B,EACpC,OAAO,EAAE,CAAC,KAAU,EAAE,EAAE;oBACtB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBAC7B,CAAC;gBAED,YAAM,IAAI,EAAC,aAAa,GAAQ;gBAChC,gBACE,KAAK,EAAC,yBAAyB,EAC/B,GAAG,EAAE,SAAS,iBACF,MAAM,GACR;gBACZ,YAAM,IAAI,EAAC,eAAe,GAAQ,CAC9B,CACP,CAAC;SACH;QAED,OAAO,CACL,EAAC,IAAI,IACH,KAAK,EAAE,kBAAkB,CAAC,KAAK,EAAE;gBAC/B,mBAAmB,EAAE,IAAI;gBACzB,8BAA8B,EAAE,SAAS;gBACzC,4BAA4B,EAAE,OAAO;aACtC,CAAC,IAED,OAAO,CACH,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {\n  Component,\n  Event,\n  EventEmitter,\n  Host,\n  Method,\n  Prop,\n  getAssetPath,\n  h,\n} from '@stencil/core';\nimport { createColorClasses } from '../../../utils/functions/color.function';\nimport type { TpColor } from '../../../utils/types/color.type';\n\n@Component({\n  tag: 'tp-button-cluster',\n  styleUrl: 'button-cluster.scss',\n  assetsDirs: ['assets'],\n  shadow: true,\n})\nexport class TpButtonCluster {\n  private arrowIcon = getAssetPath('./assets/tp-chevron-down.svg');\n\n  /**\n   * Define a variação de cor do componente.\n   */\n  @Prop({ reflect: true }) color?: TpColor;\n\n  /**\n   * Define a variação de estado do componente.\n   */\n  @Prop({ reflect: true, mutable: true }) collapsed = true;\n\n  /**\n   * Define o estado de carregamento do componente.\n   */\n  @Prop({ reflect: true, mutable: true }) loading?: boolean;\n\n  /**\n   * Emitido quando a propriedade collapsed é alterada.\n   */\n  @Event() tpButtonClusterCollapsed!: EventEmitter<boolean>;\n\n  toggleInternal(event?: Event) {\n    event?.stopPropagation();\n    this.collapsed = !this.collapsed;\n    this.tpButtonClusterCollapsed.emit(this.collapsed);\n  }\n\n  @Method()\n  async toggleExternal() {\n    this.collapsed = !this.collapsed;\n    this.tpButtonClusterCollapsed.emit(this.collapsed);\n  }\n\n  render() {\n    const { arrowIcon, collapsed, color, loading } = this;\n\n    let content;\n\n    if (loading) {\n      content = (\n        <div class=\"tp-button-cluster__container\">\n          <ion-skeleton-text\n            class=\"tp-button-cluster__skeleton-text\"\n            animated\n          ></ion-skeleton-text>\n          <ion-skeleton-text\n            class=\"tp-button-cluster__skeleton-icon\"\n            animated\n          ></ion-skeleton-text>\n        </div>\n      );\n    } else {\n      content = (\n        <div\n          class=\"tp-button-cluster__container\"\n          onClick={(event: any) => {\n            this.toggleInternal(event);\n          }}\n        >\n          <slot name=\"expand-text\"></slot>\n          <ion-icon\n            class=\"tp-button-cluster__icon\"\n            src={arrowIcon}\n            aria-hidden=\"true\"\n          ></ion-icon>\n          <slot name=\"collapse-text\"></slot>\n        </div>\n      );\n    }\n\n    return (\n      <Host\n        class={createColorClasses(color, {\n          'tp-button-cluster': true,\n          'tp-button-cluster--collapsed': collapsed,\n          'tp-button-cluster--loading': loading,\n        })}\n      >\n        {content}\n      </Host>\n    );\n  }\n}\n"]}