{"version":3,"file":"chart-radial.js","sourceRoot":"","sources":["../../../../src/components/templarios/chart-radial/chart-radial.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AACzE,OAAO,EAAE,kBAAkB,EAAE,MAAM,yCAAyC,CAAC;AAW7E,MAAM,OAAO,aAAa;;;;qBAgB8B,EAAE;;IAGxD,iBAAiB;QACf,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CACtD,4BAA4B,CAC7B,CAAC;QAEF,UAAU,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC9B,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACpD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACnC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,kBAAkB,IAAI,CAAC,KAAK,GAAG,CAAC;QAC1D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QAEpC,MAAM,cAAc,GAAG;YACrB,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,EAAc;SACxB,CAAC;QAEF,KAAK,CAAC,OAAO,CAAC,CAAC,IAAuB,EAAE,EAAE;YACxC,cAAc,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC;YACtC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,MAAM,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QAE/C,OAAO,CACL,EAAC,IAAI,IACH,KAAK,EAAE,kBAAkB,CAAC,KAAK,EAAE;gBAC/B,iBAAiB,EAAE,IAAI;gBACvB,CAAC,oBAAoB,IAAI,EAAE,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC;aAC5C,CAAC;YAEF,WAAK,KAAK,EAAC,4BAA4B,EAAC,OAAO,EAAC,WAAW;gBACzD,cAAQ,KAAK,EAAC,wBAAwB,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAC,IAAI,GAAG;gBAC/D,aAAa,CAAC,GAAG,CAAC,CAAC,IAAuB,EAAE,KAAa,EAAE,EAAE;oBAC5D,MAAM,aAAa,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;oBAC/C,MAAM,kBAAkB,GACtB,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC;wBAC9D,GAAG,CAAC;oBAEN,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;wBACjC,OAAO,CACL,cACE,EAAE,EAAC,IAAI,EACP,EAAE,EAAC,IAAI,EACP,CAAC,EAAC,IAAI,gBACM,aAAa,EACzB,KAAK,EAAC,2BAA2B,EACjC,KAAK,EAAE;gCACL,0BAA0B,EAAE,GAAG,kBAAkB,EAAE;6BACpD,GACD,CACH,CAAC;qBACH;gBACH,CAAC,CAAC,CACE;YAEN,WAAK,KAAK,EAAC,iCAAiC;gBAC1C,YAAM,IAAI,EAAC,OAAO,GAAQ;gBAC1B,YAAM,IAAI,EAAC,UAAU,GAAQ,CACzB,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, Host, Prop, Watch, h } from '@stencil/core';\nimport { createColorClasses } from '../../../utils/functions/color.function';\nimport type { TpColor } from '../../../utils/types/color.type';\nimport { TpChartRadialSize } from './utils/chart-radial.enum';\nimport { TpChartRadialItem } from './utils/chart-radial.type';\n\n@Component({\n  tag: 'tp-chart-radial',\n  styleUrl: 'chart-radial.scss',\n  assetsDirs: ['assets'],\n  shadow: true,\n})\nexport class TpChartRadial {\n  @Element() host: HTMLElement;\n\n  /**\n   * Define a variação de cor do componente.\n   */\n  @Prop({ reflect: true }) color?: TpColor;\n\n  /**\n   * Define a variação de tamanho do componente.\n   */\n  @Prop({ reflect: true }) size?: TpChartRadialSize;\n\n  /**\n   * Define o valor representado pelo componente.\n   */\n  @Prop({ reflect: true }) items: TpChartRadialItem[] = [];\n\n  @Watch('items')\n  updateTrackColors() {\n    const progresses = this.host.shadowRoot.querySelectorAll<HTMLElement>(\n      '.tp-chart-radial__progress',\n    );\n\n    progresses.forEach((progress) => {\n      const itemIndex = Number(progress.dataset['index']);\n      const item = this.items[itemIndex];\n      progress.style.stroke = `var(--tp-color-${item.color})`;\n    });\n  }\n\n  componentDidLoad() {\n    this.updateTrackColors();\n  }\n\n  render() {\n    const { color, size, items } = this;\n\n    const progressesData = {\n      total: 0,\n      singles: [] as number[],\n    };\n\n    items.forEach((item: TpChartRadialItem) => {\n      progressesData.total += item.quantity;\n      progressesData.singles.push(progressesData.total);\n    });\n\n    const reversedItems = items.slice(0).reverse();\n\n    return (\n      <Host\n        class={createColorClasses(color, {\n          'tp-chart-radial': true,\n          [`tp-chart-radial--${size}`]: Boolean(size),\n        })}\n      >\n        <svg class=\"tp-chart-radial__container\" viewBox=\"0 0 36 36\">\n          <circle class=\"tp-chart-radial__track\" cx=\"18\" cy=\"18\" r=\"16\" />\n          {reversedItems.map((item: TpChartRadialItem, index: number) => {\n            const originalIndex = items.length - index - 1;\n            const progressPercentage =\n              (progressesData.singles[originalIndex] / progressesData.total) *\n              100;\n\n            if (!item.ignore && item.quantity) {\n              return (\n                <circle\n                  cx=\"18\"\n                  cy=\"18\"\n                  r=\"16\"\n                  data-index={originalIndex}\n                  class=\"tp-chart-radial__progress\"\n                  style={{\n                    '--tp-progress-percentage': `${progressPercentage}`,\n                  }}\n                />\n              );\n            }\n          })}\n        </svg>\n\n        <div class=\"tp-chart-radial__text-container\">\n          <slot name=\"title\"></slot>\n          <slot name=\"subtitle\"></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}