{"version":3,"file":"tooltip.stories.js","sourceRoot":"","sources":["../../../../../src/components/templarios/tooltip/stories/tooltip.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,mBAAmB,IAAI,yBAAyB,EAAE,MAAM,mCAAmC,CAAC;AACrG,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AACjG,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AAEjG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAE3B,yBAAyB,EAAE,CAAC;AAC5B,uBAAuB,EAAE,CAAC;AAC1B,uBAAuB,EAAE,CAAC;AAE1B,MAAM,IAAI,GAAS;IACjB,KAAK,EAAE,+BAA+B;IACtC,QAAQ,EAAE;QACR,SAAS,EAAE;YACT,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;YAC5B,WAAW,EAAE,4CAA4C;YACzD,YAAY,EAAE,IAAI;YAClB,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;gBAC5B,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;aACvC;SACF;QACD,KAAK,EAAE;YACL,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;YAC5B,WAAW,EAAE,6BAA6B;YAC1C,YAAY,EAAE,IAAI;YAClB,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;gBAC5B,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;aACvC;SACF;QACD,SAAS,EAAE;YACT,OAAO,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC;YACtD,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;YAC1B,WAAW,EAAE,wDAAwD;YACrE,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE,OAAO,EAAE,6BAA6B,EAAE;gBAChD,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;aACvC;SACF;QACD,QAAQ,EAAE;YACR,OAAO,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC;YAC9C,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;YAC1B,WAAW,EAAE,iDAAiD;YAC9D,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE,OAAO,EAAE,sBAAsB,EAAE;gBACzC,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;aACvC;SACF;QACD,OAAO,EAAE;YACP,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,uDAAuD;YACpE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,OAAO,IAAI,CAAA;;;mBAGI,IAAI,CAAC,KAAK;wBACL,IAAI,CAAC,SAAS;uBACf,IAAI,CAAC,QAAQ;wBACZ,IAAI,CAAC,SAAS;oBAClB,IAAI,CAAC,KAAK;sBACR,IAAI,CAAC,OAAO;;;;;;;;;;;KAW7B,CAAC;IACJ,CAAC;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { defineCustomElement as defineCustomElementButton } from '@ionic/core/components/ion-button';\nimport { defineCustomElement as defineCustomElementIcon } from '@ionic/core/components/ion-icon';\nimport { defineCustomElement as defineCustomElementText } from '@ionic/core/components/ion-text';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\n\ndefineCustomElementButton();\ndefineCustomElementIcon();\ndefineCustomElementText();\n\nconst meta: Meta = {\n  title: 'components/Templarios/Tooltip',\n  argTypes: {\n    collapsed: {\n      control: { type: 'boolean' },\n      description: 'Define a variação de estado do componente.',\n      defaultValue: true,\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'undefined' },\n      },\n    },\n    hover: {\n      control: { type: 'boolean' },\n      description: 'Habilita o toggle no hover.',\n      defaultValue: true,\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'undefined' },\n      },\n    },\n    placement: {\n      options: [undefined, 'top', 'bottom', 'left', 'right'],\n      control: { type: 'radio' },\n      description: 'Define posicionamento em relação ao componente parent.',\n      table: {\n        type: { summary: 'top | bottom | left | right' },\n        defaultValue: { summary: 'undefined' },\n      },\n    },\n    position: {\n      options: [undefined, 'start', 'center', 'end'],\n      control: { type: 'radio' },\n      description: 'Define posicionamento horizontal do componente.',\n      table: {\n        type: { summary: 'start | center | end' },\n        defaultValue: { summary: 'undefined' },\n      },\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Define a estilização do estado loading do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj;\n\nexport const Default: Story = {\n  render: ({ ...args }) => {\n    return html`\n      <div style=\"display: flex; align-items: center; justify-content: center; height: calc(100vh - 32px);\">\n        <tp-tooltip\n          color=\"${args.color}\"\n          .placement=\"${args.placement}\"\n          .position=\"${args.position}\"\n          ?collapsed=\"${args.collapsed}\"\n          ?hover=\"${args.hover}\"\n          ?loading=\"${args.loading}\"\n        >\n          <ion-button slot=\"trigger\" fill=\"clear\" tp-no-padding>\n            <ion-icon slot=\"start\" src=\"./assets/tp-info.svg\"></ion-icon>\n            Saiba mais\n          </ion-button>\n          <ion-text>\n            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequatur atque velit obcaecati sit veritatis vel? Suscipit, repudiandae dolores voluptates ipsa dolore harum. Error, exercitationem cum?</p>\n          <ion-text>\n        </tp-tooltip>\n      </div>\n    `;\n  },\n  /* play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tp-tooltip/gi)).toBeTruthy();\n  }, */\n};\n"]}