{"version":3,"file":"select.stories.js","sourceRoot":"","sources":["../../../../../../src/components/templarios/input-container/stories/select/select.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AACjG,OAAO,EAAE,mBAAmB,IAAI,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AACnG,OAAO,EAAE,mBAAmB,IAAI,yBAAyB,EAAE,MAAM,mCAAmC,CAAC;AACrG,OAAO,EAAE,mBAAmB,IAAI,+BAA+B,EAAE,MAAM,0CAA0C,CAAC;AAClH,OAAO,EAAE,mBAAmB,IAAI,+BAA+B,EAAE,MAAM,0CAA0C,CAAC;AAElH,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,kBAAkB,EAAE,MAAM,uCAAuC,CAAC;AAE3E,yBAAyB,EAAE,CAAC;AAC5B,+BAA+B,EAAE,CAAC;AAClC,wBAAwB,EAAE,CAAC;AAC3B,uBAAuB,EAAE,CAAC;AAC1B,+BAA+B,EAAE,CAAC;AAElC,MAAM,IAAI,GAAS;IACjB,KAAK,EAAE,8CAA8C;IACrD,QAAQ,EAAE;QACR,KAAK,EAAE;YACL,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,GAAG,kBAAkB,CAAC,KAAK,CAAC;YACtC,WAAW,EAAE,gCAAgC;YAC7C,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;iBAC5C;aACF;SACF;QACD,QAAQ,EAAE;YACR,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;YAC5B,WAAW,EACT,sEAAsE;YACxE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,KAAK;iBACf;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;QACD,OAAO,EAAE;YACP,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,uDAAuD;YACpE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,MAAM,GAAU;IAC3B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,MAAM,aAAa,GAAG,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC;QAEhD,OAAO,IAAI,CAAA;;iBAEE,IAAI,CAAC,KAAK;iBACV,IAAI,CAAC,KAAK;qBACN,IAAI,CAAC,QAAQ;oBACd,IAAI,CAAC,OAAO;;;;;8BAKF,aAAa;;;;;;;;;;;;;;;;;;;;;;;KAuBtC,CAAC;IACJ,CAAC;IACD;;;SAGK;CACN,CAAC;AACF,MAAM,CAAC,QAAQ,GAAG;IAChB,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;CACpC,CAAC","sourcesContent":["import { defineCustomElement as defineCustomElementIcon } from '@ionic/core/components/ion-icon';\nimport { defineCustomElement as defineCustomElementLabel } from '@ionic/core/components/ion-label';\nimport { defineCustomElement as defineCustomElementSelect } from '@ionic/core/components/ion-select';\nimport { defineCustomElement as defineCustomElementSelectOption } from '@ionic/core/components/ion-select-option';\nimport { defineCustomElement as defineCustomElementSkeletonText } from '@ionic/core/components/ion-skeleton-text';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { TP_INPUT_CONTAINER } from '../../utils/input-container.constants';\n\ndefineCustomElementSelect();\ndefineCustomElementSelectOption();\ndefineCustomElementLabel();\ndefineCustomElementIcon();\ndefineCustomElementSkeletonText();\n\nconst meta: Meta = {\n  title: 'components/Templarios/Input Container/Select',\n  argTypes: {\n    state: {\n      control: { type: 'select' },\n      options: [...TP_INPUT_CONTAINER.state],\n      description: 'Define o estado do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: TP_INPUT_CONTAINER.state.join('|'),\n        },\n      },\n    },\n    inverted: {\n      control: { type: 'boolean' },\n      description:\n        'Define a direção de abertura do popover (acima ou abaixo do select).',\n      table: {\n        defaultValue: {\n          summary: false,\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Define a estilização do estado loading do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj;\n\nexport const Select: Story = {\n  render: ({ ...args }) => {\n    const interfaceOpts = { cssClass: 'tp-select' };\n\n    return html`\n      <tp-input-container\n        color=\"${args.color}\"\n        state=\"${args.state}\"\n        ?inverted=\"${args.inverted}\"\n        ?loading=\"${args.loading}\"\n      >\n        <ion-label slot=\"label\" tp-type=\"p14\">Descrição Select</ion-label>\n        <ion-select\n          interface=\"popover\"\n          .interfaceOptions=${interfaceOpts}\n          id=\"tp-select-01\"\n          aria-label=\"option-1\"\n          placeholder=\"Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor\"\n        >\n          <ion-select-option value=\"option-1\">\n            Option 1 Option 1 Option 1 Option 1 Option 1 Option 1 Option 1\n            Option 1 Option 1 Option 1 Option 1 Option 1 Option 1 Option 1\n            Option 1 Option 1 Option 1 Option 1 Option 1\n          </ion-select-option>\n          <ion-select-option value=\"option-2\"> Option 2 </ion-select-option>\n          <ion-select-option value=\"option-3\"> Option 3 </ion-select-option>\n          <ion-select-option value=\"option-4\"> Option 4 </ion-select-option>\n          <ion-select-option value=\"option-5\"> Option 5 </ion-select-option>\n          <ion-select-option value=\"option-6\"> Option 6 </ion-select-option>\n        </ion-select>\n        <ion-label slot=\"feedback-error\" tp-type=\"p14\">\n          *Caracteres invalidos\n        </ion-label>\n        <ion-label slot=\"feedback-success\" tp-type=\"p14\">\n          *Caracteres validos\n        </ion-label>\n      </tp-input-container>\n    `;\n  },\n  /* play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tp-test/gi)).toBeTruthy();\n  }, */\n};\nSelect.argTypes = {\n  color: { table: { disable: true } },\n};\n"]}