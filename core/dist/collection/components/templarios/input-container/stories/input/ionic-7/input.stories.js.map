{"version":3,"file":"input.stories.js","sourceRoot":"","sources":["../../../../../../../src/components/templarios/input-container/stories/input/ionic-7/input.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,IAAI,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AACnG,OAAO,EAAE,mBAAmB,IAAI,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AAEnG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAE3B,OAAO,EAAE,kBAAkB,EAAE,MAAM,0CAA0C,CAAC;AAE9E,wBAAwB,EAAE,CAAC;AAC3B,wBAAwB,EAAE,CAAC;AAE3B,MAAM,IAAI,GAAiD;IACzD,KAAK,EAAE,qDAAqD;IAC5D,QAAQ,EAAE;QACR,UAAU,EAAE;YACV,OAAO,EAAE,SAAS;YAClB,WAAW,EACT,iGAAiG;YACnG,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;QACD,KAAK,EAAE;YACL,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,GAAG,kBAAkB,CAAC,KAAK,CAAC;YACtC,WAAW,EAAE,gCAAgC;YAC7C,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;iBAC5C;aACF;SACF;QACD,QAAQ,EAAE;YACR,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,wDAAwD;YACrE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,OAAO,IAAI,CAAA;;iBAEE,IAAI,CAAC,KAAK;iBACV,IAAI,CAAC,KAAK;qBACN,IAAI,CAAC,QAAQ;;;;;;;;;;;;;;;;;;iBAkBjB,IAAI,CAAC,KAAK;iBACV,IAAI,CAAC,KAAK;qBACN,IAAI,CAAC,QAAQ;;;;;;;;;;;;;;;;;;iBAkBjB,IAAI,CAAC,KAAK;iBACV,IAAI,CAAC,KAAK;qBACN,IAAI,CAAC,QAAQ;;;;;mBAKf,IAAI,CAAC,KAAK;;;;;;;;;;;mBAWV,IAAI,CAAC,KAAK;;;;;;;;;;KAUxB,CAAC;IACJ,CAAC;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { Components } from '@ionic/core';\nimport { defineCustomElement as defineCustomElementInput } from '@ionic/core/components/ion-input';\nimport { defineCustomElement as defineCustomElementLabel } from '@ionic/core/components/ion-label';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { TpInputContainer } from 'src/components/templarios/input-container/input-container';\nimport { TP_INPUT_CONTAINER } from '../../../utils/input-container.constants';\n\ndefineCustomElementInput();\ndefineCustomElementLabel();\n\nconst meta: Meta<Components.IonInput & TpInputContainer> = {\n  title: 'components/Templarios/Input Container/Input/Ionic-7',\n  argTypes: {\n    clearInput: {\n      control: 'boolean',\n      description:\n        'Se **true**, uma tag **button** será renderizada e o input terá a ação de **limpeza** do texto.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n    state: {\n      control: { type: 'select' },\n      options: [...TP_INPUT_CONTAINER.state],\n      description: 'Define o estado do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: TP_INPUT_CONTAINER.state.join('|'),\n        },\n      },\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Define a estilização do estado disabled do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<Components.IonInput & TpInputContainer>;\n\nexport const Default: Story = {\n  render: ({ ...args }) => {\n    return html`\n      <tp-input-container\n        color=\"${args.color}\"\n        state=\"${args.state}\"\n        ?disabled=\"${args.disabled}\"\n      >\n        <ion-label slot=\"label\" tp-type=\"p14\">Descrição Input</ion-label>\n        <ion-input\n          type=\"email\"\n          mode=\"md\"\n          clear-input=\"true\"\n          placeholder=\"Digite um e-mail valido\"\n        ></ion-input>\n        <ion-label slot=\"feedback-error\" tp-type=\"p14\">\n          *Caracteres invalidos.\n        </ion-label>\n        <ion-label slot=\"feedback-success\" tp-type=\"p14\">\n          *Caracteres validos\n        </ion-label>\n      </tp-input-container>\n\n      <tp-input-container\n        color=\"${args.color}\"\n        state=\"${args.state}\"\n        ?disabled=\"${args.disabled}\"\n      >\n        <ion-label slot=\"label\" tp-type=\"p14\">Descrição Input</ion-label>\n        <ion-input\n          type=\"email\"\n          mode=\"md\"\n          clear-input=\"true\"\n          placeholder=\"Digite um e-mail valido\"\n        ></ion-input>\n        <ion-label slot=\"feedback-error\" tp-type=\"p14\">\n          *Caracteres invalidos.\n        </ion-label>\n        <ion-label slot=\"feedback-success\" tp-type=\"p14\">\n          *Caracteres validos\n        </ion-label>\n      </tp-input-container>\n\n      <tp-input-container\n        color=\"${args.color}\"\n        state=\"${args.state}\"\n        ?disabled=\"${args.disabled}\"\n      >\n        <ion-label slot=\"label\" tp-type=\"p14\">Descrição Input</ion-label>\n        <ion-icon\n          slot=\"start\"\n          color=\"${args.color}\"\n          src=\"./assets/tp-alert-triangle.svg\"\n        ></ion-icon>\n        <ion-input\n          type=\"email\"\n          mode=\"md\"\n          clear-input=\"true\"\n          placeholder=\"Digite um e-mail valido\"\n        ></ion-input>\n        <ion-icon\n          slot=\"end\"\n          color=\"${args.color}\"\n          src=\"./assets/tp-alert-triangle.svg\"\n        ></ion-icon>\n        <ion-label slot=\"feedback-error\" tp-type=\"p14\">\n          *Caracteres invalidos.\n        </ion-label>\n        <ion-label slot=\"feedback-success\" tp-type=\"p14\">\n          *Caracteres validos\n        </ion-label>\n      </tp-input-container>\n    `;\n  },\n  /* play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/ion-input/gi)).toBeTruthy();\n  }, */\n};\n"]}