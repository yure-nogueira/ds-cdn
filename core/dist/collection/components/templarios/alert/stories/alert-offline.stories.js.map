{"version":3,"file":"alert-offline.stories.js","sourceRoot":"","sources":["../../../../../src/components/templarios/alert/stories/alert-offline.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AACjG,OAAO,EAAE,mBAAmB,IAAI,+BAA+B,EAAE,MAAM,0CAA0C,CAAC;AAClH,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AAEjG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,kBAAkB,EAAE,MAAM,2CAA2C,CAAC;AAK/E,EAAE;AACF,qCAAqC;AACrC,EAAE;AAEF,+BAA+B,EAAE,CAAC;AAClC,uBAAuB,EAAE,CAAC;AAC1B,uBAAuB,EAAE,CAAC;AAE1B,MAAM,IAAI,GAA4C;IACpD,KAAK,EAAE,6BAA6B;IACpC,QAAQ,EAAE;QACR,IAAI,EAAE;YACJ,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,GAAG,kBAAkB,CAAC;YAChC,WAAW,EAAE,gCAAgC;SAC9C;QACD,OAAO,EAAE;YACP,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,uDAAuD;YACpE,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,SAAS;iBACnB;aACF;SACF;KACF;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,kBAAkB;KACzB;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,MAAM,OAAO,GAAG,YAAY,IAAI,CAAC,IAAI,EAAE,CAAC;QAExC,OAAO,IAAI,CAAA,oBAAoB,IAAI,CAAC,KAAK,eAAe,IAAI,CAAC,OAAO;;;;;eAKzD,OAAO;;;;;gBAKN,CAAC;IACf,CAAC;IACD;;;SAGK;CACN,CAAC","sourcesContent":["import { defineCustomElement as defineCustomElementIcon } from '@ionic/core/components/ion-icon';\nimport { defineCustomElement as defineCustomElementSkeletonText } from '@ionic/core/components/ion-skeleton-text';\nimport { defineCustomElement as defineCustomElementText } from '@ionic/core/components/ion-text';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { TP_ICONS_STORYBOOK } from '../../../../utils/constants/icon.constant';\nimport { TpIonIcon } from '../../../ionic/icon/utils/icon.type';\nimport { TpAlert } from '../alert';\nimport { TpAlertType } from '../utils/alert.type';\n\n//\n// !IMPORTANT! Antigo med-alert-fixed\n//\n\ndefineCustomElementSkeletonText();\ndefineCustomElementText();\ndefineCustomElementIcon();\n\nconst meta: Meta<TpAlert & TpAlertType & TpIonIcon> = {\n  title: 'components/Templarios/Alert',\n  argTypes: {\n    icon: {\n      control: { type: 'select' },\n      options: [...TP_ICONS_STORYBOOK],\n      description: 'Define o path e nome do icone.',\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Define a estilização do estado loading do componente.',\n      table: {\n        defaultValue: {\n          summary: 'undefined',\n        },\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n  },\n  args: {\n    color: 'warning',\n    icon: 'tp-wi-fi-off.svg',\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<TpAlert & TpAlertType & TpIonIcon>;\n\nexport const Offline: Story = {\n  render: ({ ...args }) => {\n    const iconUrl = `./assets/${args.icon}`;\n\n    return html`<tp-alert color=\"${args.color}\" ?loading=\"${args.loading}\">\n      <ion-icon\n        class=\"tp-alert__icon\"\n        slot=\"icon\"\n        tp-size=\"sm\"\n        src=\"${iconUrl}\"\n      ></ion-icon>\n      <ion-text class=\"tp-alert__text\" slot=\"text\" tp-type=\"p12x\">\n        <p>Você está offline. Conecte-se para acessar o conteúdo.</p>\n      </ion-text>\n    </tp-alert>`;\n  },\n  /* play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tp-alert/gi)).toBeTruthy();\n  }, */\n};\n"]}