{"version":3,"file":"news-list.stories.js","sourceRoot":"","sources":["../../../../../../../src/components/elementor/institucional/feature/news-list/stories/news-list.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,mBAAmB,IAAI,uBAAuB,EAAE,MAAM,iCAAiC,CAAC;AAEjG,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAE3B,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AAE3D,uBAAuB,EAAE,CAAC;AAE1B,MAAM,IAAI,GAAyB;IACjC,KAAK,EAAE,8CAA8C;IACrD,QAAQ,EAAE;QACR,IAAI,EAAE;YACJ,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC;YACxC,WAAW,EAAE,qCAAqC;YAClD,KAAK,EAAE;gBACL,YAAY,EAAE;oBACZ,OAAO,EAAE,WAAW;iBACrB;gBACD,IAAI,EAAE;oBACJ,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;iBACpD;aACF;SACF;QACD,OAAO,EAAE;YACP,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE;YACrD,WAAW,EACT,6DAA6D;YAC/D,KAAK,EAAE;gBACL,YAAY,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC9B,IAAI,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE;aAC5B;SACF;KACF;IACD,IAAI,EAAE;QACJ,OAAO,EAAE,CAAC;KACX;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,OAAO,IAAI,CAAA;;oBAEK,IAAI,CAAC,OAAO;gBAChB,IAAI,CAAC,IAAI;qBACJ,IAAI,CAAC,QAAQ;;;;;;;;;;;;;KAa7B,CAAC;IACJ,CAAC;CACF,CAAC;AACF,OAAO,CAAC,QAAQ,GAAG;IACjB,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;CACpC,CAAC","sourcesContent":["import { defineCustomElement as defineCustomElementText } from '@ionic/core/components/ion-text';\r\nimport type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport { TpElemNewsList } from '../news-list';\r\nimport { NewsListModeEnum } from '../utils/news-list.enum';\r\n\r\ndefineCustomElementText();\r\n\r\nconst meta: Meta<TpElemNewsList> = {\r\n  title: 'components/Elementor/Institucional/News list',\r\n  argTypes: {\r\n    mode: {\r\n      control: { type: 'select' },\r\n      options: Object.values(NewsListModeEnum),\r\n      description: 'Define o modo de uso do componente.',\r\n      table: {\r\n        defaultValue: {\r\n          summary: 'undefined',\r\n        },\r\n        type: {\r\n          summary: Object.values(NewsListModeEnum).join(' |'),\r\n        },\r\n      },\r\n    },\r\n    perPage: {\r\n      control: { type: 'number', min: 1, max: 20, step: 1 },\r\n      description:\r\n        'Define a quantidade de items por página a serem carregados.',\r\n      table: {\r\n        defaultValue: { summary: '5' },\r\n        type: { summary: 'number' },\r\n      },\r\n    },\r\n  },\r\n  args: {\r\n    perPage: 5,\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<TpElemNewsList & any>;\r\n\r\nexport const Default: Story = {\r\n  render: ({ ...args }) => {\r\n    return html`\r\n      <tp-elem-news-list\r\n        per-page=\"${args.perPage}\"\r\n        mode=\"${args.mode}\"\r\n        ?animated=\"${args.animated}\"\r\n      >\r\n        <ion-text slot=\"not-found\" tp-type=\"p16xb\" color=\"neutral-8\">\r\n          <p>Nenhuma notícia encontrada.</p>\r\n        </ion-text>\r\n\r\n        <ion-text slot=\"connection-error\" tp-type=\"p16xb\" color=\"neutral-8\">\r\n          <p>\r\n            Conexão não estabelecida. <br />\r\n            Verifique sua internet ou tente recarregar a página.\r\n          </p>\r\n        </ion-text>\r\n      </tp-elem-news-list>\r\n    `;\r\n  },\r\n};\r\nDefault.argTypes = {\r\n  color: { table: { disable: true } },\r\n};\r\n"]}