{"version":3,"file":"images-carousel.stories.js","sourceRoot":"","sources":["../../../../../../src/components/elementor/core/images-carousel/stories/images-carousel.stories.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAE3B,OAAO,EAAE,WAAW,EAAE,MAAM,+BAA+B,CAAC;AAE5D,MAAM,IAAI,GAA2B;IACnC,KAAK,EAAE,2CAA2C;IAClD,QAAQ,EAAE;QACR,MAAM,EAAE;YACN,WAAW,EAAE,2DAA2D;YACxE,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;YAC1B,KAAK,EAAE;gBACL,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;gBACtC,IAAI,EAAE,EAAE,OAAO,EAAE,iBAAiB,EAAE;aACrC;SACF;QACD,iBAAiB;QACjB,uBAAuB;QACvB,iBAAiB;QACjB,wEAAwE;QACxE,aAAa;QACb,8CAA8C;QAC9C,mCAAmC;QACnC,OAAO;QACP,KAAK;QACL,IAAI,EAAE;YACJ,WAAW,EAAE,8CAA8C;YAC3D,OAAO,EAAE,SAAS;YAClB,KAAK,EAAE;gBACL,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;gBACtC,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;aAC7B;SACF;QACD,MAAM,EAAE;YACN,WAAW,EAAE,iDAAiD;YAC9D,OAAO,EAAE,SAAS;YAClB,KAAK,EAAE;gBACL,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;gBACtC,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;aAC7B;SACF;KACF;IACD,IAAI,EAAE;QACJ,MAAM,EAAE,WAAW;QACnB,WAAW,EAAE,CAAC,GAAG,CAAC;QAClB,IAAI,EAAE,IAAI;QACV,MAAM,EAAE,IAAI;KACb;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,EAAW,EAAE,EAAE;YAAV,IAAI,cAAT,EAAW,CAAF;QAChB,UAAU,CAAC,GAAG,EAAE;YACd,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;YAC1D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5B,CAAC,EAAE,CAAC,CAAC,CAAC;QAEN,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAE1B,OAAO,IAAI,CAAA;;iBAEE,IAAI,CAAC,IAAI;mBACP,IAAI,CAAC,MAAM;;KAEzB,CAAC;IACJ,CAAC;CACF,CAAC;AAEF,OAAO,CAAC,QAAQ,GAAG;IACjB,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;CACpC,CAAC","sourcesContent":["import type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport { TpImagesCarousel } from '../images-carousel';\r\nimport { IMAGES_MOCK } from '../utils/images-carousel.mock';\r\n\r\nconst meta: Meta<TpImagesCarousel> = {\r\n  title: 'components/Elementor/Core/Images Carousel',\r\n  argTypes: {\r\n    images: {\r\n      description: 'Os objetos com as imagens a serem mostradas no carrossel.',\r\n      control: { type: 'array' },\r\n      table: {\r\n        defaultValue: { summary: 'undefined' },\r\n        type: { summary: 'CarouselImage[]' },\r\n      },\r\n    },\r\n    // aspectRatio: {\r\n    //   control: 'number',\r\n    //   description:\r\n    //     'As proporções do carrossel no formato h / w (height to width).',\r\n    //   table: {\r\n    //     defaultValue: { summary: 'undefined' },\r\n    //     type: { summary: 'number' },\r\n    //   },\r\n    // },\r\n    zoom: {\r\n      description: 'Se as images terão ou não o recurso de zoom.',\r\n      control: 'boolean',\r\n      table: {\r\n        defaultValue: { summary: 'undefined' },\r\n        type: { summary: 'boolean' },\r\n      },\r\n    },\r\n    thumbs: {\r\n      description: 'Se o carrossel terá ou não o recurso de thumbs.',\r\n      control: 'boolean',\r\n      table: {\r\n        defaultValue: { summary: 'undefined' },\r\n        type: { summary: 'boolean' },\r\n      },\r\n    },\r\n  },\r\n  args: {\r\n    images: IMAGES_MOCK,\r\n    aspectRatio: 1 / 1,\r\n    zoom: true,\r\n    thumbs: true,\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<TpImagesCarousel & any>;\r\n\r\nexport const Default: Story = {\r\n  render: ({ ...args }) => {\r\n    setTimeout(() => {\r\n      const host = document.querySelector('tp-images-carousel');\r\n      host.images = args.images;\r\n    }, 0);\r\n\r\n    console.log('args', args);\r\n\r\n    return html`\r\n      <tp-images-carousel\r\n        ?zoom=\"${args.zoom}\"\r\n        ?thumbs=\"${args.thumbs}\"\r\n      ></tp-images-carousel>\r\n    `;\r\n  },\r\n};\r\n\r\nDefault.argTypes = {\r\n  color: { table: { disable: true } },\r\n};\r\n"]}