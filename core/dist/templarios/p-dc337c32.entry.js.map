{"version":3,"names":["chartBarCss","TpChartBar","render","color","value","height","width","noLabel","loading","this","percentage","Math","min","max","content","h","class","animated","Host","createColorClasses","style"],"sources":["src/components/templarios/chart-bar/chart-bar.scss?tag=tp-chart-bar&encapsulation=shadow","src/components/templarios/chart-bar/chart-bar.tsx"],"sourcesContent":["/**\n  * @prop --value: Propriedade definida dinamicamente. Define o valor do preenchimento do componente.\n  * @prop --width: Propriedade definida dinamicamente. Define a largura do componente.\n  * @prop --height: Propriedade definida dinamicamente. Define a altura do componente.\n*/\n\n:host {\n  --tp-skeleton-height: calc(var(--height) * 1px);\n  --tp-skeleton-width: calc(var(--width) * 1px);\n  --tp-skeleton-background-rgb: var(--tp-color-neutral-10-rgb);\n\n  display: block;\n  width: calc(var(--width) * 1px);\n  height: max-content;\n  color: var(--tp-color-neutral-10);\n  border-radius: 2px;\n}\n\n.tp-chart-bar {\n  &__container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    height: calc(var(--height) + var(--height-label) * 1px);\n    overflow: hidden;\n    border-radius: 2px;\n  }\n\n  &__label {\n    display: flex;\n    margin-bottom: 6px;\n    transform: translateY(calc(var(--height) * 1px - var(--value) * 1px));\n  }\n\n  &__progress {\n    width: 100%;\n    height: calc(var(--height) * 1px);\n    background: var(--tp-color-brand-4);\n    border-radius: 2px;\n    animation: load-chart-bar forwards 400ms ease-in-out;\n  }\n\n  &__label-skeleton {\n    --background-rgb: var(--tp-skeleton-background-rgb);\n    --border-radius: 2px;\n    width: var(--tp-skeleton-width);\n    height: 12px;\n    margin: 0 0 6px;\n  }\n\n  &__skeleton {\n    --background-rgb: var(--tp-skeleton-background-rgb);\n    --border-radius: 2px;\n    width: var(--tp-skeleton-width);\n    height: var(--tp-skeleton-height);\n    margin: 0;\n  }\n}\n\n//\n// no-label\n//\n:host(.tp-chart-bar--no-label) {\n  background: var(--tp-color-neutral-2);\n}\n\n//\n// loading\n//\n:host(.tp-chart-bar--loading) {\n  background: transparent;\n}\n\n//\n// color\n//\n:host(.tp-color) .tp-chart-bar__progress {\n  background: var(--tp-color-base);\n}\n\n//\n// animations\n//\n@keyframes load-chart-bar {\n  0% {\n    transform: translateY(calc(var(--height) * 1px));\n  }\n\n  100% {\n    transform: translateY(calc(var(--height) * 1px - var(--value) * 1px));\n  }\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\nimport { createColorClasses } from '../../../utils/functions/color.function';\nimport type { TpColor } from '../../../utils/types/color.type';\n\n@Component({\n  tag: 'tp-chart-bar',\n  styleUrl: 'chart-bar.scss',\n  assetsDirs: ['assets'],\n  shadow: true,\n})\nexport class TpChartBar {\n  /**\n   * Define a variação de cor do componente.\n   */\n  @Prop({ reflect: true }) color?: TpColor;\n\n  /**\n   * Define o valor do preenchimento do componente.\n   */\n  @Prop({ reflect: true }) value = 0;\n\n  /**\n   * Define a altura do componente.\n   */\n  @Prop({ reflect: true }) height = 50;\n\n  /**\n   * Define a largura do componente.\n   */\n  @Prop({ reflect: true }) width = 32;\n\n  /**\n   * Define se o componente irá apresentar rótulo ou não.\n   */\n  @Prop({ reflect: true }) noLabel = false;\n\n  /**\n   * Define o estado de carregamento do componente.\n   */\n  @Prop({ reflect: true, mutable: true }) loading?: boolean;\n\n  render() {\n    const { color, value, height, width, noLabel, loading } = this;\n\n    const percentage = (height * Math.min(Math.max(0, value), 100)) / 100;\n\n    let content;\n\n    if (loading) {\n      content = (\n        <div class=\"tp-chart-bar__container\">\n          {!noLabel && (\n            <ion-skeleton-text\n              class=\"tp-chart-bar__label-skeleton\"\n              animated\n            ></ion-skeleton-text>\n          )}\n          <ion-skeleton-text\n            class=\"tp-chart-bar__skeleton\"\n            animated\n          ></ion-skeleton-text>\n        </div>\n      );\n    } else {\n      content = (\n        <div class=\"tp-chart-bar__container\">\n          {!noLabel && (\n            <div class=\"tp-chart-bar__label\">\n              <slot></slot>\n            </div>\n          )}\n\n          <div class=\"tp-chart-bar__progress\"></div>\n        </div>\n      );\n    }\n\n    return (\n      <Host\n        class={createColorClasses(color, {\n          'tp-chart-bar': true,\n          'tp-chart-bar--no-label': noLabel,\n          'tp-chart-bar--loading': loading,\n        })}\n        style={{\n          '--value': `${percentage}`,\n          '--height': `${height}`,\n          '--width': `${width}`,\n        }}\n      >\n        {content}\n      </Host>\n    );\n  }\n}\n"],"mappings":"sFAAA,MAAMA,EAAc,05C,MCUPC,EAAU,M,yDASY,E,YAKC,G,WAKD,G,aAKE,M,uBAOnC,MAAAC,GACE,MAAMC,MAAEA,EAAKC,MAAEA,EAAKC,OAAEA,EAAMC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,GAAYC,KAE1D,MAAMC,EAAcL,EAASM,KAAKC,IAAID,KAAKE,IAAI,EAAGT,GAAQ,KAAQ,IAElE,IAAIU,EAEJ,GAAIN,EAAS,CACXM,EACEC,EAAA,OAAKC,MAAM,4BACPT,GACAQ,EAAA,qBACEC,MAAM,+BACNC,SAAQ,OAGZF,EAAA,qBACEC,MAAM,yBACNC,SAAQ,O,KAIT,CACLH,EACEC,EAAA,OAAKC,MAAM,4BACPT,GACAQ,EAAA,OAAKC,MAAM,uBACTD,EAAA,cAIJA,EAAA,OAAKC,MAAM,2B,CAKjB,OACED,EAACG,EAAI,CACHF,MAAOG,EAAmBhB,EAAO,CAC/B,eAAgB,KAChB,yBAA0BI,EAC1B,wBAAyBC,IAE3BY,MAAO,CACL,UAAW,GAAGV,IACd,WAAY,GAAGL,IACf,UAAW,GAAGC,MAGfQ,E"}