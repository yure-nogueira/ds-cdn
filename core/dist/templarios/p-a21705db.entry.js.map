{"version":3,"names":["headerCss","TpHeaderStyle0","TpHeader","constructor","hostRef","this","hostHeight","componentDidLoad","setSize","disconnectedCallback","hostResizeObserver","disconnect","ResizeObserver","newHostHeight","Number","el","getBoundingClientRect","height","headerResize","emit","observe","render","h","Host","key","name","navbarCss","TpNavbarStyle0","TpNavbar","sidesResizeObserver","entries","entry","rightWidth","rightEl","width","leftWidth","leftEl","leftDiff","contentRect","rightDiff","marginLeft","marginRight","target","id","centerEl","style","setProperty","color","class","createColorClasses","undefined","ref"],"sources":["src/components/core/header/header.scss?tag=tp-header&encapsulation=shadow","src/components/core/header/header.tsx","src/components/core/navbar/navbar.scss?tag=tp-navbar&encapsulation=shadow","src/components/core/navbar/navbar.tsx"],"sourcesContent":[":host {\r\n  --tp-background: var(--tp-color-neutral-1);\r\n}\r\n\r\n:host {\r\n  background: var(--tp-background);\r\n  display: block;\r\n  padding-top: var(--ion-safe-area-top);\r\n}","import {\r\n  Component,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n  h,\r\n  Host,\r\n} from '@stencil/core';\r\nimport { headerResizeEventDetail } from './utils/header.interface';\r\n\r\n@Component({\r\n  tag: 'tp-header',\r\n  styleUrl: 'header.scss',\r\n  shadow: true,\r\n})\r\nexport class TpHeader {\r\n  @Element() el!: HTMLElement;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Event() headerResize!: EventEmitter<headerResizeEventDetail>;\r\n\r\n  private hostHeight = 0;\r\n  private hostResizeObserver!: ResizeObserver;\r\n\r\n  componentDidLoad() {\r\n    this.setSize();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if (this.hostResizeObserver) {\r\n      this.hostResizeObserver.disconnect();\r\n    }\r\n  }\r\n\r\n  private setSize() {\r\n    this.hostResizeObserver = new ResizeObserver(() => {\r\n      let newHostHeight = Number(this.el.getBoundingClientRect().height);\r\n\r\n      if (newHostHeight !== this.hostHeight) {\r\n        this.headerResize.emit({ height: newHostHeight });\r\n        this.hostHeight = newHostHeight;\r\n      }\r\n    });\r\n\r\n    this.hostResizeObserver.observe(this.el);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host from-stencil>\r\n        <slot name=\"navbar\"></slot>\r\n        <slot name=\"toolbar\"></slot>\r\n        <slot name=\"progress\"></slot>\r\n        <slot name=\"auxiliar\"></slot>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","// Custom propertie --padding-left setado via tsx \r\n// Custom propertie --padding-right setado via tsx \r\n\r\n:host {\r\n  --tp-background: var(--tp-color-neutral-1);\r\n  --tp-main-color: #{color('neutral', '1', 'contrast')};\r\n  --tp-subtitle-color: var(--tp-color-brand-4);\r\n  --tp-height: 48px;\r\n}\r\n\r\n:host(.tp-navbar) {\r\n  display: block;\r\n\r\n  .tp-navbar {\r\n    &__header {\r\n      background: var(--tp-background);\r\n    }\r\n\r\n    &__container {\r\n      padding-left: 16px;\r\n      padding-right: 16px;\r\n      padding-bottom: 0;\r\n      position: relative;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      box-sizing: border-box;\r\n      min-height: var(--tp-height);\r\n    }\r\n\r\n    &__left,\r\n    &__right {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n\r\n    &__left {\r\n      justify-content: flex-start;\r\n    }\r\n\r\n    &__right {\r\n      justify-content: flex-end;\r\n    }\r\n\r\n    &__center {\r\n      padding-left: var(--padding-left);\r\n      padding-right: var(--padding-right);\r\n\r\n      // padding-top: var(--spacing-stack-xxxs);\r\n      // padding-bottom: var(--spacing-stack-xxxs);\r\n\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      flex-direction: column;\r\n      text-align: center;\r\n      width: 100%;\r\n    }\r\n  }\r\n}\r\n\r\n//\r\n// slotted\r\n//\r\n\r\n:host(.tp-navbar) ::slotted(*) {\r\n  margin: 0 !important;\r\n  padding: 0 !important;\r\n}\r\n\r\n:host(.tp-navbar) ::slotted([slot=\"left\"]) {\r\n  color: var(--tp-main-color);\r\n  margin-right: 16px !important;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n}\r\n\r\n:host(.tp-navbar) ::slotted([slot=\"title\"]) {\r\n  color: var(--tp-main-color);\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  line-height: 16px;\r\n  display: block;\r\n}\r\n\r\n:host(.tp-navbar) ::slotted([slot=\"subtitle\"]) {\r\n  color: var(--tp-subtitle-color);\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: 16px;\r\n  display: block;\r\n}\r\n\r\n:host(.tp-navbar) ::slotted([slot=\"right\"]) {\r\n  color: var(--tp-main-color);\r\n  margin-left: 16px !important;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n}\r\n\r\n//\r\n// color\r\n//\r\n\r\n:host(.tp-color) ::slotted([slot=\"subtitle\"]) {\r\n  --tp-subtitle-color: var(--tp-color-base);\r\n}\r\n\r\n//\r\n// transparent\r\n//\r\n\r\n:host(.tp-navbar--transparent) {\r\n  --tp-background: transparent;\r\n}","import { Component, Element, h, Host, Prop } from '@stencil/core';\r\n//import ResizeObserver from 'resize-observer-polyfill';\r\nimport { createColorClasses } from '../../../utils/functions/color.function';\r\nimport { TpColor } from '../../../utils/types/color.type';\r\n\r\n@Component({\r\n  tag: 'tp-navbar',\r\n  styleUrl: 'navbar.scss',\r\n  shadow: true,\r\n})\r\nexport class TpNavbar {\r\n  @Element() el!: HTMLElement;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop({ reflect: true }) color?: TpColor;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop() name?: 'secondary' | 'transparent';\r\n\r\n  private leftEl!: HTMLDivElement;\r\n  private rightEl!: HTMLDivElement;\r\n  private centerEl!: HTMLDivElement;\r\n\r\n  private sidesResizeObserver!: ResizeObserver;\r\n\r\n  componentDidLoad() {\r\n    this.setSize();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if (this.sidesResizeObserver) {\r\n      this.sidesResizeObserver.disconnect();\r\n    }\r\n  }\r\n\r\n  private setSize() {\r\n    this.sidesResizeObserver = new ResizeObserver((entries: any) => {\r\n      for (let entry of entries) {\r\n        const rightWidth = Number(this.rightEl.getBoundingClientRect().width);\r\n        const leftWidth = Number(this.leftEl.getBoundingClientRect().width);\r\n        const leftDiff = entry.contentRect.width - rightWidth;\r\n        const rightDiff = entry.contentRect.width - leftWidth;\r\n\r\n        let marginLeft = 0;\r\n        let marginRight = 0;\r\n\r\n        if (rightWidth !== leftWidth) {\r\n          if (entry.target.id === 'left') {\r\n            if (leftDiff > 0) {\r\n              marginRight = leftDiff;\r\n            } else {\r\n              marginLeft = rightDiff - leftDiff;\r\n              if (marginLeft < 0) {\r\n                marginLeft *= -1;\r\n              }\r\n            }\r\n          } else if (entry.target.id === 'right') {\r\n            if (rightDiff > 0) {\r\n              marginLeft = rightDiff;\r\n            } else {\r\n              marginRight = rightDiff - leftDiff;\r\n              if (marginRight < 0) {\r\n                marginRight *= -1;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        this.centerEl.style.setProperty('--padding-left', `${marginLeft}px`);\r\n        this.centerEl.style.setProperty('--padding-right', `${marginRight}px`);\r\n      }\r\n    });\r\n\r\n    this.sidesResizeObserver.observe(this.leftEl);\r\n    this.sidesResizeObserver.observe(this.rightEl);\r\n  }\r\n\r\n  render() {\r\n    const { color, name } = this;\r\n\r\n    return (\r\n      <Host\r\n        from-stencil\r\n        class={createColorClasses(color, {\r\n          'tp-navbar': true,\r\n          [`tp-navbar--${name}`]: name !== undefined,\r\n        })}\r\n      >\r\n        <header class=\"tp-navbar__header\">\r\n          <slot name=\"top\"></slot>\r\n\r\n          <div class=\"tp-navbar__container\">\r\n            <div\r\n              id=\"left\"\r\n              class=\"tp-navbar__left\"\r\n              ref={(el) => (this.leftEl = el as HTMLDivElement)}\r\n            >\r\n              <slot name=\"left\"></slot>\r\n            </div>\r\n\r\n            <div\r\n              class=\"tp-navbar__center\"\r\n              ref={(el) => (this.centerEl = el as HTMLDivElement)}\r\n            >\r\n              <slot name=\"title\"></slot>\r\n              <slot name=\"subtitle\"></slot>\r\n            </div>\r\n\r\n            <div\r\n              id=\"right\"\r\n              class=\"tp-navbar__right\"\r\n              ref={(el) => (this.rightEl = el as HTMLDivElement)}\r\n            >\r\n              <slot name=\"right\"></slot>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}