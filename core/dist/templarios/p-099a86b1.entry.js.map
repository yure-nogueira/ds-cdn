{"version":3,"names":["horizontalChartBarCss","TpHorizontalChartBar","render","color","size","value","maxCount","noLabel","loading","this","percentage","Math","min","max","content","h","class","animated","Host","createColorClasses","Boolean","style"],"sources":["src/components/templarios/horizontal-chart-bar/horizontal-chart-bar.scss?tag=tp-horizontal-chart-bar&encapsulation=shadow","src/components/templarios/horizontal-chart-bar/horizontal-chart-bar.tsx"],"sourcesContent":["/**\n  * @prop --tp-fill-percentage: Propriedade definida dinamicamente no tsx. Define o progresso do componente.\n  * @prop --tp-track-color: Define a cor do track.\n*/\n\n@import './scss/horizontal-chart-bar.util';\n\n:host {\n  display: block;\n  width: 100%;\n}\n\n:host(.tp-horizontal-chart-bar--spill) .tp-horizontal-chart-bar__progress {\n  @include progress-bg-image(--tp-color-brand-4);\n  background-size: 24px 24px;\n  animation:\n    load-horizontal-chart-bar 1s forwards ease-in-out,\n    progress-spill 15s linear infinite;\n}\n\n.tp-horizontal-chart-bar {\n  &__container {\n    display: flex;\n    align-items: center;\n    width: 100%;\n  }\n\n  &__track {\n    width: 100%;\n    height: 8px;\n    background-color: var(--tp-track-color, var(--tp-color-neutral-15));\n    border-radius: 4px;\n\n    &--skeleton {\n      --background-rgb: var(\n        --tp-skeleton-background-rgb,\n        var(--tp-color-neutral-10-rgb)\n      );\n      margin: 0;\n    }\n  }\n\n  &__progress {\n    width: 0%;\n    min-width: 8px;\n    height: 100%;\n    background-color: var(--tp-color-brand-4);\n    border-radius: 4px;\n    animation: load-horizontal-chart-bar 1s forwards ease-in-out;\n  }\n\n  &__label-container {\n    display: flex;\n    margin-left: 12px;\n\n    &--skeleton {\n      --border-radius: 2px;\n      --background-rgb: var(\n        --tp-skeleton-background-rgb,\n        var(--tp-color-neutral-10-rgb)\n      );\n      width: var(--tp-skeleton-label-width, 36px);\n      height: 12px;\n      margin: 0 0 0 12px;\n    }\n  }\n}\n\n//\n// color\n//\n:host(.tp-color.tp-horizontal-chart-bar--spill)\n  .tp-horizontal-chart-bar__progress {\n  @include progress-bg-image(--tp-color-base);\n}\n\n:host(.tp-color) .tp-horizontal-chart-bar__progress {\n  background-color: var(--tp-color-base);\n}\n\n//\n// size\n//\n:host(.tp-horizontal-chart-bar--md) .tp-horizontal-chart-bar__track {\n  height: 12px;\n  border-radius: 6px;\n}\n\n:host(.tp-horizontal-chart-bar--md) .tp-horizontal-chart-bar__progress {\n  min-width: 12px;\n  border-radius: 6px;\n}\n\n//\n// animations\n//\n@keyframes load-horizontal-chart-bar {\n  0% {\n    width: 0%;\n  }\n\n  100% {\n    width: var(--tp-fill-percentage);\n  }\n}\n\n@keyframes progress-spill {\n  0% {\n    background-position: 0% 0%;\n  }\n\n  100% {\n    background-position: 100% 0%;\n  }\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\nimport { createColorClasses } from '../../../utils/functions/color.function';\nimport type { TpColor } from '../../../utils/types/color.type';\nimport { TpHorizontalChartBarSize } from './utils/horizontal-chart-bar.enum';\n\n@Component({\n  tag: 'tp-horizontal-chart-bar',\n  styleUrl: 'horizontal-chart-bar.scss',\n  assetsDirs: ['assets'],\n  shadow: true,\n})\nexport class TpHorizontalChartBar {\n  /**\n   * Define a variação de cor do componente.\n   */\n  @Prop({ reflect: true }) color?: TpColor;\n\n  /**\n   * Define a variação de tamanho do componente.\n   */\n  @Prop({ reflect: true }) size?: TpHorizontalChartBarSize;\n\n  /**\n   * Define o valor da barra de progresso.\n   */\n  @Prop({ reflect: true }) value = 0;\n\n  /**\n   * Define o valor máximo da barra de progresso.\n   */\n  @Prop({ reflect: true }) maxCount = 100;\n\n  /**\n   * Define se um slot será disponibilizado para receber o label do chart.\n   */\n  @Prop({ reflect: true }) noLabel = false;\n\n  /**\n   * Define o estado de carregamento do componente.\n   */\n  @Prop({ reflect: true, mutable: true }) loading?: boolean;\n\n  render() {\n    const { color, size, value, maxCount, noLabel, loading } = this;\n    const percentage = Math.min(Math.max(0, (value / maxCount) * 100), 100);\n\n    const content = loading ? (\n      <div class=\"tp-horizontal-chart-bar__container\">\n        <ion-skeleton-text\n          class=\"tp-horizontal-chart-bar__track tp-horizontal-chart-bar__track--skeleton\"\n          animated\n        ></ion-skeleton-text>\n\n        {!noLabel && (\n          <ion-skeleton-text\n            class=\"tp-horizontal-chart-bar__label-container tp-horizontal-chart-bar__label-container--skeleton\"\n            animated\n          ></ion-skeleton-text>\n        )}\n      </div>\n    ) : (\n      <div class=\"tp-horizontal-chart-bar__container\">\n        <div class=\"tp-horizontal-chart-bar__track\">\n          <div class=\"tp-horizontal-chart-bar__progress\"></div>\n        </div>\n\n        {!noLabel && (\n          <div class=\"tp-horizontal-chart-bar__label-container\">\n            <slot></slot>\n          </div>\n        )}\n      </div>\n    );\n\n    return (\n      <Host\n        class={createColorClasses(color, {\n          'tp-horizontal-chart-bar': true,\n          'tp-horizontal-chart-bar--spill': percentage >= 100,\n          [`tp-horizontal-chart-bar--${size}`]: Boolean(size),\n        })}\n        style={{ '--tp-fill-percentage': `${percentage}%` }}\n      >\n        {content}\n      </Host>\n    );\n  }\n}\n"],"mappings":"iFAAA,MAAMA,EAAwB,iuE,MCWjBC,EAAoB,M,6EAcE,E,cAKG,I,aAKD,M,uBAOnC,MAAAC,GACE,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,MAAEA,EAAKC,SAAEA,EAAQC,QAAEA,EAAOC,QAAEA,GAAYC,KAC3D,MAAMC,EAAaC,KAAKC,IAAID,KAAKE,IAAI,EAAIR,EAAQC,EAAY,KAAM,KAEnE,MAAMQ,EAAUN,EACdO,EAAA,OAAKC,MAAM,sCACTD,EAAA,qBACEC,MAAM,0EACNC,SAAQ,QAGRV,GACAQ,EAAA,qBACEC,MAAM,8FACNC,SAAQ,QAKdF,EAAA,OAAKC,MAAM,sCACTD,EAAA,OAAKC,MAAM,kCACTD,EAAA,OAAKC,MAAM,wCAGXT,GACAQ,EAAA,OAAKC,MAAM,4CACTD,EAAA,eAMR,OACEA,EAACG,EAAI,CACHF,MAAOG,EAAmBhB,EAAO,CAC/B,0BAA2B,KAC3B,iCAAkCO,GAAc,IAChD,CAAC,4BAA4BN,KAASgB,QAAQhB,KAEhDiB,MAAO,CAAE,uBAAwB,GAAGX,OAEnCI,E"}