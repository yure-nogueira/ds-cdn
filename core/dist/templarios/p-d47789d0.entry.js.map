{"version":3,"names":["toggleCss","TpToggleStyle0","TpToggle","this","iconUp","getAssetPath","componentDidLoad","element","host","querySelector","setHeight","elementHeight","_a","scrollHeight","style","maxHeight","open","setTimeout","close","toggle","collapsed","onClickComponent","iconClick","onClickIcon","render","color","h","Host","key","class","createColorClasses","onClick","src"],"sources":["src/components/core/toggle/toggle.scss?tag=tp-toggle&encapsulation=scoped","src/components/core/toggle/toggle.tsx"],"sourcesContent":[":host {\r\n  --tp-background: var(--tp-color-neutral-2);\r\n  --tp-color: var(--tp-color-neutral-10);\r\n  --tp-padding: 24px;\r\n  --tp-border-radius: 0;\r\n  --tp-initial-max-height: 20px;\r\n}\r\n\r\n:host {\r\n  background: var(--tp-background);\r\n  color: var(--tp-color);\r\n  padding: var(--tp-padding);\r\n  border-radius: var(--tp-border-radius);\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n}\r\n\r\n:host .tp-toggle__content {\r\n  max-height: var(--tp-initial-max-height);\r\n  overflow: hidden;\r\n  transition: all .3s;\r\n}\r\n\r\n:host .tp-toggle__bottom {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n}\r\n\r\n:host .tp-toggle__icon {\r\n  align-self: center;\r\n  margin-top: 8px;\r\n  font-size: 24px;\r\n  color: var(--tp-color);\r\n  transition: .3s transform ease;\r\n}\r\n\r\n//\r\n// state\r\n//\r\n\r\n:host(.tp-toggle--collapsed) .tp-toggle__icon {\r\n  transform: rotate(180deg);\r\n}\r\n\r\n//\r\n// icon-click\r\n//\r\n\r\n:host(.tp-toggle--icon-click) {\r\n  cursor: unset;\r\n}\r\n\r\n:host(.tp-toggle--icon-click) .tp-toggle__bottom {\r\n  cursor: pointer;\r\n}\r\n\r\n//\r\n// color\r\n//\r\n\r\n:host(.tp-color) {\r\n  --tp-color: var(--tp-color-contrast);\r\n  --tp-background: var(--tp-color-base);\r\n}","import {\r\n  Component,\r\n  h,\r\n  Host,\r\n  Prop,\r\n  Element,\r\n  Watch,\r\n  getAssetPath,\r\n} from '@stencil/core';\r\nimport { createColorClasses } from '../../../utils/functions/color.function';\r\nimport { TpColor } from '../../../utils/types/color.type';\r\n\r\n@Component({\r\n  tag: 'tp-toggle',\r\n  styleUrl: 'toggle.scss',\r\n  assetsDirs: ['assets'],\r\n  scoped: true,\r\n})\r\nexport class TpToggle {\r\n  private iconUp = getAssetPath('./assets/tp-chevron-up.svg');\r\n\r\n  @Element() host!: HTMLElement;\r\n  element?: HTMLElement;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop({ reflect: true }) color?: TpColor;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) collapsed = true;\r\n\r\n  /**\r\n   * todo\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) iconClick = false;\r\n\r\n  componentDidLoad() {\r\n    (this.element as HTMLElement) = this.host.querySelector(\r\n      '.tp-toggle__content',\r\n    )!;\r\n  }\r\n\r\n  setHeight() {\r\n    const elementHeight = this.element?.scrollHeight;\r\n    (this.element as HTMLElement).style.maxHeight = `${elementHeight}px`;\r\n  }\r\n\r\n  open() {\r\n    this.setHeight();\r\n    setTimeout(() => {\r\n      (this.element as HTMLElement).style.maxHeight = '100%';\r\n    }, 300);\r\n  }\r\n\r\n  close() {\r\n    this.setHeight();\r\n    setTimeout(() => {\r\n      (this.element as HTMLElement).style.maxHeight =\r\n        'var(--tp-initial-max-height)';\r\n    }, 350);\r\n  }\r\n\r\n  @Watch('collapsed')\r\n  toggle() {\r\n    if (!this.collapsed) {\r\n      this.open();\r\n    } else {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  onClickComponent() {\r\n    if (!this.iconClick) {\r\n      this.collapsed = !this.collapsed;\r\n    }\r\n  }\r\n\r\n  onClickIcon() {\r\n    if (this.iconClick) {\r\n      this.collapsed = !this.collapsed;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { collapsed, color, iconClick, iconUp } = this;\r\n\r\n    return (\r\n      <Host\r\n        class={createColorClasses(color, {\r\n          'tp-toggle': true,\r\n          'tp-toggle--collapsed': collapsed,\r\n          'tp-toggle--icon-click': iconClick,\r\n        })}\r\n        onClick={() => {\r\n          this.onClickComponent();\r\n        }}\r\n      >\r\n        <div class=\"tp-toggle__content\">\r\n          <slot></slot>\r\n        </div>\r\n        <div\r\n          class=\"tp-toggle__bottom\"\r\n          onClick={() => {\r\n            this.onClickIcon();\r\n          }}\r\n        >\r\n          <ion-icon class=\"tp-toggle__icon\" src={iconUp}></ion-icon>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"oGAAA,MAAMA,EAAY,ykCAClB,MAAAC,EAAeD,E,MCiBFE,EAAQ,M,yBACXC,KAAAC,OAASC,EAAa,8B,oCAasB,K,eAKA,K,CAEpD,gBAAAC,GACGH,KAAKI,QAA0BJ,KAAKK,KAAKC,cACxC,sB,CAIJ,SAAAC,G,MACE,MAAMC,GAAgBC,EAAAT,KAAKI,WAAO,MAAAK,SAAA,SAAAA,EAAEC,aACnCV,KAAKI,QAAwBO,MAAMC,UAAY,GAAGJ,K,CAGrD,IAAAK,GACEb,KAAKO,YACLO,YAAW,KACRd,KAAKI,QAAwBO,MAAMC,UAAY,MAAM,GACrD,I,CAGL,KAAAG,GACEf,KAAKO,YACLO,YAAW,KACRd,KAAKI,QAAwBO,MAAMC,UAClC,8BAA8B,GAC/B,I,CAIL,MAAAI,GACE,IAAKhB,KAAKiB,UAAW,CACnBjB,KAAKa,M,KACA,CACLb,KAAKe,O,EAIT,gBAAAG,GACE,IAAKlB,KAAKmB,UAAW,CACnBnB,KAAKiB,WAAajB,KAAKiB,S,EAI3B,WAAAG,GACE,GAAIpB,KAAKmB,UAAW,CAClBnB,KAAKiB,WAAajB,KAAKiB,S,EAI3B,MAAAI,GACE,MAAMJ,UAAEA,EAASK,MAAEA,EAAKH,UAAEA,EAASlB,OAAEA,GAAWD,KAEhD,OACEuB,EAACC,EAAI,CAAAC,IAAA,2CACHC,MAAOC,EAAmBL,EAAO,CAC/B,YAAa,KACb,uBAAwBL,EACxB,wBAAyBE,IAE3BS,QAAS,KACP5B,KAAKkB,kBAAkB,GAGzBK,EAAA,OAAAE,IAAA,2CAAKC,MAAM,sBACTH,EAAA,QAAAE,IAAA,8CAEFF,EAAA,OAAAE,IAAA,2CACEC,MAAM,oBACNE,QAAS,KACP5B,KAAKoB,aAAa,GAGpBG,EAAA,YAAAE,IAAA,2CAAUC,MAAM,kBAAkBG,IAAK5B,K"}