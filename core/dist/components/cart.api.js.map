{"file":"cart.api.js","mappings":"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","names":[],"sources":["src/utils/api/ecommerce/cart.api.ts"],"sourcesContent":["import camelcaseKeys from 'camelcase-keys';\r\nimport { ActionCart, CartInfo } from './utils/interfaces/cart.interface';\r\nimport { ApiResponse } from './utils/interfaces/responses.interface';\r\nimport { API_CART_ACTIONS } from './utils/constants/requests.constant';\r\n\r\nexport class ApiCart {\r\n  static async getCart() {\r\n    const rawResponse = await fetch(`${process.env.AJAX_URL}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: new URLSearchParams(\r\n        Object.assign({ action: API_CART_ACTIONS.getCart }),\r\n      ),\r\n    });\r\n\r\n    const response: ApiResponse = await rawResponse.json();\r\n    const { data: rawData } = response;\r\n    const data = camelcaseKeys(rawData, { deep: true });\r\n    const { cart, cartTotal, cartCount }: CartInfo = data;\r\n\r\n    return { cart, cartTotal, cartCount };\r\n  }\r\n\r\n  static async addToCart(productIdNumber: number, quantityNumber: number) {\r\n    const productId = productIdNumber.toString();\r\n    const quantity = quantityNumber.toString();\r\n    const additionalData = { productId, quantity };\r\n\r\n    const rawResponse = await fetch(`${process.env.AJAX_URL}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: new URLSearchParams(\r\n        Object.assign({ action: API_CART_ACTIONS.addToCart }, additionalData),\r\n      ),\r\n    });\r\n\r\n    const response: ApiResponse = await rawResponse.json();\r\n    const { data } = response;\r\n    const addedToCartData: ActionCart = camelcaseKeys(data, {\r\n      deep: true,\r\n    });\r\n\r\n    return addedToCartData;\r\n  }\r\n\r\n  static async removeFromCart(productId: number) {\r\n    const rawResponse = await fetch(`${process.env.AJAX_URL}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: new URLSearchParams({\r\n        action: API_CART_ACTIONS.removeFromCart,\r\n        productId: `${productId}`,\r\n      }),\r\n    });\r\n\r\n    const response: ApiResponse = await rawResponse.json();\r\n    const { data: rawData } = response;\r\n    const data: ActionCart = camelcaseKeys(rawData, { deep: true });\r\n    return data;\r\n  }\r\n\r\n  static async updateCart(cartItemKey: string, quantityNumber: number) {\r\n    const quantity = quantityNumber.toString();\r\n    const additionalData = { cartItemKey, quantity };\r\n\r\n    const rawResponse = await fetch(`${process.env.AJAX_URL}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: new URLSearchParams(\r\n        Object.assign({ action: API_CART_ACTIONS.updateCart }, additionalData),\r\n      ),\r\n    });\r\n\r\n    const response: ApiResponse = await rawResponse.json();\r\n    const { data: rawData } = response;\r\n    const data: ActionCart = camelcaseKeys(rawData, { deep: true });\r\n    return data;\r\n  }\r\n}\r\n"],"version":3}